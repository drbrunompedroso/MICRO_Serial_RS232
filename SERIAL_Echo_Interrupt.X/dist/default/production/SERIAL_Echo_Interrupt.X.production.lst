

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Aug 24 11:12:44 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23   000000                     
    24                           ; Generated 23/03/2023 GMT
    25                           ; 
    26                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F4520 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58   000000                     _RCREG	set	4014
    59   000000                     _TXREG	set	4013
    60   000000                     _SPBRG	set	4015
    61   000000                     _BAUDCTLbits	set	4024
    62   000000                     _PIR1bits	set	3998
    63   000000                     _TRMT	set	32097
    64   000000                     _OSCTUNE	set	3995
    65   000000                     _RCSTAbits	set	4011
    66   000000                     _TXSTAbits	set	4012
    67   000000                     _RCIF	set	31989
    68   000000                     _ADCON1	set	4033
    69   000000                     _OSCCON	set	4051
    70   000000                     _INTCON	set	4082
    71   000000                     _PIE1	set	3997
    72                           
    73                           ; #config settings
    74                           
    75                           	psect	cinit
    76   000092                     __pcinit:
    77                           	callstack 0
    78   000092                     start_initialization:
    79                           	callstack 0
    80   000092                     __initialization:
    81                           	callstack 0
    82                           
    83                           ; Clear objects allocated to COMRAM (64 bytes)
    84   000092  EE00  F001         	lfsr	0,__pbssCOMRAM
    85   000096  0E40               	movlw	64
    86   000098                     clear_0:
    87   000098  6AEE               	clrf	postinc0,c
    88   00009A  06E8               	decf	wreg,f,c
    89   00009C  E1FD               	bnz	clear_0
    90   00009E                     end_of_initialization:
    91                           	callstack 0
    92   00009E                     __end_of__initialization:
    93                           	callstack 0
    94   00009E  9046               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    95   0000A0  9246               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    96   0000A2  0100               	movlb	0
    97   0000A4  EF3D  F000         	goto	_main	;jump to C main() function
    98                           
    99                           	psect	bssCOMRAM
   100   000001                     __pbssCOMRAM:
   101                           	callstack 0
   102   000001                     _data:
   103                           	callstack 0
   104   000001                     	ds	64
   105                           
   106                           	psect	cstackCOMRAM
   107   000041                     __pcstackCOMRAM:
   108                           	callstack 0
   109   000041                     eusart_write@c:
   110                           	callstack 0
   111                           
   112                           ; 1 bytes @ 0x0
   113   000041                     	ds	1
   114   000042                     eusart_string@str:
   115                           	callstack 0
   116                           
   117                           ; 2 bytes @ 0x1
   118   000042                     	ds	2
   119   000044                     ??_half_Duplex:
   120                           
   121                           ; 1 bytes @ 0x3
   122   000044                     	ds	2
   123   000046                     
   124                           ; 1 bytes @ 0x5
   125 ;;
   126 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   127 ;;
   128 ;; *************** function _main *****************
   129 ;; Defined at:
   130 ;;		line 95 in file "Program_main.c"
   131 ;; Parameters:    Size  Location     Type
   132 ;;		None
   133 ;; Auto vars:     Size  Location     Type
   134 ;;		None
   135 ;; Return value:  Size  Location     Type
   136 ;;                  1    wreg      void 
   137 ;; Registers used:
   138 ;;		wreg, status,2, cstack
   139 ;; Tracked objects:
   140 ;;		On entry : 0/0
   141 ;;		On exit  : 0/0
   142 ;;		Unchanged: 0/0
   143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   144 ;;      Params:         0       0       0       0       0       0       0
   145 ;;      Locals:         0       0       0       0       0       0       0
   146 ;;      Temps:          0       0       0       0       0       0       0
   147 ;;      Totals:         0       0       0       0       0       0       0
   148 ;;Total ram usage:        0 bytes
   149 ;; Hardware stack levels required when called: 4
   150 ;; This function calls:
   151 ;;		_config_FOSC
   152 ;;		_config_IO
   153 ;;		_config_Interrupt
   154 ;;		_eusart_init
   155 ;; This function is called by:
   156 ;;		Startup code after reset
   157 ;; This function uses a non-reentrant model
   158 ;;
   159                           
   160                           	psect	text0
   161   00007A                     __ptext0:
   162                           	callstack 0
   163   00007A                     _main:
   164                           	callstack 27
   165   00007A                     
   166                           ;Program_main.c: 97:     config_FOSC();
   167   00007A  EC76  F000         	call	_config_FOSC	;wreg free
   168                           
   169                           ;Program_main.c: 98:     config_IO();
   170   00007E  EC7B  F000         	call	_config_IO	;wreg free
   171                           
   172                           ;Program_main.c: 99:     config_Interrupt();
   173   000082  EC71  F000         	call	_config_Interrupt	;wreg free
   174                           
   175                           ;Program_main.c: 100:     eusart_init();
   176   000086  EC5F  F000         	call	_eusart_init	;wreg free
   177   00008A                     l77:
   178   00008A  EF45  F000         	goto	l77
   179   00008E  EF07  F000         	goto	start
   180   000092                     __end_of_main:
   181                           	callstack 0
   182                           
   183 ;; *************** function _eusart_init *****************
   184 ;; Defined at:
   185 ;;		line 4 in file "eusart.c"
   186 ;; Parameters:    Size  Location     Type
   187 ;;		None
   188 ;; Auto vars:     Size  Location     Type
   189 ;;		None
   190 ;; Return value:  Size  Location     Type
   191 ;;                  1    wreg      void 
   192 ;; Registers used:
   193 ;;		wreg, status,2
   194 ;; Tracked objects:
   195 ;;		On entry : 0/0
   196 ;;		On exit  : 0/0
   197 ;;		Unchanged: 0/0
   198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   199 ;;      Params:         0       0       0       0       0       0       0
   200 ;;      Locals:         0       0       0       0       0       0       0
   201 ;;      Temps:          0       0       0       0       0       0       0
   202 ;;      Totals:         0       0       0       0       0       0       0
   203 ;;Total ram usage:        0 bytes
   204 ;; Hardware stack levels used: 1
   205 ;; Hardware stack levels required when called: 3
   206 ;; This function calls:
   207 ;;		Nothing
   208 ;; This function is called by:
   209 ;;		_main
   210 ;; This function uses a non-reentrant model
   211 ;;
   212                           
   213                           	psect	text1
   214   0000BE                     __ptext1:
   215                           	callstack 0
   216   0000BE                     _eusart_init:
   217                           	callstack 27
   218   0000BE                     
   219                           ;eusart.c: 6:     TXSTAbits.TXEN = 1;
   220   0000BE  8AAC               	bsf	172,5,c	;volatile
   221                           
   222                           ;eusart.c: 7:     RCSTAbits.CREN = 1;
   223   0000C0  88AB               	bsf	171,4,c	;volatile
   224                           
   225                           ;eusart.c: 8:     TXSTAbits.SYNC = 0;
   226   0000C2  98AC               	bcf	172,4,c	;volatile
   227                           
   228                           ;eusart.c: 9:     RCSTAbits.SPEN = 1;
   229   0000C4  8EAB               	bsf	171,7,c	;volatile
   230                           
   231                           ;eusart.c: 10:     TXSTAbits.BRGH = 0;
   232   0000C6  94AC               	bcf	172,2,c	;volatile
   233                           
   234                           ;eusart.c: 11:     BAUDCTLbits.BRG16 = 0;
   235   0000C8  96B8               	bcf	184,3,c	;volatile
   236   0000CA                     
   237                           ;eusart.c: 12:     SPBRG = 12;
   238   0000CA  0E0C               	movlw	12
   239   0000CC  6EAF               	movwf	175,c	;volatile
   240   0000CE  0012               	return		;funcret
   241   0000D0                     __end_of_eusart_init:
   242                           	callstack 0
   243                           
   244 ;; *************** function _config_Interrupt *****************
   245 ;; Defined at:
   246 ;;		line 79 in file "Program_main.c"
   247 ;; Parameters:    Size  Location     Type
   248 ;;		None
   249 ;; Auto vars:     Size  Location     Type
   250 ;;		None
   251 ;; Return value:  Size  Location     Type
   252 ;;                  1    wreg      void 
   253 ;; Registers used:
   254 ;;		wreg, status,2
   255 ;; Tracked objects:
   256 ;;		On entry : 0/0
   257 ;;		On exit  : 0/0
   258 ;;		Unchanged: 0/0
   259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   260 ;;      Params:         0       0       0       0       0       0       0
   261 ;;      Locals:         0       0       0       0       0       0       0
   262 ;;      Temps:          0       0       0       0       0       0       0
   263 ;;      Totals:         0       0       0       0       0       0       0
   264 ;;Total ram usage:        0 bytes
   265 ;; Hardware stack levels used: 1
   266 ;; Hardware stack levels required when called: 3
   267 ;; This function calls:
   268 ;;		Nothing
   269 ;; This function is called by:
   270 ;;		_main
   271 ;; This function uses a non-reentrant model
   272 ;;
   273                           
   274                           	psect	text2
   275   0000E2                     __ptext2:
   276                           	callstack 0
   277   0000E2                     _config_Interrupt:
   278                           	callstack 27
   279   0000E2                     
   280                           ;Program_main.c: 81:     INTCON = 0XC0;
   281   0000E2  0EC0               	movlw	192
   282   0000E4  6EF2               	movwf	242,c	;volatile
   283                           
   284                           ;Program_main.c: 82:     PIE1 = 0X20;
   285   0000E6  0E20               	movlw	32
   286   0000E8  6E9D               	movwf	157,c	;volatile
   287   0000EA  0012               	return		;funcret
   288   0000EC                     __end_of_config_Interrupt:
   289                           	callstack 0
   290                           
   291 ;; *************** function _config_IO *****************
   292 ;; Defined at:
   293 ;;		line 74 in file "Program_main.c"
   294 ;; Parameters:    Size  Location     Type
   295 ;;		None
   296 ;; Auto vars:     Size  Location     Type
   297 ;;		None
   298 ;; Return value:  Size  Location     Type
   299 ;;                  1    wreg      void 
   300 ;; Registers used:
   301 ;;		wreg, status,2
   302 ;; Tracked objects:
   303 ;;		On entry : 0/0
   304 ;;		On exit  : 0/0
   305 ;;		Unchanged: 0/0
   306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   307 ;;      Params:         0       0       0       0       0       0       0
   308 ;;      Locals:         0       0       0       0       0       0       0
   309 ;;      Temps:          0       0       0       0       0       0       0
   310 ;;      Totals:         0       0       0       0       0       0       0
   311 ;;Total ram usage:        0 bytes
   312 ;; Hardware stack levels used: 1
   313 ;; Hardware stack levels required when called: 3
   314 ;; This function calls:
   315 ;;		Nothing
   316 ;; This function is called by:
   317 ;;		_main
   318 ;; This function uses a non-reentrant model
   319 ;;
   320                           
   321                           	psect	text3
   322   0000F6                     __ptext3:
   323                           	callstack 0
   324   0000F6                     _config_IO:
   325                           	callstack 27
   326   0000F6                     
   327                           ;Program_main.c: 76:     ADCON1 = 0X0F;
   328   0000F6  0E0F               	movlw	15
   329   0000F8  6EC1               	movwf	193,c	;volatile
   330   0000FA  0012               	return		;funcret
   331   0000FC                     __end_of_config_IO:
   332                           	callstack 0
   333                           
   334 ;; *************** function _config_FOSC *****************
   335 ;; Defined at:
   336 ;;		line 69 in file "Program_main.c"
   337 ;; Parameters:    Size  Location     Type
   338 ;;		None
   339 ;; Auto vars:     Size  Location     Type
   340 ;;		None
   341 ;; Return value:  Size  Location     Type
   342 ;;                  1    wreg      void 
   343 ;; Registers used:
   344 ;;		wreg, status,2
   345 ;; Tracked objects:
   346 ;;		On entry : 0/0
   347 ;;		On exit  : 0/0
   348 ;;		Unchanged: 0/0
   349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   350 ;;      Params:         0       0       0       0       0       0       0
   351 ;;      Locals:         0       0       0       0       0       0       0
   352 ;;      Temps:          0       0       0       0       0       0       0
   353 ;;      Totals:         0       0       0       0       0       0       0
   354 ;;Total ram usage:        0 bytes
   355 ;; Hardware stack levels used: 1
   356 ;; Hardware stack levels required when called: 3
   357 ;; This function calls:
   358 ;;		Nothing
   359 ;; This function is called by:
   360 ;;		_main
   361 ;; This function uses a non-reentrant model
   362 ;;
   363                           
   364                           	psect	text4
   365   0000EC                     __ptext4:
   366                           	callstack 0
   367   0000EC                     _config_FOSC:
   368                           	callstack 27
   369   0000EC                     
   370                           ;Program_main.c: 71:     OSCCON = 0X00;
   371   0000EC  0E00               	movlw	0
   372   0000EE  6ED3               	movwf	211,c	;volatile
   373                           
   374                           ;Program_main.c: 72:     OSCTUNE = 0X00;
   375   0000F0  0E00               	movlw	0
   376   0000F2  6E9B               	movwf	155,c	;volatile
   377   0000F4  0012               	return		;funcret
   378   0000F6                     __end_of_config_FOSC:
   379                           	callstack 0
   380                           
   381 ;; *************** function _half_Duplex *****************
   382 ;; Defined at:
   383 ;;		line 85 in file "Program_main.c"
   384 ;; Parameters:    Size  Location     Type
   385 ;;		None
   386 ;; Auto vars:     Size  Location     Type
   387 ;;		None
   388 ;; Return value:  Size  Location     Type
   389 ;;                  1    wreg      void 
   390 ;; Registers used:
   391 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   392 ;; Tracked objects:
   393 ;;		On entry : 0/0
   394 ;;		On exit  : 0/0
   395 ;;		Unchanged: 0/0
   396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   397 ;;      Params:         0       0       0       0       0       0       0
   398 ;;      Locals:         0       0       0       0       0       0       0
   399 ;;      Temps:          2       0       0       0       0       0       0
   400 ;;      Totals:         2       0       0       0       0       0       0
   401 ;;Total ram usage:        2 bytes
   402 ;; Hardware stack levels used: 1
   403 ;; Hardware stack levels required when called: 2
   404 ;; This function calls:
   405 ;;		_eusart_read
   406 ;;		_eusart_string
   407 ;; This function is called by:
   408 ;;		Interrupt level 2
   409 ;; This function uses a non-reentrant model
   410 ;;
   411                           
   412                           	psect	intcode
   413   000008                     __pintcode:
   414                           	callstack 0
   415   000008                     _half_Duplex:
   416                           	callstack 27
   417                           
   418                           ;incstack = 0
   419   000008  8246               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   420   00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
   421                           
   422                           	psect	intcode_body
   423   000012                     __pintcode_body:
   424                           	callstack 27
   425   000012                     int_func:
   426                           	callstack 27
   427   000012  0006               	pop		; remove dummy address from shadow register refresh
   428   000014  CFD9 F044          	movff	fsr2l,??_half_Duplex
   429   000018  CFDA F045          	movff	fsr2h,??_half_Duplex+1
   430   00001C                     
   431                           ;Program_main.c: 87:     if(PIR1bits.RCIF == 1)
   432   00001C  AA9E               	btfss	158,5,c	;volatile
   433   00001E  EF13  F000         	goto	i2u6_41
   434   000022  EF15  F000         	goto	i2u6_40
   435   000026                     i2u6_41:
   436   000026  EF1E  F000         	goto	i2l808
   437   00002A                     i2u6_40:
   438   00002A                     
   439                           ;Program_main.c: 88:     {;Program_main.c: 89:       data[0] = eusart_read();
   440   00002A  EC68  F000         	call	_eusart_read	;wreg free
   441   00002E  6E01               	movwf	_data^0,c
   442   000030                     
   443                           ;Program_main.c: 90:       eusart_string(data);
   444   000030  0E01               	movlw	low _data
   445   000032  6E42               	movwf	eusart_string@str^0,c
   446   000034  0E00               	movlw	high _data
   447   000036  6E43               	movwf	(eusart_string@str+1)^0,c
   448   000038  EC25  F000         	call	_eusart_string	;wreg free
   449   00003C                     i2l808:
   450                           
   451                           ;Program_main.c: 92:     PIR1bits.RCIF = 0;
   452   00003C  9A9E               	bcf	158,5,c	;volatile
   453   00003E  C045  FFDA         	movff	??_half_Duplex+1,fsr2h
   454   000042  C044  FFD9         	movff	??_half_Duplex,fsr2l
   455   000046  9246               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   456   000048  0011               	retfie		f
   457   00004A                     __end_of_half_Duplex:
   458                           	callstack 0
   459                           
   460 ;; *************** function _eusart_string *****************
   461 ;; Defined at:
   462 ;;		line 23 in file "eusart.c"
   463 ;; Parameters:    Size  Location     Type
   464 ;;  str             2    1[COMRAM] PTR unsigned char 
   465 ;;		 -> data(64), 
   466 ;; Auto vars:     Size  Location     Type
   467 ;;		None
   468 ;; Return value:  Size  Location     Type
   469 ;;                  1    wreg      void 
   470 ;; Registers used:
   471 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   472 ;; Tracked objects:
   473 ;;		On entry : 0/0
   474 ;;		On exit  : 0/0
   475 ;;		Unchanged: 0/0
   476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   477 ;;      Params:         2       0       0       0       0       0       0
   478 ;;      Locals:         0       0       0       0       0       0       0
   479 ;;      Temps:          0       0       0       0       0       0       0
   480 ;;      Totals:         2       0       0       0       0       0       0
   481 ;;Total ram usage:        2 bytes
   482 ;; Hardware stack levels used: 1
   483 ;; Hardware stack levels required when called: 1
   484 ;; This function calls:
   485 ;;		_eusart_write
   486 ;; This function is called by:
   487 ;;		_half_Duplex
   488 ;; This function uses a non-reentrant model
   489 ;;
   490                           
   491                           	psect	text6
   492   00004A                     __ptext6:
   493                           	callstack 0
   494   00004A                     _eusart_string:
   495                           	callstack 27
   496   00004A                     
   497                           ;eusart.c: 23: void eusart_string(char *str);eusart.c: 24: {;eusart.c: 25:     while(*st
      +                          r!='\0')
   498   00004A  EF30  F000         	goto	i2l800
   499   00004E                     i2l796:
   500                           
   501                           ;eusart.c: 26:     {;eusart.c: 27:         eusart_write(*str);
   502   00004E  C042  FFD9         	movff	eusart_string@str,fsr2l
   503   000052  C043  FFDA         	movff	eusart_string@str+1,fsr2h
   504   000056  50DF               	movf	indf2,w,c
   505   000058  EC54  F000         	call	_eusart_write
   506   00005C                     
   507                           ;eusart.c: 28:         str++;
   508   00005C  4A42               	infsnz	eusart_string@str^0,f,c
   509   00005E  2A43               	incf	(eusart_string@str+1)^0,f,c
   510   000060                     i2l800:
   511                           
   512                           ;eusart.c: 25:     while(*str!='\0')
   513   000060  C042  FFD9         	movff	eusart_string@str,fsr2l
   514   000064  C043  FFDA         	movff	eusart_string@str+1,fsr2h
   515   000068  50DF               	movf	indf2,w,c
   516   00006A  A4D8               	btfss	status,2,c
   517   00006C  EF3A  F000         	goto	i2u5_41
   518   000070  EF3C  F000         	goto	i2u5_40
   519   000074                     i2u5_41:
   520   000074  EF27  F000         	goto	i2l796
   521   000078                     i2u5_40:
   522   000078  0012               	return		;funcret
   523   00007A                     __end_of_eusart_string:
   524                           	callstack 0
   525                           
   526 ;; *************** function _eusart_write *****************
   527 ;; Defined at:
   528 ;;		line 16 in file "eusart.c"
   529 ;; Parameters:    Size  Location     Type
   530 ;;  c               1    wreg     unsigned char 
   531 ;; Auto vars:     Size  Location     Type
   532 ;;  c               1    0[COMRAM] unsigned char 
   533 ;; Return value:  Size  Location     Type
   534 ;;                  1    wreg      void 
   535 ;; Registers used:
   536 ;;		wreg
   537 ;; Tracked objects:
   538 ;;		On entry : 0/0
   539 ;;		On exit  : 0/0
   540 ;;		Unchanged: 0/0
   541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   542 ;;      Params:         0       0       0       0       0       0       0
   543 ;;      Locals:         1       0       0       0       0       0       0
   544 ;;      Temps:          0       0       0       0       0       0       0
   545 ;;      Totals:         1       0       0       0       0       0       0
   546 ;;Total ram usage:        1 bytes
   547 ;; Hardware stack levels used: 1
   548 ;; This function calls:
   549 ;;		Nothing
   550 ;; This function is called by:
   551 ;;		_eusart_string
   552 ;; This function uses a non-reentrant model
   553 ;;
   554                           
   555                           	psect	text7
   556   0000A8                     __ptext7:
   557                           	callstack 0
   558   0000A8                     _eusart_write:
   559                           	callstack 27
   560                           
   561                           ;incstack = 0
   562                           ;eusart_write@c stored from wreg
   563   0000A8  6E41               	movwf	eusart_write@c^0,c
   564   0000AA                     i2l22:
   565   0000AA  A2AC               	btfss	4012,1,c	;volatile
   566   0000AC  EF5A  F000         	goto	i2u1_41
   567   0000B0  EF5C  F000         	goto	i2u1_40
   568   0000B4                     i2u1_41:
   569   0000B4  EF55  F000         	goto	i2l22
   570   0000B8                     i2u1_40:
   571   0000B8                     
   572                           ;eusart.c: 19:     TXREG = c;
   573   0000B8  C041  FFAD         	movff	eusart_write@c,4013	;volatile
   574   0000BC  0012               	return		;funcret
   575   0000BE                     __end_of_eusart_write:
   576                           	callstack 0
   577                           
   578 ;; *************** function _eusart_read *****************
   579 ;; Defined at:
   580 ;;		line 33 in file "eusart.c"
   581 ;; Parameters:    Size  Location     Type
   582 ;;		None
   583 ;; Auto vars:     Size  Location     Type
   584 ;;		None
   585 ;; Return value:  Size  Location     Type
   586 ;;                  1    wreg      unsigned char 
   587 ;; Registers used:
   588 ;;		wreg, status,2
   589 ;; Tracked objects:
   590 ;;		On entry : 0/0
   591 ;;		On exit  : 0/0
   592 ;;		Unchanged: 0/0
   593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   594 ;;      Params:         0       0       0       0       0       0       0
   595 ;;      Locals:         0       0       0       0       0       0       0
   596 ;;      Temps:          0       0       0       0       0       0       0
   597 ;;      Totals:         0       0       0       0       0       0       0
   598 ;;Total ram usage:        0 bytes
   599 ;; Hardware stack levels used: 1
   600 ;; This function calls:
   601 ;;		Nothing
   602 ;; This function is called by:
   603 ;;		_half_Duplex
   604 ;; This function uses a non-reentrant model
   605 ;;
   606                           
   607                           	psect	text8
   608   0000D0                     __ptext8:
   609                           	callstack 0
   610   0000D0                     _eusart_read:
   611                           	callstack 28
   612   0000D0                     i2l34:
   613   0000D0  AA9E               	btfss	3998,5,c	;volatile
   614   0000D2  EF6D  F000         	goto	i2u3_41
   615   0000D6  EF6F  F000         	goto	i2u3_40
   616   0000DA                     i2u3_41:
   617   0000DA  EF68  F000         	goto	i2l34
   618   0000DE                     i2u3_40:
   619   0000DE                     
   620                           ;eusart.c: 36:     return RCREG;
   621   0000DE  50AE               	movf	174,w,c	;volatile
   622   0000E0  0012               	return		;funcret
   623   0000E2                     __end_of_eusart_read:
   624                           	callstack 0
   625   000000                     
   626                           	psect	rparam
   627   000000                     
   628                           	psect	temp
   629   000046                     btemp:
   630                           	callstack 0
   631   000046                     	ds	1
   632   000000                     int$flags	set	btemp
   633   000000                     wtemp8	set	btemp+1
   634   000000                     ttemp5	set	btemp+1
   635   000000                     ttemp6	set	btemp+4
   636   000000                     ttemp7	set	btemp+8
   637                           
   638                           	psect	idloc
   639                           
   640                           ;Config register IDLOC0 @ 0x200000
   641                           ;	unspecified, using default values
   642   200000                     	org	2097152
   643   200000  FF                 	db	255
   644                           
   645                           ;Config register IDLOC1 @ 0x200001
   646                           ;	unspecified, using default values
   647   200001                     	org	2097153
   648   200001  FF                 	db	255
   649                           
   650                           ;Config register IDLOC2 @ 0x200002
   651                           ;	unspecified, using default values
   652   200002                     	org	2097154
   653   200002  FF                 	db	255
   654                           
   655                           ;Config register IDLOC3 @ 0x200003
   656                           ;	unspecified, using default values
   657   200003                     	org	2097155
   658   200003  FF                 	db	255
   659                           
   660                           ;Config register IDLOC4 @ 0x200004
   661                           ;	unspecified, using default values
   662   200004                     	org	2097156
   663   200004  FF                 	db	255
   664                           
   665                           ;Config register IDLOC5 @ 0x200005
   666                           ;	unspecified, using default values
   667   200005                     	org	2097157
   668   200005  FF                 	db	255
   669                           
   670                           ;Config register IDLOC6 @ 0x200006
   671                           ;	unspecified, using default values
   672   200006                     	org	2097158
   673   200006  FF                 	db	255
   674                           
   675                           ;Config register IDLOC7 @ 0x200007
   676                           ;	unspecified, using default values
   677   200007                     	org	2097159
   678   200007  FF                 	db	255
   679                           
   680                           	psect	config
   681                           
   682                           ; Padding undefined space
   683   300000                     	org	3145728
   684   300000  FF                 	db	255
   685                           
   686                           ;Config register CONFIG1H @ 0x300001
   687                           ;	Oscillator Selection bits
   688                           ;	OSC = HS, HS oscillator
   689                           ;	Fail-Safe Clock Monitor Enable bit
   690                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   691                           ;	Internal/External Oscillator Switchover bit
   692                           ;	IESO = OFF, Oscillator Switchover mode disabled
   693   300001                     	org	3145729
   694   300001  02                 	db	2
   695                           
   696                           ;Config register CONFIG2L @ 0x300002
   697                           ;	Power-up Timer Enable bit
   698                           ;	PWRT = OFF, PWRT disabled
   699                           ;	Brown-out Reset Enable bits
   700                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
   701                           ;	Brown Out Reset Voltage bits
   702                           ;	BORV = 3, Minimum setting
   703   300002                     	org	3145730
   704   300002  19                 	db	25
   705                           
   706                           ;Config register CONFIG2H @ 0x300003
   707                           ;	Watchdog Timer Enable bit
   708                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   709                           ;	Watchdog Timer Postscale Select bits
   710                           ;	WDTPS = 32768, 1:32768
   711   300003                     	org	3145731
   712   300003  1E                 	db	30
   713                           
   714                           ; Padding undefined space
   715   300004                     	org	3145732
   716   300004  FF                 	db	255
   717                           
   718                           ;Config register CONFIG3H @ 0x300005
   719                           ;	CCP2 MUX bit
   720                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   721                           ;	PORTB A/D Enable bit
   722                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   723                           ;	Low-Power Timer1 Oscillator Enable bit
   724                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   725                           ;	MCLR Pin Enable bit
   726                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   727   300005                     	org	3145733
   728   300005  81                 	db	129
   729                           
   730                           ;Config register CONFIG4L @ 0x300006
   731                           ;	Stack Full/Underflow Reset Enable bit
   732                           ;	STVREN = ON, Stack full/underflow will cause Reset
   733                           ;	Single-Supply ICSP Enable bit
   734                           ;	LVP = OFF, Single-Supply ICSP disabled
   735                           ;	Extended Instruction Set Enable bit
   736                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   737                           ;	Background Debugger Enable bit
   738                           ;	DEBUG = 0x1, unprogrammed default
   739   300006                     	org	3145734
   740   300006  81                 	db	129
   741                           
   742                           ; Padding undefined space
   743   300007                     	org	3145735
   744   300007  FF                 	db	255
   745                           
   746                           ;Config register CONFIG5L @ 0x300008
   747                           ;	Code Protection bit
   748                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
   749                           ;	Code Protection bit
   750                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
   751                           ;	Code Protection bit
   752                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
   753                           ;	Code Protection bit
   754                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
   755   300008                     	org	3145736
   756   300008  0F                 	db	15
   757                           
   758                           ;Config register CONFIG5H @ 0x300009
   759                           ;	Boot Block Code Protection bit
   760                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   761                           ;	Data EEPROM Code Protection bit
   762                           ;	CPD = OFF, Data EEPROM not code-protected
   763   300009                     	org	3145737
   764   300009  C0                 	db	192
   765                           
   766                           ;Config register CONFIG6L @ 0x30000A
   767                           ;	Write Protection bit
   768                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
   769                           ;	Write Protection bit
   770                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
   771                           ;	Write Protection bit
   772                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
   773                           ;	Write Protection bit
   774                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
   775   30000A                     	org	3145738
   776   30000A  0F                 	db	15
   777                           
   778                           ;Config register CONFIG6H @ 0x30000B
   779                           ;	Configuration Register Write Protection bit
   780                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   781                           ;	Boot Block Write Protection bit
   782                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
   783                           ;	Data EEPROM Write Protection bit
   784                           ;	WRTD = OFF, Data EEPROM not write-protected
   785   30000B                     	org	3145739
   786   30000B  E0                 	db	224
   787                           
   788                           ;Config register CONFIG7L @ 0x30000C
   789                           ;	Table Read Protection bit
   790                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
   791                           ;	Table Read Protection bit
   792                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
   793                           ;	Table Read Protection bit
   794                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
   795                           ;	Table Read Protection bit
   796                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
   797   30000C                     	org	3145740
   798   30000C  0F                 	db	15
   799                           
   800                           ;Config register CONFIG7H @ 0x30000D
   801                           ;	Boot Block Table Read Protection bit
   802                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   803   30000D                     	org	3145741
   804   30000D  40                 	db	64
   805                           tosu	equ	0xFFF
   806                           tosh	equ	0xFFE
   807                           tosl	equ	0xFFD
   808                           stkptr	equ	0xFFC
   809                           pclatu	equ	0xFFB
   810                           pclath	equ	0xFFA
   811                           pcl	equ	0xFF9
   812                           tblptru	equ	0xFF8
   813                           tblptrh	equ	0xFF7
   814                           tblptrl	equ	0xFF6
   815                           tablat	equ	0xFF5
   816                           prodh	equ	0xFF4
   817                           prodl	equ	0xFF3
   818                           indf0	equ	0xFEF
   819                           postinc0	equ	0xFEE
   820                           postdec0	equ	0xFED
   821                           preinc0	equ	0xFEC
   822                           plusw0	equ	0xFEB
   823                           fsr0h	equ	0xFEA
   824                           fsr0l	equ	0xFE9
   825                           wreg	equ	0xFE8
   826                           indf1	equ	0xFE7
   827                           postinc1	equ	0xFE6
   828                           postdec1	equ	0xFE5
   829                           preinc1	equ	0xFE4
   830                           plusw1	equ	0xFE3
   831                           fsr1h	equ	0xFE2
   832                           fsr1l	equ	0xFE1
   833                           bsr	equ	0xFE0
   834                           indf2	equ	0xFDF
   835                           postinc2	equ	0xFDE
   836                           postdec2	equ	0xFDD
   837                           preinc2	equ	0xFDC
   838                           plusw2	equ	0xFDB
   839                           fsr2h	equ	0xFDA
   840                           fsr2l	equ	0xFD9
   841                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         64
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126      5      69
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    eusart_string@str	PTR unsigned char  size(2) Largest target is 64
		 -> data(COMRAM[64]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _half_Duplex in COMRAM

    _half_Duplex->_eusart_string
    _eusart_string->_eusart_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _half_Duplex in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _half_Duplex in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _half_Duplex in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _half_Duplex in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _half_Duplex in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _half_Duplex in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                        _config_FOSC
                          _config_IO
                   _config_Interrupt
                        _eusart_init
 ---------------------------------------------------------------------------------
 (1) _eusart_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_Interrupt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_IO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_FOSC                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _half_Duplex                                          2     2      0     136
                                              3 COMRAM     2     2      0
                        _eusart_read
                      _eusart_string
 ---------------------------------------------------------------------------------
 (3) _eusart_string                                        2     0      2     136
                                              1 COMRAM     2     0      2
                       _eusart_write
 ---------------------------------------------------------------------------------
 (4) _eusart_write                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _eusart_read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config_FOSC
   _config_IO
   _config_Interrupt
   _eusart_init

 _half_Duplex (ROOT)
   _eusart_read
   _eusart_string
     _eusart_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      25        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E      5      45       1       54.8%
BITBIGSFRhhhl       1E      0       0      17        0.0%
BITBIGSFRlll        1B      0       0      23        0.0%
BITBIGSFRhhlh       11      0       0      18        0.0%
BITBIGSFRhhhh        D      0       0      16        0.0%
BITBIGSFRlh          C      0       0      21        0.0%
BITBIGSFRhlh         8      0       0      20        0.0%
BITBIGSFRhhll        8      0       0      19        0.0%
BITBIGSFRllh         1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      45      24        0.0%
DATA                 0      0      45       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Aug 24 11:12:44 2023

                      l19 00CE                        l60 00F4                        l63 00FA  
                      l66 00EA                        l77 008A                        l78 008A  
                     l760 00BE                       l762 00CA                       l780 00F6  
                     l782 00E2                       l792 007A                       l778 00EC  
                     wreg 000FE8             eusart_write@c 0041                      _PIE1 000F9D  
                    _RCIF 007CF5                      i2l22 00AA                      i2l31 0078  
                    i2l25 00BC                      i2l34 00D0                      i2l37 00E0  
                    i2l72 003E                      _TRMT 007D61                      _data 0001  
                    _main 007A                      fsr2h 000FDA                      indf2 000FDF  
                    fsr2l 000FD9                      btemp 0046                      start 000E  
            ___param_bank 000000                     ?_main 0041                     i2l800 0060  
                   i2l802 001C                     i2l804 002A                     i2l806 0030  
                   i2l808 003C                     i2l772 00D0                     i2l756 00AA  
                   i2l774 00DE                     i2l758 00B8                     i2l794 004A  
                   i2l796 004E                     i2l798 005C                     _RCREG 000FAE  
                   _SPBRG 000FAF                     _TXREG 000FAD              ?_eusart_init 0041  
            ?_eusart_read 0041                     ttemp5 0047                     ttemp6 004A  
                   ttemp7 004E                     status 000FD8                     wtemp8 0047  
         __initialization 0092              __end_of_main 0092                    ??_main 0046  
           __activetblptr 000000                    _ADCON1 000FC1                    _INTCON 000FF2  
                  _OSCCON 000FD3                    i2u1_40 00B8                    i2u1_41 00B4  
                  i2u3_40 00DE                    i2u3_41 00DA                    i2u5_40 0078  
                  i2u5_41 0074                    i2u6_40 002A                    i2u6_41 0026  
                  clear_0 0098                    isa$std 000001             ?_eusart_write 0041  
              __accesstop 0080   __end_of__initialization 009E             ___rparam_used 000001  
        eusart_string@str 0042            __pcstackCOMRAM 0041            ??_eusart_write 0041  
        _config_Interrupt 00E2                   _OSCTUNE 000F9B             _eusart_string 004A  
                 __Hparam 0000                   __Lparam 0000         __end_of_config_IO 00FC  
                 __pcinit 0092                   __ramtop 0600                   __ptext0 007A  
                 __ptext1 00BE                   __ptext2 00E2                   __ptext3 00F6  
                 __ptext4 00EC                   __ptext6 004A                   __ptext7 00A8  
                 __ptext8 00D0            __pintcode_body 0012      end_of_initialization 009E  
          ?_eusart_string 0042                   int_func 0012      __end_of_eusart_write 00BE  
           ??_half_Duplex 0044                 _RCSTAbits 000FAB                   postinc0 000FEE  
           ??_config_FOSC 0046                 _TXSTAbits 000FAC  __end_of_config_Interrupt 00EC  
     __end_of_half_Duplex 004A               _BAUDCTLbits 000FB8       start_initialization 0092  
         ??_eusart_string 0044       __end_of_config_FOSC 00F6               __pbssCOMRAM 0001  
           ??_eusart_init 0046             ??_eusart_read 0041               _half_Duplex 0008  
               __pintcode 0008                 _config_IO 00F6              _eusart_write 00A8  
             _config_FOSC 00EC       __end_of_eusart_init 00D0       __end_of_eusart_read 00E2  
                _PIR1bits 000F9E                ?_config_IO 0041                  __Hrparam 0000  
       ?_config_Interrupt 0041                  __Lrparam 0000        ??_config_Interrupt 0046  
             _eusart_init 00BE               _eusart_read 00D0                  isa$xinst 000000  
                int$flags 0046               ??_config_IO 0046     __end_of_eusart_string 007A  
                intlevel2 0000              ?_half_Duplex 0041              ?_config_FOSC 0041  
