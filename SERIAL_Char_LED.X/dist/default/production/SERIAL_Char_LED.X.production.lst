

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Aug 15 20:20:14 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    20   000000                     
    21                           ; Generated 23/03/2023 GMT
    22                           ; 
    23                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F4520 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55   000000                     _RCREG	set	4014
    56   000000                     _TXREG	set	4013
    57   000000                     _SPBRG	set	4015
    58   000000                     _BAUDCTLbits	set	4024
    59   000000                     _TRMT	set	32097
    60   000000                     _PORTD	set	3971
    61   000000                     _TRISD	set	3989
    62   000000                     _OSCTUNE	set	3995
    63   000000                     _RCSTAbits	set	4011
    64   000000                     _TXSTAbits	set	4012
    65   000000                     _RCIF	set	31989
    66   000000                     _ADCON1	set	4033
    67   000000                     _OSCCON	set	4051
    68   000000                     _INTCON	set	4082
    69   000000                     _PIE1	set	3997
    70                           
    71                           ; #config settings
    72                           
    73                           	psect	cinit
    74   007F38                     __pcinit:
    75                           	callstack 0
    76   007F38                     start_initialization:
    77                           	callstack 0
    78   007F38                     __initialization:
    79                           	callstack 0
    80                           
    81                           ; Clear objects allocated to COMRAM (16 bytes)
    82   007F38  EE00  F001         	lfsr	0,__pbssCOMRAM
    83   007F3C  0E10               	movlw	16
    84   007F3E                     clear_0:
    85   007F3E  6AEE               	clrf	postinc0,c
    86   007F40  06E8               	decf	wreg,f,c
    87   007F42  E1FD               	bnz	clear_0
    88   007F44                     end_of_initialization:
    89                           	callstack 0
    90   007F44                     __end_of__initialization:
    91                           	callstack 0
    92   007F44  0E00               	movlw	low (__Lmediumconst shr (0+16))
    93   007F46  6EF8               	movwf	tblptru,c
    94   007F48  0100               	movlb	0
    95   007F4A  EFBF  F03F         	goto	_main	;jump to C main() function
    96                           
    97                           	psect	bssCOMRAM
    98   000001                     __pbssCOMRAM:
    99                           	callstack 0
   100   000001                     _data:
   101                           	callstack 0
   102   000001                     	ds	16
   103                           
   104                           	psect	cstackCOMRAM
   105   000011                     __pcstackCOMRAM:
   106                           	callstack 0
   107   000011                     eusart_write@c:
   108                           	callstack 0
   109                           
   110                           ; 1 bytes @ 0x0
   111   000011                     	ds	1
   112   000012                     eusart_string@str:
   113                           	callstack 0
   114                           
   115                           ; 2 bytes @ 0x1
   116   000012                     	ds	2
   117   000014                     ??_main:
   118                           
   119                           ; 1 bytes @ 0x3
   120   000014                     	ds	2
   121                           
   122 ;;
   123 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   124 ;;
   125 ;; *************** function _main *****************
   126 ;; Defined at:
   127 ;;		line 88 in file "Program_main.c"
   128 ;; Parameters:    Size  Location     Type
   129 ;;		None
   130 ;; Auto vars:     Size  Location     Type
   131 ;;		None
   132 ;; Return value:  Size  Location     Type
   133 ;;                  1    wreg      void 
   134 ;; Registers used:
   135 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   136 ;; Tracked objects:
   137 ;;		On entry : 0/0
   138 ;;		On exit  : 0/0
   139 ;;		Unchanged: 0/0
   140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   141 ;;      Params:         0       0       0       0       0       0       0
   142 ;;      Locals:         0       0       0       0       0       0       0
   143 ;;      Temps:          2       0       0       0       0       0       0
   144 ;;      Totals:         2       0       0       0       0       0       0
   145 ;;Total ram usage:        2 bytes
   146 ;; Hardware stack levels required when called: 2
   147 ;; This function calls:
   148 ;;		_config_FOSC
   149 ;;		_config_IO
   150 ;;		_config_Interrupt
   151 ;;		_eusart_init
   152 ;;		_eusart_read
   153 ;;		_eusart_string
   154 ;; This function is called by:
   155 ;;		Startup code after reset
   156 ;; This function uses a non-reentrant model
   157 ;;
   158                           
   159                           	psect	text0
   160   007F7E                     __ptext0:
   161                           	callstack 0
   162   007F7E                     _main:
   163                           	callstack 29
   164   007F7E                     
   165                           ;Program_main.c: 90:     config_FOSC();
   166   007F7E  EC6F  F03F         	call	_config_FOSC	;wreg free
   167                           
   168                           ;Program_main.c: 91:     config_IO();
   169   007F82  EC79  F03F         	call	_config_IO	;wreg free
   170                           
   171                           ;Program_main.c: 92:     config_Interrupt();
   172   007F86  EC74  F03F         	call	_config_Interrupt	;wreg free
   173                           
   174                           ;Program_main.c: 93:     eusart_init();
   175   007F8A  EC7F  F03F         	call	_eusart_init	;wreg free
   176   007F8E                     l73:
   177                           
   178                           ;Program_main.c: 95:     {;Program_main.c: 96:        data[0] = eusart_read();
   179   007F8E  EC88  F03F         	call	_eusart_read	;wreg free
   180   007F92  6E01               	movwf	_data^0,c
   181   007F94                     
   182                           ;Program_main.c: 97:        eusart_string(data);
   183   007F94  0E01               	movlw	low _data
   184   007F96  6E12               	movwf	eusart_string@str^0,c
   185   007F98  0E00               	movlw	high _data
   186   007F9A  6E13               	movwf	(eusart_string@str+1)^0,c
   187   007F9C  ECA7  F03F         	call	_eusart_string	;wreg free
   188                           
   189                           ;Program_main.c: 98:        switch(data[0])
   190   007FA0  EFE1  F03F         	goto	l830
   191   007FA4                     l75:
   192                           
   193                           ;Program_main.c: 101:                PORTD = 0XFF;
   194   007FA4  6883               	setf	131,c	;volatile
   195                           
   196                           ;Program_main.c: 102:                break;
   197   007FA6  EFC7  F03F         	goto	l73
   198   007FAA                     l822:
   199                           
   200                           ;Program_main.c: 104:                PORTD = 0XFE;
   201   007FAA  0EFE               	movlw	254
   202   007FAC  6E83               	movwf	131,c	;volatile
   203                           
   204                           ;Program_main.c: 105:                break;
   205   007FAE  EFC7  F03F         	goto	l73
   206   007FB2                     l824:
   207                           
   208                           ;Program_main.c: 107:                PORTD = 0XFC;
   209   007FB2  0EFC               	movlw	252
   210   007FB4  6E83               	movwf	131,c	;volatile
   211                           
   212                           ;Program_main.c: 108:                break;
   213   007FB6  EFC7  F03F         	goto	l73
   214   007FBA                     l826:
   215                           
   216                           ;Program_main.c: 110:                PORTD = 0XF8;
   217   007FBA  0EF8               	movlw	248
   218   007FBC  6E83               	movwf	131,c	;volatile
   219                           
   220                           ;Program_main.c: 111:                break;
   221   007FBE  EFC7  F03F         	goto	l73
   222   007FC2                     l830:
   223   007FC2  5001               	movf	_data^0,w,c
   224   007FC4  6E14               	movwf	??_main^0,c
   225   007FC6  6A15               	clrf	(??_main+1)^0,c
   226                           
   227                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   228                           ; Switch size 1, requested type "simple"
   229                           ; Number of cases is 1, Range of values is 0 to 0
   230                           ; switch strategies available:
   231                           ; Name         Instructions Cycles
   232                           ; simple_byte            4     3 (average)
   233                           ;	Chosen strategy is simple_byte
   234   007FC8  5015               	movf	(??_main+1)^0,w,c
   235   007FCA  0A00               	xorlw	0	; case 0
   236   007FCC  B4D8               	btfsc	status,2,c
   237   007FCE  EFEB  F03F         	goto	l840
   238   007FD2  EFC7  F03F         	goto	l73
   239   007FD6                     l840:
   240                           
   241                           ; Switch size 1, requested type "simple"
   242                           ; Number of cases is 4, Range of values is 65 to 68
   243                           ; switch strategies available:
   244                           ; Name         Instructions Cycles
   245                           ; simple_byte           13     7 (average)
   246                           ;	Chosen strategy is simple_byte
   247   007FD6  5014               	movf	??_main^0,w,c
   248   007FD8  0A41               	xorlw	65	; case 65
   249   007FDA  B4D8               	btfsc	status,2,c
   250   007FDC  EFD2  F03F         	goto	l75
   251   007FE0  0A03               	xorlw	3	; case 66
   252   007FE2  B4D8               	btfsc	status,2,c
   253   007FE4  EFD5  F03F         	goto	l822
   254   007FE8  0A01               	xorlw	1	; case 67
   255   007FEA  B4D8               	btfsc	status,2,c
   256   007FEC  EFD9  F03F         	goto	l824
   257   007FF0  0A07               	xorlw	7	; case 68
   258   007FF2  B4D8               	btfsc	status,2,c
   259   007FF4  EFDD  F03F         	goto	l826
   260   007FF8  EFC7  F03F         	goto	l73
   261   007FFC  EF00  F000         	goto	start
   262   008000                     __end_of_main:
   263                           	callstack 0
   264                           
   265 ;; *************** function _eusart_string *****************
   266 ;; Defined at:
   267 ;;		line 23 in file "eusart.c"
   268 ;; Parameters:    Size  Location     Type
   269 ;;  str             2    1[COMRAM] PTR unsigned char 
   270 ;;		 -> data(16), 
   271 ;; Auto vars:     Size  Location     Type
   272 ;;		None
   273 ;; Return value:  Size  Location     Type
   274 ;;                  1    wreg      void 
   275 ;; Registers used:
   276 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   277 ;; Tracked objects:
   278 ;;		On entry : 0/0
   279 ;;		On exit  : 0/0
   280 ;;		Unchanged: 0/0
   281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   282 ;;      Params:         2       0       0       0       0       0       0
   283 ;;      Locals:         0       0       0       0       0       0       0
   284 ;;      Temps:          0       0       0       0       0       0       0
   285 ;;      Totals:         2       0       0       0       0       0       0
   286 ;;Total ram usage:        2 bytes
   287 ;; Hardware stack levels used: 1
   288 ;; Hardware stack levels required when called: 1
   289 ;; This function calls:
   290 ;;		_eusart_write
   291 ;; This function is called by:
   292 ;;		_main
   293 ;; This function uses a non-reentrant model
   294 ;;
   295                           
   296                           	psect	text1
   297   007F4E                     __ptext1:
   298                           	callstack 0
   299   007F4E                     _eusart_string:
   300                           	callstack 29
   301   007F4E                     
   302                           ;eusart.c: 23: void eusart_string(char *str);eusart.c: 24: {;eusart.c: 25:     while(*st
      +                          r!='\0')
   303   007F4E  EFB2  F03F         	goto	l816
   304   007F52                     l812:
   305                           
   306                           ;eusart.c: 26:     {;eusart.c: 27:         eusart_write(*str);
   307   007F52  C012  FFD9         	movff	eusart_string@str,fsr2l
   308   007F56  C013  FFDA         	movff	eusart_string@str+1,fsr2h
   309   007F5A  50DF               	movf	indf2,w,c
   310   007F5C  EC91  F03F         	call	_eusart_write
   311   007F60                     
   312                           ;eusart.c: 28:         str++;
   313   007F60  4A12               	infsnz	eusart_string@str^0,f,c
   314   007F62  2A13               	incf	(eusart_string@str+1)^0,f,c
   315   007F64                     l816:
   316                           
   317                           ;eusart.c: 25:     while(*str!='\0')
   318   007F64  C012  FFD9         	movff	eusart_string@str,fsr2l
   319   007F68  C013  FFDA         	movff	eusart_string@str+1,fsr2h
   320   007F6C  50DF               	movf	indf2,w,c
   321   007F6E  A4D8               	btfss	status,2,c
   322   007F70  EFBC  F03F         	goto	u41
   323   007F74  EFBE  F03F         	goto	u40
   324   007F78                     u41:
   325   007F78  EFA9  F03F         	goto	l812
   326   007F7C                     u40:
   327   007F7C  0012               	return		;funcret
   328   007F7E                     __end_of_eusart_string:
   329                           	callstack 0
   330                           
   331 ;; *************** function _eusart_write *****************
   332 ;; Defined at:
   333 ;;		line 16 in file "eusart.c"
   334 ;; Parameters:    Size  Location     Type
   335 ;;  c               1    wreg     unsigned char 
   336 ;; Auto vars:     Size  Location     Type
   337 ;;  c               1    0[COMRAM] unsigned char 
   338 ;; Return value:  Size  Location     Type
   339 ;;                  1    wreg      void 
   340 ;; Registers used:
   341 ;;		wreg
   342 ;; Tracked objects:
   343 ;;		On entry : 0/0
   344 ;;		On exit  : 0/0
   345 ;;		Unchanged: 0/0
   346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   347 ;;      Params:         0       0       0       0       0       0       0
   348 ;;      Locals:         1       0       0       0       0       0       0
   349 ;;      Temps:          0       0       0       0       0       0       0
   350 ;;      Totals:         1       0       0       0       0       0       0
   351 ;;Total ram usage:        1 bytes
   352 ;; Hardware stack levels used: 1
   353 ;; This function calls:
   354 ;;		Nothing
   355 ;; This function is called by:
   356 ;;		_eusart_string
   357 ;; This function uses a non-reentrant model
   358 ;;
   359                           
   360                           	psect	text2
   361   007F22                     __ptext2:
   362                           	callstack 0
   363   007F22                     _eusart_write:
   364                           	callstack 29
   365                           
   366                           ;incstack = 0
   367                           ;eusart_write@c stored from wreg
   368   007F22  6E11               	movwf	eusart_write@c^0,c
   369   007F24                     l22:
   370   007F24  A2AC               	btfss	4012,1,c	;volatile
   371   007F26  EF97  F03F         	goto	u11
   372   007F2A  EF99  F03F         	goto	u10
   373   007F2E                     u11:
   374   007F2E  EF92  F03F         	goto	l22
   375   007F32                     u10:
   376   007F32                     
   377                           ;eusart.c: 19:     TXREG = c;
   378   007F32  C011  FFAD         	movff	eusart_write@c,4013	;volatile
   379   007F36  0012               	return		;funcret
   380   007F38                     __end_of_eusart_write:
   381                           	callstack 0
   382                           
   383 ;; *************** function _eusart_read *****************
   384 ;; Defined at:
   385 ;;		line 33 in file "eusart.c"
   386 ;; Parameters:    Size  Location     Type
   387 ;;		None
   388 ;; Auto vars:     Size  Location     Type
   389 ;;		None
   390 ;; Return value:  Size  Location     Type
   391 ;;                  1    wreg      unsigned char 
   392 ;; Registers used:
   393 ;;		wreg, status,2
   394 ;; Tracked objects:
   395 ;;		On entry : 0/0
   396 ;;		On exit  : 0/0
   397 ;;		Unchanged: 0/0
   398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   399 ;;      Params:         0       0       0       0       0       0       0
   400 ;;      Locals:         0       0       0       0       0       0       0
   401 ;;      Temps:          0       0       0       0       0       0       0
   402 ;;      Totals:         0       0       0       0       0       0       0
   403 ;;Total ram usage:        0 bytes
   404 ;; Hardware stack levels used: 1
   405 ;; This function calls:
   406 ;;		Nothing
   407 ;; This function is called by:
   408 ;;		_main
   409 ;; This function uses a non-reentrant model
   410 ;;
   411                           
   412                           	psect	text3
   413   007F10                     __ptext3:
   414                           	callstack 0
   415   007F10                     _eusart_read:
   416                           	callstack 30
   417   007F10                     l34:
   418   007F10  AA9E               	btfss	3998,5,c	;volatile
   419   007F12  EF8D  F03F         	goto	u31
   420   007F16  EF8F  F03F         	goto	u30
   421   007F1A                     u31:
   422   007F1A  EF88  F03F         	goto	l34
   423   007F1E                     u30:
   424   007F1E                     
   425                           ;eusart.c: 36:     return RCREG;
   426   007F1E  50AE               	movf	174,w,c	;volatile
   427   007F20  0012               	return		;funcret
   428   007F22                     __end_of_eusart_read:
   429                           	callstack 0
   430                           
   431 ;; *************** function _eusart_init *****************
   432 ;; Defined at:
   433 ;;		line 4 in file "eusart.c"
   434 ;; Parameters:    Size  Location     Type
   435 ;;		None
   436 ;; Auto vars:     Size  Location     Type
   437 ;;		None
   438 ;; Return value:  Size  Location     Type
   439 ;;                  1    wreg      void 
   440 ;; Registers used:
   441 ;;		wreg, status,2
   442 ;; Tracked objects:
   443 ;;		On entry : 0/0
   444 ;;		On exit  : 0/0
   445 ;;		Unchanged: 0/0
   446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   447 ;;      Params:         0       0       0       0       0       0       0
   448 ;;      Locals:         0       0       0       0       0       0       0
   449 ;;      Temps:          0       0       0       0       0       0       0
   450 ;;      Totals:         0       0       0       0       0       0       0
   451 ;;Total ram usage:        0 bytes
   452 ;; Hardware stack levels used: 1
   453 ;; This function calls:
   454 ;;		Nothing
   455 ;; This function is called by:
   456 ;;		_main
   457 ;; This function uses a non-reentrant model
   458 ;;
   459                           
   460                           	psect	text4
   461   007EFE                     __ptext4:
   462                           	callstack 0
   463   007EFE                     _eusart_init:
   464                           	callstack 30
   465   007EFE                     
   466                           ;eusart.c: 6:     TXSTAbits.TXEN = 1;
   467   007EFE  8AAC               	bsf	172,5,c	;volatile
   468                           
   469                           ;eusart.c: 7:     RCSTAbits.CREN = 1;
   470   007F00  88AB               	bsf	171,4,c	;volatile
   471                           
   472                           ;eusart.c: 8:     TXSTAbits.SYNC = 0;
   473   007F02  98AC               	bcf	172,4,c	;volatile
   474                           
   475                           ;eusart.c: 9:     RCSTAbits.SPEN = 1;
   476   007F04  8EAB               	bsf	171,7,c	;volatile
   477                           
   478                           ;eusart.c: 10:     TXSTAbits.BRGH = 0;
   479   007F06  94AC               	bcf	172,2,c	;volatile
   480                           
   481                           ;eusart.c: 11:     BAUDCTLbits.BRG16 = 0;
   482   007F08  96B8               	bcf	184,3,c	;volatile
   483   007F0A                     
   484                           ;eusart.c: 12:     SPBRG = 12;
   485   007F0A  0E0C               	movlw	12
   486   007F0C  6EAF               	movwf	175,c	;volatile
   487   007F0E  0012               	return		;funcret
   488   007F10                     __end_of_eusart_init:
   489                           	callstack 0
   490                           
   491 ;; *************** function _config_Interrupt *****************
   492 ;; Defined at:
   493 ;;		line 82 in file "Program_main.c"
   494 ;; Parameters:    Size  Location     Type
   495 ;;		None
   496 ;; Auto vars:     Size  Location     Type
   497 ;;		None
   498 ;; Return value:  Size  Location     Type
   499 ;;                  1    wreg      void 
   500 ;; Registers used:
   501 ;;		wreg, status,2
   502 ;; Tracked objects:
   503 ;;		On entry : 0/0
   504 ;;		On exit  : 0/0
   505 ;;		Unchanged: 0/0
   506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   507 ;;      Params:         0       0       0       0       0       0       0
   508 ;;      Locals:         0       0       0       0       0       0       0
   509 ;;      Temps:          0       0       0       0       0       0       0
   510 ;;      Totals:         0       0       0       0       0       0       0
   511 ;;Total ram usage:        0 bytes
   512 ;; Hardware stack levels used: 1
   513 ;; This function calls:
   514 ;;		Nothing
   515 ;; This function is called by:
   516 ;;		_main
   517 ;; This function uses a non-reentrant model
   518 ;;
   519                           
   520                           	psect	text5
   521   007EE8                     __ptext5:
   522                           	callstack 0
   523   007EE8                     _config_Interrupt:
   524                           	callstack 30
   525   007EE8                     
   526                           ;Program_main.c: 84:     INTCON = 0XC0;
   527   007EE8  0EC0               	movlw	192
   528   007EEA  6EF2               	movwf	242,c	;volatile
   529                           
   530                           ;Program_main.c: 85:     PIE1 = 0X00;
   531   007EEC  0E00               	movlw	0
   532   007EEE  6E9D               	movwf	157,c	;volatile
   533   007EF0  0012               	return		;funcret
   534   007EF2                     __end_of_config_Interrupt:
   535                           	callstack 0
   536                           
   537 ;; *************** function _config_IO *****************
   538 ;; Defined at:
   539 ;;		line 75 in file "Program_main.c"
   540 ;; Parameters:    Size  Location     Type
   541 ;;		None
   542 ;; Auto vars:     Size  Location     Type
   543 ;;		None
   544 ;; Return value:  Size  Location     Type
   545 ;;                  1    wreg      void 
   546 ;; Registers used:
   547 ;;		wreg, status,2
   548 ;; Tracked objects:
   549 ;;		On entry : 0/0
   550 ;;		On exit  : 0/0
   551 ;;		Unchanged: 0/0
   552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   553 ;;      Params:         0       0       0       0       0       0       0
   554 ;;      Locals:         0       0       0       0       0       0       0
   555 ;;      Temps:          0       0       0       0       0       0       0
   556 ;;      Totals:         0       0       0       0       0       0       0
   557 ;;Total ram usage:        0 bytes
   558 ;; Hardware stack levels used: 1
   559 ;; This function calls:
   560 ;;		Nothing
   561 ;; This function is called by:
   562 ;;		_main
   563 ;; This function uses a non-reentrant model
   564 ;;
   565                           
   566                           	psect	text6
   567   007EF2                     __ptext6:
   568                           	callstack 0
   569   007EF2                     _config_IO:
   570                           	callstack 30
   571   007EF2                     
   572                           ;Program_main.c: 77:     ADCON1 = 0X0F;
   573   007EF2  0E0F               	movlw	15
   574   007EF4  6EC1               	movwf	193,c	;volatile
   575                           
   576                           ;Program_main.c: 78:     TRISD = 0X00;
   577   007EF6  0E00               	movlw	0
   578   007EF8  6E95               	movwf	149,c	;volatile
   579   007EFA                     
   580                           ;Program_main.c: 79:     PORTD = 0XFF;
   581   007EFA  6883               	setf	131,c	;volatile
   582   007EFC  0012               	return		;funcret
   583   007EFE                     __end_of_config_IO:
   584                           	callstack 0
   585                           
   586 ;; *************** function _config_FOSC *****************
   587 ;; Defined at:
   588 ;;		line 70 in file "Program_main.c"
   589 ;; Parameters:    Size  Location     Type
   590 ;;		None
   591 ;; Auto vars:     Size  Location     Type
   592 ;;		None
   593 ;; Return value:  Size  Location     Type
   594 ;;                  1    wreg      void 
   595 ;; Registers used:
   596 ;;		wreg, status,2
   597 ;; Tracked objects:
   598 ;;		On entry : 0/0
   599 ;;		On exit  : 0/0
   600 ;;		Unchanged: 0/0
   601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   602 ;;      Params:         0       0       0       0       0       0       0
   603 ;;      Locals:         0       0       0       0       0       0       0
   604 ;;      Temps:          0       0       0       0       0       0       0
   605 ;;      Totals:         0       0       0       0       0       0       0
   606 ;;Total ram usage:        0 bytes
   607 ;; Hardware stack levels used: 1
   608 ;; This function calls:
   609 ;;		Nothing
   610 ;; This function is called by:
   611 ;;		_main
   612 ;; This function uses a non-reentrant model
   613 ;;
   614                           
   615                           	psect	text7
   616   007EDE                     __ptext7:
   617                           	callstack 0
   618   007EDE                     _config_FOSC:
   619                           	callstack 30
   620   007EDE                     
   621                           ;Program_main.c: 72:     OSCCON = 0X00;
   622   007EDE  0E00               	movlw	0
   623   007EE0  6ED3               	movwf	211,c	;volatile
   624                           
   625                           ;Program_main.c: 73:     OSCTUNE = 0X00;
   626   007EE2  0E00               	movlw	0
   627   007EE4  6E9B               	movwf	155,c	;volatile
   628   007EE6  0012               	return		;funcret
   629   007EE8                     __end_of_config_FOSC:
   630                           	callstack 0
   631   000000                     
   632                           	psect	rparam
   633   000000                     
   634                           	psect	idloc
   635                           
   636                           ;Config register IDLOC0 @ 0x200000
   637                           ;	unspecified, using default values
   638   200000                     	org	2097152
   639   200000  FF                 	db	255
   640                           
   641                           ;Config register IDLOC1 @ 0x200001
   642                           ;	unspecified, using default values
   643   200001                     	org	2097153
   644   200001  FF                 	db	255
   645                           
   646                           ;Config register IDLOC2 @ 0x200002
   647                           ;	unspecified, using default values
   648   200002                     	org	2097154
   649   200002  FF                 	db	255
   650                           
   651                           ;Config register IDLOC3 @ 0x200003
   652                           ;	unspecified, using default values
   653   200003                     	org	2097155
   654   200003  FF                 	db	255
   655                           
   656                           ;Config register IDLOC4 @ 0x200004
   657                           ;	unspecified, using default values
   658   200004                     	org	2097156
   659   200004  FF                 	db	255
   660                           
   661                           ;Config register IDLOC5 @ 0x200005
   662                           ;	unspecified, using default values
   663   200005                     	org	2097157
   664   200005  FF                 	db	255
   665                           
   666                           ;Config register IDLOC6 @ 0x200006
   667                           ;	unspecified, using default values
   668   200006                     	org	2097158
   669   200006  FF                 	db	255
   670                           
   671                           ;Config register IDLOC7 @ 0x200007
   672                           ;	unspecified, using default values
   673   200007                     	org	2097159
   674   200007  FF                 	db	255
   675                           
   676                           	psect	config
   677                           
   678                           ; Padding undefined space
   679   300000                     	org	3145728
   680   300000  FF                 	db	255
   681                           
   682                           ;Config register CONFIG1H @ 0x300001
   683                           ;	Oscillator Selection bits
   684                           ;	OSC = HS, HS oscillator
   685                           ;	Fail-Safe Clock Monitor Enable bit
   686                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   687                           ;	Internal/External Oscillator Switchover bit
   688                           ;	IESO = OFF, Oscillator Switchover mode disabled
   689   300001                     	org	3145729
   690   300001  02                 	db	2
   691                           
   692                           ;Config register CONFIG2L @ 0x300002
   693                           ;	Power-up Timer Enable bit
   694                           ;	PWRT = OFF, PWRT disabled
   695                           ;	Brown-out Reset Enable bits
   696                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
   697                           ;	Brown Out Reset Voltage bits
   698                           ;	BORV = 3, Minimum setting
   699   300002                     	org	3145730
   700   300002  19                 	db	25
   701                           
   702                           ;Config register CONFIG2H @ 0x300003
   703                           ;	Watchdog Timer Enable bit
   704                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   705                           ;	Watchdog Timer Postscale Select bits
   706                           ;	WDTPS = 32768, 1:32768
   707   300003                     	org	3145731
   708   300003  1E                 	db	30
   709                           
   710                           ; Padding undefined space
   711   300004                     	org	3145732
   712   300004  FF                 	db	255
   713                           
   714                           ;Config register CONFIG3H @ 0x300005
   715                           ;	CCP2 MUX bit
   716                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   717                           ;	PORTB A/D Enable bit
   718                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   719                           ;	Low-Power Timer1 Oscillator Enable bit
   720                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   721                           ;	MCLR Pin Enable bit
   722                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   723   300005                     	org	3145733
   724   300005  81                 	db	129
   725                           
   726                           ;Config register CONFIG4L @ 0x300006
   727                           ;	Stack Full/Underflow Reset Enable bit
   728                           ;	STVREN = ON, Stack full/underflow will cause Reset
   729                           ;	Single-Supply ICSP Enable bit
   730                           ;	LVP = OFF, Single-Supply ICSP disabled
   731                           ;	Extended Instruction Set Enable bit
   732                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   733                           ;	Background Debugger Enable bit
   734                           ;	DEBUG = 0x1, unprogrammed default
   735   300006                     	org	3145734
   736   300006  81                 	db	129
   737                           
   738                           ; Padding undefined space
   739   300007                     	org	3145735
   740   300007  FF                 	db	255
   741                           
   742                           ;Config register CONFIG5L @ 0x300008
   743                           ;	Code Protection bit
   744                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
   745                           ;	Code Protection bit
   746                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
   747                           ;	Code Protection bit
   748                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
   749                           ;	Code Protection bit
   750                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
   751   300008                     	org	3145736
   752   300008  0F                 	db	15
   753                           
   754                           ;Config register CONFIG5H @ 0x300009
   755                           ;	Boot Block Code Protection bit
   756                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   757                           ;	Data EEPROM Code Protection bit
   758                           ;	CPD = OFF, Data EEPROM not code-protected
   759   300009                     	org	3145737
   760   300009  C0                 	db	192
   761                           
   762                           ;Config register CONFIG6L @ 0x30000A
   763                           ;	Write Protection bit
   764                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
   765                           ;	Write Protection bit
   766                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
   767                           ;	Write Protection bit
   768                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
   769                           ;	Write Protection bit
   770                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
   771   30000A                     	org	3145738
   772   30000A  0F                 	db	15
   773                           
   774                           ;Config register CONFIG6H @ 0x30000B
   775                           ;	Configuration Register Write Protection bit
   776                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   777                           ;	Boot Block Write Protection bit
   778                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
   779                           ;	Data EEPROM Write Protection bit
   780                           ;	WRTD = OFF, Data EEPROM not write-protected
   781   30000B                     	org	3145739
   782   30000B  E0                 	db	224
   783                           
   784                           ;Config register CONFIG7L @ 0x30000C
   785                           ;	Table Read Protection bit
   786                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
   787                           ;	Table Read Protection bit
   788                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
   789                           ;	Table Read Protection bit
   790                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
   791                           ;	Table Read Protection bit
   792                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
   793   30000C                     	org	3145740
   794   30000C  0F                 	db	15
   795                           
   796                           ;Config register CONFIG7H @ 0x30000D
   797                           ;	Boot Block Table Read Protection bit
   798                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   799   30000D                     	org	3145741
   800   30000D  40                 	db	64
   801                           tosu	equ	0xFFF
   802                           tosh	equ	0xFFE
   803                           tosl	equ	0xFFD
   804                           stkptr	equ	0xFFC
   805                           pclatu	equ	0xFFB
   806                           pclath	equ	0xFFA
   807                           pcl	equ	0xFF9
   808                           tblptru	equ	0xFF8
   809                           tblptrh	equ	0xFF7
   810                           tblptrl	equ	0xFF6
   811                           tablat	equ	0xFF5
   812                           prodh	equ	0xFF4
   813                           prodl	equ	0xFF3
   814                           indf0	equ	0xFEF
   815                           postinc0	equ	0xFEE
   816                           postdec0	equ	0xFED
   817                           preinc0	equ	0xFEC
   818                           plusw0	equ	0xFEB
   819                           fsr0h	equ	0xFEA
   820                           fsr0l	equ	0xFE9
   821                           wreg	equ	0xFE8
   822                           indf1	equ	0xFE7
   823                           postinc1	equ	0xFE6
   824                           postdec1	equ	0xFE5
   825                           preinc1	equ	0xFE4
   826                           plusw1	equ	0xFE3
   827                           fsr1h	equ	0xFE2
   828                           fsr1l	equ	0xFE1
   829                           bsr	equ	0xFE0
   830                           indf2	equ	0xFDF
   831                           postinc2	equ	0xFDE
   832                           postdec2	equ	0xFDD
   833                           preinc2	equ	0xFDC
   834                           plusw2	equ	0xFDB
   835                           fsr2h	equ	0xFDA
   836                           fsr2l	equ	0xFD9
   837                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      5      21
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    eusart_string@str	PTR unsigned char  size(2) Largest target is 16
		 -> data(COMRAM[16]), 


Critical Paths under _main in COMRAM

    _main->_eusart_string
    _eusart_string->_eusart_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     136
                                              3 COMRAM     2     2      0
                        _config_FOSC
                          _config_IO
                   _config_Interrupt
                        _eusart_init
                        _eusart_read
                      _eusart_string
 ---------------------------------------------------------------------------------
 (1) _eusart_string                                        2     0      2     136
                                              1 COMRAM     2     0      2
                       _eusart_write
 ---------------------------------------------------------------------------------
 (2) _eusart_write                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _eusart_read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _eusart_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_Interrupt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_IO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_FOSC                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config_FOSC
   _config_IO
   _config_Interrupt
   _eusart_init
   _eusart_read
   _eusart_string
     _eusart_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      27        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      5      15       1       16.5%
BITBIGSFRhhhl       1E      0       0      17        0.0%
BITBIGSFRllllh      11      0       0      24        0.0%
BITBIGSFRhhlh       11      0       0      18        0.0%
BITBIGSFRhhhh        D      0       0      16        0.0%
BITBIGSFRlh          C      0       0      21        0.0%
BITBIGSFRhlh         8      0       0      20        0.0%
BITBIGSFRhhll        8      0       0      19        0.0%
BITBIGSFRlllh        5      0       0      23        0.0%
BITBIGSFRlllll       3      0       0      25        0.0%
BITBIGSFRllh         1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      15      26        0.0%
DATA                 0      0      15       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Aug 15 20:20:14 2023

                      l22 7F24                        l31 7F7C                        l25 7F36  
                      l34 7F10                        l19 7F0E                        l37 7F20  
                      l62 7EE6                        l65 7EFC                        l73 7F8E  
                      l75 7FA4                        l68 7EF0                        u10 7F32  
                      u11 7F2E                        u30 7F1E                        u31 7F1A  
                      u40 7F7C                        u41 7F78                       l810 7F4E  
                     l812 7F52                       l820 7F94                       l814 7F60  
                     l822 7FAA                       l830 7FC2                       l760 7F32  
                     l816 7F64                       l840 7FD6                       l824 7FB2  
                     l762 7EFE                       l826 7FBA                       l818 7F7E  
                     l780 7EDE                       l764 7F0A                       l782 7EF2  
                     l774 7F10                       l758 7F24                       l784 7EFA  
                     l776 7F1E                       l786 7EE8                       wreg 000FE8  
           eusart_write@c 0011                      _PIE1 000F9D                      _RCIF 007CF5  
                    _TRMT 007D61                      _data 0001                      _main 7F7E  
                    fsr2h 000FDA                      indf2 000FDF                      fsr2l 000FD9  
                    start 0000              ___param_bank 000000                     ?_main 0011  
                   _RCREG 000FAE                     _SPBRG 000FAF                     _PORTD 000F83  
                   _TRISD 000F95                     _TXREG 000FAD              ?_eusart_init 0011  
            ?_eusart_read 0011                     status 000FD8           __initialization 7F38  
            __end_of_main 8000                    ??_main 0014             __activetblptr 000002  
                  _ADCON1 000FC1                    _INTCON 000FF2                    _OSCCON 000FD3  
                  clear_0 7F3E                    isa$std 000001             ?_eusart_write 0011  
                  tblptru 000FF8                __accesstop 0080   __end_of__initialization 7F44  
           ___rparam_used 000001          eusart_string@str 0012            __pcstackCOMRAM 0011  
          ??_eusart_write 0011          _config_Interrupt 7EE8                   _OSCTUNE 000F9B  
           _eusart_string 7F4E                   __Hparam 0000                   __Lparam 0000  
       __end_of_config_IO 7EFE                   __pcinit 7F38                   __ramtop 0600  
                 __ptext0 7F7E                   __ptext1 7F4E                   __ptext2 7F22  
                 __ptext3 7F10                   __ptext4 7EFE                   __ptext5 7EE8  
                 __ptext6 7EF2                   __ptext7 7EDE      end_of_initialization 7F44  
          ?_eusart_string 0012             __Lmediumconst 0000      __end_of_eusart_write 7F38  
               _RCSTAbits 000FAB                   postinc0 000FEE             ??_config_FOSC 0011  
               _TXSTAbits 000FAC  __end_of_config_Interrupt 7EF2               _BAUDCTLbits 000FB8  
     start_initialization 7F38           ??_eusart_string 0014       __end_of_config_FOSC 7EE8  
             __pbssCOMRAM 0001             ??_eusart_init 0011             ??_eusart_read 0011  
               _config_IO 7EF2              _eusart_write 7F22               _config_FOSC 7EDE  
     __end_of_eusart_init 7F10       __end_of_eusart_read 7F22                ?_config_IO 0011  
                __Hrparam 0000         ?_config_Interrupt 0011                  __Lrparam 0000  
      ??_config_Interrupt 0011               _eusart_init 7EFE               _eusart_read 7F10  
                isa$xinst 000000               ??_config_IO 0011     __end_of_eusart_string 7F7E  
            ?_config_FOSC 0011  
