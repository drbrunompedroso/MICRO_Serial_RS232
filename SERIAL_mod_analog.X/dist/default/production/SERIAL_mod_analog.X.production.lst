

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Aug 30 16:35:03 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    52                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    53                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    54   000000                     
    55                           ; Generated 23/03/2023 GMT
    56                           ; 
    57                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution. Publication is not required when
    71                           ;        this file is used in an embedded application.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18F4520 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89   000000                     _ADRESL	set	4035
    90   000000                     _ADRESH	set	4036
    91   000000                     _OSCCON	set	4051
    92   000000                     _RCREG	set	4014
    93   000000                     _TXREG	set	4013
    94   000000                     _SPBRG	set	4015
    95   000000                     _BAUDCTLbits	set	4024
    96   000000                     _ADCON0bits	set	4034
    97   000000                     _TRMT	set	32097
    98   000000                     _OSCTUNE	set	3995
    99   000000                     _RCSTAbits	set	4011
   100   000000                     _TXSTAbits	set	4012
   101   000000                     _RCIF	set	31989
   102   000000                     _ADCON2	set	4032
   103   000000                     _ADCON1	set	4033
   104   000000                     _ADCON0	set	4034
   105                           
   106                           	psect	smallconst
   107   000600                     __psmallconst:
   108                           	callstack 0
   109   000600  00                 	db	0
   110   000601                     STR_1:
   111   000601  3C                 	db	60	;'<'
   112   000602  44                 	db	68	;'D'
   113   000603  41                 	db	65	;'A'
   114   000604  54                 	db	84	;'T'
   115   000605  41                 	db	65	;'A'
   116   000606  3A                 	db	58	;':'
   117   000607  41                 	db	65	;'A'
   118   000608  44                 	db	68	;'D'
   119   000609  3A                 	db	58	;':'
   120   00060A  25                 	db	37
   121   00060B  30                 	db	48	;'0'
   122   00060C  34                 	db	52	;'4'
   123   00060D  64                 	db	100	;'d'
   124   00060E  2C                 	db	44
   125   00060F  56                 	db	86	;'V'
   126   000610  6F                 	db	111	;'o'
   127   000611  6C                 	db	108	;'l'
   128   000612  74                 	db	116	;'t'
   129   000613  61                 	db	97	;'a'
   130   000614  67                 	db	103	;'g'
   131   000615  65                 	db	101	;'e'
   132   000616  3A                 	db	58	;':'
   133   000617  25                 	db	37
   134   000618  2E                 	db	46
   135   000619  32                 	db	50	;'2'
   136   00061A  66                 	db	102	;'f'
   137   00061B  56                 	db	86	;'V'
   138   00061C  3E                 	db	62	;'>'
   139   00061D  0D                 	db	13
   140   00061E  0A                 	db	10
   141   00061F  00                 	db	0
   142   000620                     STR_2:
   143   000620  69                 	db	105	;'i'
   144   000621  6E                 	db	110	;'n'
   145   000622  66                 	db	102	;'f'
   146   000623  00                 	db	0
   147   000624                     STR_5:
   148   000624  6E                 	db	110	;'n'
   149   000625  61                 	db	97	;'a'
   150   000626  6E                 	db	110	;'n'
   151   000627  00                 	db	0
   152   000628  00                 	db	0	; dummy byte at the end
   153   000000                     
   154                           ; #config settings
   155                           
   156                           	psect	cinit
   157   003632                     __pcinit:
   158                           	callstack 0
   159   003632                     start_initialization:
   160                           	callstack 0
   161   003632                     __initialization:
   162                           	callstack 0
   163                           
   164                           ; Clear objects allocated to BANK1 (80 bytes)
   165   003632  EE01  F000         	lfsr	0,__pbssBANK1
   166   003636  0E50               	movlw	80
   167   003638                     clear_0:
   168   003638  6AEE               	clrf	postinc0,c
   169   00363A  06E8               	decf	wreg,f,c
   170   00363C  E1FD               	bnz	clear_0
   171                           
   172                           ; Clear objects allocated to BANK0 (82 bytes)
   173   00363E  EE00  F080         	lfsr	0,__pbssBANK0
   174   003642  0E52               	movlw	82
   175   003644                     clear_1:
   176   003644  6AEE               	clrf	postinc0,c
   177   003646  06E8               	decf	wreg,f,c
   178   003648  E1FD               	bnz	clear_1
   179                           
   180                           ; Clear objects allocated to COMRAM (1 bytes)
   181   00364A  6A7F               	clrf	__pbssCOMRAM& (0+255),c
   182   00364C                     end_of_initialization:
   183                           	callstack 0
   184   00364C                     __end_of__initialization:
   185                           	callstack 0
   186   00364C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   187   00364E  6EF8               	movwf	tblptru,c
   188   003650  0100               	movlb	0
   189   003652  EF2B  F01B         	goto	_main	;jump to C main() function
   190                           
   191                           	psect	bssCOMRAM
   192   00007F                     __pbssCOMRAM:
   193                           	callstack 0
   194   00007F                     _flags:
   195                           	callstack 0
   196   00007F                     	ds	1
   197                           
   198                           	psect	bssBANK0
   199   000080                     __pbssBANK0:
   200                           	callstack 0
   201   000080                     floorf@F526:
   202                           	callstack 0
   203   000080                     	ds	4
   204   000084                     ___fpclassifyf@F465:
   205                           	callstack 0
   206   000084                     	ds	4
   207   000088                     _VoltageADC:
   208                           	callstack 0
   209   000088                     	ds	4
   210   00008C                     _width:
   211                           	callstack 0
   212   00008C                     	ds	2
   213   00008E                     _prec:
   214                           	callstack 0
   215   00008E                     	ds	2
   216   000090                     _VdigADC:
   217                           	callstack 0
   218   000090                     	ds	2
   219   000092                     _BufferSERIAL:
   220                           	callstack 0
   221   000092                     	ds	64
   222                           
   223                           	psect	bssBANK1
   224   000100                     __pbssBANK1:
   225                           	callstack 0
   226   000100                     _dbuf:
   227                           	callstack 0
   228   000100                     	ds	80
   229                           
   230                           	psect	cstackBANK0
   231   0000D2                     __pcstackBANK0:
   232                           	callstack 0
   233   0000D2                     ?_vfprintf:
   234                           	callstack 0
   235   0000D2                     vfprintf@fp:
   236                           	callstack 0
   237                           
   238                           ; 2 bytes @ 0x0
   239   0000D2                     	ds	2
   240   0000D4                     vfprintf@fmt:
   241                           	callstack 0
   242                           
   243                           ; 2 bytes @ 0x2
   244   0000D4                     	ds	2
   245   0000D6                     vfprintf@ap:
   246                           	callstack 0
   247                           
   248                           ; 2 bytes @ 0x4
   249   0000D6                     	ds	2
   250   0000D8                     vfprintf@cfmt:
   251                           	callstack 0
   252                           
   253                           ; 2 bytes @ 0x6
   254   0000D8                     	ds	2
   255   0000DA                     ?_sprintf:
   256                           	callstack 0
   257   0000DA                     sprintf@s:
   258                           	callstack 0
   259                           
   260                           ; 2 bytes @ 0x8
   261   0000DA                     	ds	2
   262   0000DC                     sprintf@fmt:
   263                           	callstack 0
   264                           
   265                           ; 2 bytes @ 0xA
   266   0000DC                     	ds	8
   267   0000E4                     sprintf@ap:
   268                           	callstack 0
   269                           
   270                           ; 2 bytes @ 0x12
   271   0000E4                     	ds	2
   272   0000E6                     sprintf@f:
   273                           	callstack 0
   274                           
   275                           ; 11 bytes @ 0x14
   276   0000E6                     	ds	11
   277   0000F1                     ??_transmiter_DATA:
   278                           
   279                           ; 1 bytes @ 0x1F
   280   0000F1                     	ds	2
   281                           
   282                           	psect	cstackCOMRAM
   283   000001                     __pcstackCOMRAM:
   284                           	callstack 0
   285   000001                     ?___fpclassifyf:
   286                           	callstack 0
   287   000001                     ?_isdigit:
   288                           	callstack 0
   289   000001                     ?_isspace:
   290                           	callstack 0
   291   000001                     ?___wmul:
   292                           	callstack 0
   293   000001                     ?___fladd:
   294                           	callstack 0
   295   000001                     ?___fldiv:
   296                           	callstack 0
   297   000001                     ?_labs:
   298                           	callstack 0
   299   000001                     ?___flneg:
   300                           	callstack 0
   301   000001                     ?___fltol:
   302                           	callstack 0
   303   000001                     ?___xxtofl:
   304                           	callstack 0
   305   000001                     ?___aodiv:
   306                           	callstack 0
   307   000001                     ?___aomod:
   308                           	callstack 0
   309   000001                     eusart_write@c:
   310                           	callstack 0
   311   000001                     ___wmul@multiplier:
   312                           	callstack 0
   313   000001                     isdigit@c:
   314                           	callstack 0
   315   000001                     isspace@c:
   316                           	callstack 0
   317   000001                     memcpy@d1:
   318                           	callstack 0
   319   000001                     fputc@c:
   320                           	callstack 0
   321   000001                     strcpy@dest:
   322                           	callstack 0
   323   000001                     ___fleq@ff1:
   324                           	callstack 0
   325   000001                     ___flneg@f1:
   326                           	callstack 0
   327   000001                     ___fltol@f1:
   328                           	callstack 0
   329   000001                     ___fladd@b:
   330                           	callstack 0
   331   000001                     ___fldiv@b:
   332                           	callstack 0
   333   000001                     ___xxtofl@val:
   334                           	callstack 0
   335   000001                     ___fpclassifyf@x:
   336                           	callstack 0
   337   000001                     labs@a:
   338                           	callstack 0
   339   000001                     ___aodiv@dividend:
   340                           	callstack 0
   341   000001                     ___aomod@dividend:
   342                           	callstack 0
   343                           
   344                           ; 8 bytes @ 0x0
   345   000001                     	ds	1
   346   000002                     eusart_string@str:
   347                           	callstack 0
   348                           
   349                           ; 2 bytes @ 0x1
   350   000002                     	ds	1
   351   000003                     ??_isdigit:
   352   000003                     ??_isspace:
   353   000003                     ___wmul@multiplicand:
   354                           	callstack 0
   355   000003                     memcpy@s1:
   356                           	callstack 0
   357   000003                     fputc@fp:
   358                           	callstack 0
   359   000003                     strcpy@src:
   360                           	callstack 0
   361                           
   362                           ; 2 bytes @ 0x2
   363   000003                     	ds	1
   364   000004                     
   365                           ; 1 bytes @ 0x3
   366   000004                     	ds	1
   367   000005                     ??_fputc:
   368   000005                     ??___fpclassifyf:
   369   000005                     ??_labs:
   370   000005                     ??___fltol:
   371   000005                     ??___xxtofl:
   372   000005                     _isspace$996:
   373                           	callstack 0
   374   000005                     ___wmul@product:
   375                           	callstack 0
   376   000005                     memcpy@n:
   377                           	callstack 0
   378   000005                     strcpy@s:
   379                           	callstack 0
   380   000005                     ___fleq@ff2:
   381                           	callstack 0
   382   000005                     ___fladd@a:
   383                           	callstack 0
   384   000005                     ___fldiv@a:
   385                           	callstack 0
   386                           
   387                           ; 4 bytes @ 0x4
   388   000005                     	ds	2
   389   000007                     ?_atoi:
   390                           	callstack 0
   391   000007                     atoi@s:
   392                           	callstack 0
   393   000007                     memcpy@d:
   394                           	callstack 0
   395   000007                     strcpy@d:
   396                           	callstack 0
   397                           
   398                           ; 2 bytes @ 0x6
   399   000007                     	ds	2
   400   000009                     ??___fladd:
   401   000009                     ??___fldiv:
   402   000009                     ??_atoi:
   403   000009                     ??___fleq:
   404   000009                     ___fltol@sign1:
   405                           	callstack 0
   406   000009                     ___xxtofl@sign:
   407                           	callstack 0
   408   000009                     ___fpclassifyf@e:
   409                           	callstack 0
   410   000009                     memcpy@s:
   411                           	callstack 0
   412   000009                     ___aodiv@divisor:
   413                           	callstack 0
   414   000009                     ___aomod@divisor:
   415                           	callstack 0
   416                           
   417                           ; 8 bytes @ 0x8
   418   000009                     	ds	1
   419   00000A                     ___fltol@exp1:
   420                           	callstack 0
   421   00000A                     ___xxtofl@exp:
   422                           	callstack 0
   423   00000A                     fputs@s:
   424                           	callstack 0
   425                           
   426                           ; 2 bytes @ 0x9
   427   00000A                     	ds	1
   428   00000B                     memcpy@tmp:
   429                           	callstack 0
   430   00000B                     ___xxtofl@arg:
   431                           	callstack 0
   432   00000B                     ___fpclassifyf@u:
   433                           	callstack 0
   434                           
   435                           ; 4 bytes @ 0xA
   436   00000B                     	ds	1
   437   00000C                     atoi@neg:
   438                           	callstack 0
   439   00000C                     fputs@fp:
   440                           	callstack 0
   441                           
   442                           ; 2 bytes @ 0xB
   443   00000C                     	ds	1
   444   00000D                     ___fladd@signs:
   445                           	callstack 0
   446   00000D                     ___fldiv@rem:
   447                           	callstack 0
   448                           
   449                           ; 4 bytes @ 0xC
   450   00000D                     	ds	1
   451   00000E                     ___fladd@aexp:
   452                           	callstack 0
   453   00000E                     fputs@c:
   454                           	callstack 0
   455   00000E                     atoi@n:
   456                           	callstack 0
   457                           
   458                           ; 2 bytes @ 0xD
   459   00000E                     	ds	1
   460   00000F                     ?___flmul:
   461                           	callstack 0
   462   00000F                     ___fladd@bexp:
   463                           	callstack 0
   464   00000F                     fputs@i:
   465                           	callstack 0
   466   00000F                     ___flmul@b:
   467                           	callstack 0
   468                           
   469                           ; 4 bytes @ 0xE
   470   00000F                     	ds	1
   471   000010                     ___fladd@grs:
   472                           	callstack 0
   473                           
   474                           ; 1 bytes @ 0xF
   475   000010                     	ds	1
   476   000011                     ___aodiv@counter:
   477                           	callstack 0
   478   000011                     ___aomod@counter:
   479                           	callstack 0
   480   000011                     ___fldiv@sign:
   481                           	callstack 0
   482   000011                     pad@fp:
   483                           	callstack 0
   484                           
   485                           ; 2 bytes @ 0x10
   486   000011                     	ds	1
   487   000012                     ___aodiv@sign:
   488                           	callstack 0
   489   000012                     ___aomod@sign:
   490                           	callstack 0
   491   000012                     ___fldiv@new_exp:
   492                           	callstack 0
   493                           
   494                           ; 2 bytes @ 0x11
   495   000012                     	ds	1
   496   000013                     ?_abs:
   497                           	callstack 0
   498   000013                     pad@buf:
   499                           	callstack 0
   500   000013                     abs@a:
   501                           	callstack 0
   502   000013                     ___flmul@a:
   503                           	callstack 0
   504   000013                     ___aodiv@quotient:
   505                           	callstack 0
   506                           
   507                           ; 8 bytes @ 0x12
   508   000013                     	ds	1
   509   000014                     ___fldiv@grs:
   510                           	callstack 0
   511                           
   512                           ; 4 bytes @ 0x13
   513   000014                     	ds	1
   514   000015                     ??_abs:
   515   000015                     pad@p:
   516                           	callstack 0
   517                           
   518                           ; 2 bytes @ 0x14
   519   000015                     	ds	2
   520   000017                     ??___flmul:
   521   000017                     ??_pad:
   522                           
   523                           ; 1 bytes @ 0x16
   524   000017                     	ds	1
   525   000018                     ___fldiv@bexp:
   526                           	callstack 0
   527   000018                     pad@i:
   528                           	callstack 0
   529                           
   530                           ; 2 bytes @ 0x17
   531   000018                     	ds	1
   532   000019                     ___fldiv@aexp:
   533                           	callstack 0
   534                           
   535                           ; 1 bytes @ 0x18
   536   000019                     	ds	1
   537   00001A                     ?_floorf:
   538                           	callstack 0
   539   00001A                     pad@w:
   540                           	callstack 0
   541   00001A                     floorf@x:
   542                           	callstack 0
   543                           
   544                           ; 4 bytes @ 0x19
   545   00001A                     	ds	1
   546   00001B                     ___flmul@sign:
   547                           	callstack 0
   548                           
   549                           ; 1 bytes @ 0x1A
   550   00001B                     	ds	1
   551   00001C                     dtoa@fp:
   552                           	callstack 0
   553   00001C                     ___flmul@grs:
   554                           	callstack 0
   555                           
   556                           ; 4 bytes @ 0x1B
   557   00001C                     	ds	2
   558   00001E                     ??_floorf:
   559   00001E                     dtoa@d:
   560                           	callstack 0
   561                           
   562                           ; 8 bytes @ 0x1D
   563   00001E                     	ds	2
   564   000020                     ___flmul@aexp:
   565                           	callstack 0
   566                           
   567                           ; 1 bytes @ 0x1F
   568   000020                     	ds	1
   569   000021                     ___flmul@bexp:
   570                           	callstack 0
   571                           
   572                           ; 1 bytes @ 0x20
   573   000021                     	ds	1
   574   000022                     ___flmul@prod:
   575                           	callstack 0
   576                           
   577                           ; 4 bytes @ 0x21
   578   000022                     	ds	2
   579   000024                     floorf@m:
   580                           	callstack 0
   581                           
   582                           ; 4 bytes @ 0x23
   583   000024                     	ds	2
   584   000026                     ??_dtoa:
   585   000026                     ___flmul@temp:
   586                           	callstack 0
   587                           
   588                           ; 2 bytes @ 0x25
   589   000026                     	ds	2
   590   000028                     ??_conv_AN0:
   591   000028                     ?___flsub:
   592                           	callstack 0
   593   000028                     floorf@e:
   594                           	callstack 0
   595   000028                     ___flge@ff1:
   596                           	callstack 0
   597   000028                     ___flsub@b:
   598                           	callstack 0
   599                           
   600                           ; 4 bytes @ 0x27
   601   000028                     	ds	2
   602   00002A                     floorf@u:
   603                           	callstack 0
   604                           
   605                           ; 4 bytes @ 0x29
   606   00002A                     	ds	2
   607   00002C                     ___flge@ff2:
   608                           	callstack 0
   609   00002C                     ___flsub@a:
   610                           	callstack 0
   611                           
   612                           ; 4 bytes @ 0x2B
   613   00002C                     	ds	2
   614   00002E                     _dtoa$885:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0x2D
   618   00002E                     	ds	2
   619   000030                     ??___flge:
   620   000030                     dtoa@p:
   621                           	callstack 0
   622                           
   623                           ; 2 bytes @ 0x2F
   624   000030                     	ds	2
   625   000032                     dtoa@w:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0x31
   629   000032                     	ds	2
   630   000034                     efgtoa@fp:
   631                           	callstack 0
   632   000034                     dtoa@n:
   633                           	callstack 0
   634                           
   635                           ; 8 bytes @ 0x33
   636   000034                     	ds	2
   637   000036                     efgtoa@f:
   638                           	callstack 0
   639                           
   640                           ; 4 bytes @ 0x35
   641   000036                     	ds	4
   642   00003A                     efgtoa@c:
   643                           	callstack 0
   644                           
   645                           ; 1 bytes @ 0x39
   646   00003A                     	ds	1
   647   00003B                     ??_efgtoa:
   648                           
   649                           ; 1 bytes @ 0x3A
   650   00003B                     	ds	1
   651   00003C                     dtoa@i:
   652                           	callstack 0
   653                           
   654                           ; 2 bytes @ 0x3B
   655   00003C                     	ds	1
   656   00003D                     efgtoa@ne:
   657                           	callstack 0
   658                           
   659                           ; 2 bytes @ 0x3C
   660   00003D                     	ds	1
   661   00003E                     dtoa@s:
   662                           	callstack 0
   663                           
   664                           ; 1 bytes @ 0x3D
   665   00003E                     	ds	1
   666   00003F                     efgtoa@p:
   667                           	callstack 0
   668                           
   669                           ; 2 bytes @ 0x3E
   670   00003F                     	ds	2
   671   000041                     efgtoa@t:
   672                           	callstack 0
   673                           
   674                           ; 2 bytes @ 0x40
   675   000041                     	ds	2
   676   000043                     _efgtoa$916:
   677                           	callstack 0
   678                           
   679                           ; 2 bytes @ 0x42
   680   000043                     	ds	2
   681   000045                     efgtoa@pp:
   682                           	callstack 0
   683                           
   684                           ; 1 bytes @ 0x44
   685   000045                     	ds	1
   686   000046                     efgtoa@mode:
   687                           	callstack 0
   688                           
   689                           ; 1 bytes @ 0x45
   690   000046                     	ds	1
   691   000047                     efgtoa@nmode:
   692                           	callstack 0
   693                           
   694                           ; 1 bytes @ 0x46
   695   000047                     	ds	1
   696   000048                     efgtoa@d:
   697                           	callstack 0
   698                           
   699                           ; 2 bytes @ 0x47
   700   000048                     	ds	2
   701   00004A                     efgtoa@m:
   702                           	callstack 0
   703                           
   704                           ; 2 bytes @ 0x49
   705   00004A                     	ds	2
   706   00004C                     efgtoa@e:
   707                           	callstack 0
   708                           
   709                           ; 2 bytes @ 0x4B
   710   00004C                     	ds	2
   711   00004E                     efgtoa@w:
   712                           	callstack 0
   713                           
   714                           ; 2 bytes @ 0x4D
   715   00004E                     	ds	2
   716   000050                     efgtoa@ou:
   717                           	callstack 0
   718                           
   719                           ; 4 bytes @ 0x4F
   720   000050                     	ds	4
   721   000054                     efgtoa@h:
   722                           	callstack 0
   723                           
   724                           ; 4 bytes @ 0x53
   725   000054                     	ds	4
   726   000058                     efgtoa@l:
   727                           	callstack 0
   728                           
   729                           ; 4 bytes @ 0x57
   730   000058                     	ds	4
   731   00005C                     efgtoa@i:
   732                           	callstack 0
   733                           
   734                           ; 2 bytes @ 0x5B
   735   00005C                     	ds	2
   736   00005E                     efgtoa@sign:
   737                           	callstack 0
   738                           
   739                           ; 1 bytes @ 0x5D
   740   00005E                     	ds	1
   741   00005F                     efgtoa@g:
   742                           	callstack 0
   743                           
   744                           ; 4 bytes @ 0x5E
   745   00005F                     	ds	4
   746   000063                     efgtoa@n:
   747                           	callstack 0
   748                           
   749                           ; 2 bytes @ 0x62
   750   000063                     	ds	2
   751   000065                     efgtoa@u:
   752                           	callstack 0
   753                           
   754                           ; 4 bytes @ 0x64
   755   000065                     	ds	4
   756   000069                     vfpfcnvrt@fp:
   757                           	callstack 0
   758                           
   759                           ; 2 bytes @ 0x68
   760   000069                     	ds	2
   761   00006B                     vfpfcnvrt@fmt:
   762                           	callstack 0
   763                           
   764                           ; 2 bytes @ 0x6A
   765   00006B                     	ds	2
   766   00006D                     vfpfcnvrt@ap:
   767                           	callstack 0
   768                           
   769                           ; 2 bytes @ 0x6C
   770   00006D                     	ds	2
   771   00006F                     ??_vfpfcnvrt:
   772                           
   773                           ; 1 bytes @ 0x6E
   774   00006F                     	ds	3
   775   000072                     vfpfcnvrt@done:
   776                           	callstack 0
   777                           
   778                           ; 2 bytes @ 0x71
   779   000072                     	ds	2
   780   000074                     vfpfcnvrt@convarg:
   781                           	callstack 0
   782                           
   783                           ; 8 bytes @ 0x73
   784   000074                     	ds	8
   785   00007C                     vfpfcnvrt@c:
   786                           	callstack 0
   787                           
   788                           ; 1 bytes @ 0x7B
   789   00007C                     	ds	1
   790   00007D                     vfpfcnvrt@cp:
   791                           	callstack 0
   792                           
   793                           ; 2 bytes @ 0x7C
   794   00007D                     	ds	2
   795   00007F                     
   796                           ; 1 bytes @ 0x7E
   797 ;;
   798 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   799 ;;
   800 ;; *************** function _main *****************
   801 ;; Defined at:
   802 ;;		line 109 in file "Program_main.c"
   803 ;; Parameters:    Size  Location     Type
   804 ;;		None
   805 ;; Auto vars:     Size  Location     Type
   806 ;;		None
   807 ;; Return value:  Size  Location     Type
   808 ;;                  1    wreg      void 
   809 ;; Registers used:
   810 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   811 ;; Tracked objects:
   812 ;;		On entry : 0/0
   813 ;;		On exit  : 0/0
   814 ;;		Unchanged: 0/0
   815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   816 ;;      Params:         0       0       0       0       0       0       0
   817 ;;      Locals:         0       0       0       0       0       0       0
   818 ;;      Temps:          0       0       0       0       0       0       0
   819 ;;      Totals:         0       0       0       0       0       0       0
   820 ;;Total ram usage:        0 bytes
   821 ;; Hardware stack levels required when called: 9
   822 ;; This function calls:
   823 ;;		_config_ADC
   824 ;;		_config_FOSC
   825 ;;		_conv_AN0
   826 ;;		_eusart_init
   827 ;;		_transmiter_DATA
   828 ;; This function is called by:
   829 ;;		Startup code after reset
   830 ;; This function uses a non-reentrant model
   831 ;;
   832                           
   833                           	psect	text0
   834   003656                     __ptext0:
   835                           	callstack 0
   836   003656                     _main:
   837                           	callstack 22
   838   003656                     
   839                           ;Program_main.c: 111:     config_FOSC();
   840   003656  EC54  F01B         	call	_config_FOSC	;wreg free
   841                           
   842                           ;Program_main.c: 112:     config_ADC();
   843   00365A  EC4D  F01B         	call	_config_ADC	;wreg free
   844                           
   845                           ;Program_main.c: 113:     eusart_init();
   846   00365E  EC44  F01B         	call	_eusart_init	;wreg free
   847   003662                     l3841:
   848                           
   849                           ;Program_main.c: 115:     {;Program_main.c: 116:         conv_AN0();
   850   003662  ECFC  F018         	call	_conv_AN0	;wreg free
   851   003666                     
   852                           ;Program_main.c: 117:         transmiter_DATA();
   853   003666  EC71  F019         	call	_transmiter_DATA	;wreg free
   854   00366A  EF31  F01B         	goto	l3841
   855   00366E  EF00  F000         	goto	start
   856   003672                     __end_of_main:
   857                           	callstack 0
   858                           
   859 ;; *************** function _transmiter_DATA *****************
   860 ;; Defined at:
   861 ;;		line 96 in file "Program_main.c"
   862 ;; Parameters:    Size  Location     Type
   863 ;;		None
   864 ;; Auto vars:     Size  Location     Type
   865 ;;		None
   866 ;; Return value:  Size  Location     Type
   867 ;;                  1    wreg      void 
   868 ;; Registers used:
   869 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   870 ;; Tracked objects:
   871 ;;		On entry : 0/0
   872 ;;		On exit  : 0/0
   873 ;;		Unchanged: 0/0
   874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   875 ;;      Params:         0       0       0       0       0       0       0
   876 ;;      Locals:         0       0       0       0       0       0       0
   877 ;;      Temps:          0       2       0       0       0       0       0
   878 ;;      Totals:         0       2       0       0       0       0       0
   879 ;;Total ram usage:        2 bytes
   880 ;; Hardware stack levels used: 1
   881 ;; Hardware stack levels required when called: 8
   882 ;; This function calls:
   883 ;;		_eusart_string
   884 ;;		_sprintf
   885 ;; This function is called by:
   886 ;;		_main
   887 ;; This function uses a non-reentrant model
   888 ;;
   889                           
   890                           	psect	text1
   891   0032E2                     __ptext1:
   892                           	callstack 0
   893   0032E2                     _transmiter_DATA:
   894                           	callstack 22
   895   0032E2                     
   896                           ;Program_main.c: 98:     sprintf(BufferSERIAL, "<DATA:"
   897   0032E2  0E92               	movlw	low _BufferSERIAL
   898   0032E4  0100               	movlb	0	; () banked
   899   0032E6  6FDA               	movwf	sprintf@s& (0+255),b
   900   0032E8  0E00               	movlw	high _BufferSERIAL
   901   0032EA  6FDB               	movwf	(sprintf@s+1)& (0+255),b
   902   0032EC  0E01               	movlw	low STR_1
   903   0032EE  6FDC               	movwf	sprintf@fmt& (0+255),b
   904   0032F0  0E06               	movlw	high STR_1
   905   0032F2  6FDD               	movwf	(sprintf@fmt+1)& (0+255),b
   906   0032F4  C090  F0DE         	movff	_VdigADC,?_sprintf+4
   907   0032F8  C091  F0DF         	movff	_VdigADC+1,?_sprintf+5
   908   0032FC  C088  F0E0         	movff	_VoltageADC,?_sprintf+6
   909   003300  C089  F0E1         	movff	_VoltageADC+1,?_sprintf+7
   910   003304  C08A  F0E2         	movff	_VoltageADC+2,?_sprintf+8
   911   003308  C08B  F0E3         	movff	_VoltageADC+3,?_sprintf+9
   912   00330C  EC9B  F019         	call	_sprintf	;wreg free
   913   003310                     
   914                           ;Program_main.c: 106:     eusart_string(BufferSERIAL);
   915   003310  0E92               	movlw	low _BufferSERIAL
   916   003312  6E02               	movwf	eusart_string@str^0,c
   917   003314  0E00               	movlw	high _BufferSERIAL
   918   003316  6E03               	movwf	(eusart_string@str+1)^0,c
   919   003318  ECD8  F01A         	call	_eusart_string	;wreg free
   920   00331C                     
   921                           ;Program_main.c: 107:     _delay((unsigned long)((200)*(8000000/4000.0)));
   922   00331C  0E03               	movlw	3
   923   00331E  0100               	movlb	0	; () banked
   924   003320  6FF2               	movwf	(??_transmiter_DATA+1)& (0+255),b
   925   003322  0E08               	movlw	8
   926   003324  6FF1               	movwf	??_transmiter_DATA& (0+255),b
   927   003326  0E77               	movlw	119
   928   003328                     u4447:
   929   003328  2EE8               	decfsz	wreg,f,c
   930   00332A  D7FE               	bra	u4447
   931   00332C  2FF1               	decfsz	??_transmiter_DATA& (0+255),f,b
   932   00332E  D7FC               	bra	u4447
   933   003330  2FF2               	decfsz	(??_transmiter_DATA+1)& (0+255),f,b
   934   003332  D7FA               	bra	u4447
   935   003334  0012               	return		;funcret
   936   003336                     __end_of_transmiter_DATA:
   937                           	callstack 0
   938                           
   939 ;; *************** function _sprintf *****************
   940 ;; Defined at:
   941 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
   942 ;; Parameters:    Size  Location     Type
   943 ;;  s               2    8[BANK0 ] PTR unsigned char 
   944 ;;		 -> BufferSERIAL(64), 
   945 ;;  fmt             2   10[BANK0 ] PTR const unsigned char 
   946 ;;		 -> STR_1(31), 
   947 ;; Auto vars:     Size  Location     Type
   948 ;;  f              11   20[BANK0 ] struct _IO_FILE
   949 ;;  ap              2   18[BANK0 ] PTR void [1]
   950 ;;		 -> ?_sprintf(2), 
   951 ;;  ret             2    0        int 
   952 ;; Return value:  Size  Location     Type
   953 ;;                  2    8[BANK0 ] int 
   954 ;; Registers used:
   955 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   956 ;; Tracked objects:
   957 ;;		On entry : 0/0
   958 ;;		On exit  : 0/0
   959 ;;		Unchanged: 0/0
   960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   961 ;;      Params:         0      10       0       0       0       0       0
   962 ;;      Locals:         0      13       0       0       0       0       0
   963 ;;      Temps:          0       0       0       0       0       0       0
   964 ;;      Totals:         0      23       0       0       0       0       0
   965 ;;Total ram usage:       23 bytes
   966 ;; Hardware stack levels used: 1
   967 ;; Hardware stack levels required when called: 7
   968 ;; This function calls:
   969 ;;		_vfprintf
   970 ;; This function is called by:
   971 ;;		_transmiter_DATA
   972 ;; This function uses a non-reentrant model
   973 ;;
   974                           
   975                           	psect	text2
   976   003336                     __ptext2:
   977                           	callstack 0
   978   003336                     _sprintf:
   979                           	callstack 22
   980   003336  0EDE               	movlw	low (?_sprintf+4)
   981   003338  0100               	movlb	0	; () banked
   982   00333A  6FE4               	movwf	sprintf@ap& (0+255),b
   983   00333C  0E00               	movlw	high (?_sprintf+4)
   984   00333E  6FE5               	movwf	(sprintf@ap+1)& (0+255),b
   985   003340  C0DA  F0E6         	movff	sprintf@s,sprintf@f
   986   003344  C0DB  F0E7         	movff	sprintf@s+1,sprintf@f+1
   987   003348                     
   988                           ; BSR set to: 0
   989   003348  0E00               	movlw	0
   990   00334A  6FEA               	movwf	(sprintf@f+4)& (0+255),b
   991   00334C  0E00               	movlw	0
   992   00334E  6FE9               	movwf	(sprintf@f+3)& (0+255),b
   993   003350                     
   994                           ; BSR set to: 0
   995   003350  0E00               	movlw	0
   996   003352  6FF0               	movwf	(sprintf@f+10)& (0+255),b
   997   003354  0E00               	movlw	0
   998   003356  6FEF               	movwf	(sprintf@f+9)& (0+255),b
   999   003358                     
  1000                           ; BSR set to: 0
  1001   003358  0EE6               	movlw	low sprintf@f
  1002   00335A  6FD2               	movwf	vfprintf@fp& (0+255),b
  1003   00335C  0E00               	movlw	high sprintf@f
  1004   00335E  6FD3               	movwf	(vfprintf@fp+1)& (0+255),b
  1005   003360  C0DC  F0D4         	movff	sprintf@fmt,vfprintf@fmt
  1006   003364  C0DD  F0D5         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1007   003368  0EE4               	movlw	low sprintf@ap
  1008   00336A  6FD6               	movwf	vfprintf@ap& (0+255),b
  1009   00336C  0E00               	movlw	high sprintf@ap
  1010   00336E  6FD7               	movwf	(vfprintf@ap+1)& (0+255),b
  1011   003370  ECC4  F019         	call	_vfprintf	;wreg free
  1012   003374  0100               	movlb	0	; () banked
  1013   003376  51E9               	movf	(sprintf@f+3)& (0+255),w,b
  1014   003378  25DA               	addwf	sprintf@s& (0+255),w,b
  1015   00337A  6ED9               	movwf	fsr2l,c
  1016   00337C  51EA               	movf	(sprintf@f+4)& (0+255),w,b
  1017   00337E  21DB               	addwfc	(sprintf@s+1)& (0+255),w,b
  1018   003380  6EDA               	movwf	fsr2h,c
  1019   003382  0E00               	movlw	0
  1020   003384  6EDF               	movwf	indf2,c
  1021   003386                     
  1022                           ; BSR set to: 0
  1023   003386  0012               	return		;funcret
  1024   003388                     __end_of_sprintf:
  1025                           	callstack 0
  1026                           
  1027 ;; *************** function _vfprintf *****************
  1028 ;; Defined at:
  1029 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1030 ;; Parameters:    Size  Location     Type
  1031 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  1032 ;;		 -> sprintf@f(11), 
  1033 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1034 ;;		 -> STR_1(31), 
  1035 ;;  ap              2    4[BANK0 ] PTR PTR void 
  1036 ;;		 -> sprintf@ap(2), 
  1037 ;; Auto vars:     Size  Location     Type
  1038 ;;  cfmt            2    6[BANK0 ] PTR unsigned char 
  1039 ;;		 -> STR_1(31), 
  1040 ;; Return value:  Size  Location     Type
  1041 ;;                  2    0[BANK0 ] int 
  1042 ;; Registers used:
  1043 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1044 ;; Tracked objects:
  1045 ;;		On entry : 0/0
  1046 ;;		On exit  : 0/0
  1047 ;;		Unchanged: 0/0
  1048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1049 ;;      Params:         0       6       0       0       0       0       0
  1050 ;;      Locals:         0       2       0       0       0       0       0
  1051 ;;      Temps:          0       0       0       0       0       0       0
  1052 ;;      Totals:         0       8       0       0       0       0       0
  1053 ;;Total ram usage:        8 bytes
  1054 ;; Hardware stack levels used: 1
  1055 ;; Hardware stack levels required when called: 6
  1056 ;; This function calls:
  1057 ;;		_vfpfcnvrt
  1058 ;; This function is called by:
  1059 ;;		_sprintf
  1060 ;; This function uses a non-reentrant model
  1061 ;;
  1062                           
  1063                           	psect	text3
  1064   003388                     __ptext3:
  1065                           	callstack 0
  1066   003388                     _vfprintf:
  1067                           	callstack 22
  1068   003388                     
  1069                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1070   003388  C0D4  F0D8         	movff	vfprintf@fmt,vfprintf@cfmt
  1071   00338C  C0D5  F0D9         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1072                           
  1073                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1074   003390  EFD8  F019         	goto	l3753
  1075   003394                     l3751:
  1076                           
  1077                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1078   003394  C0D2  F069         	movff	vfprintf@fp,vfpfcnvrt@fp
  1079   003398  C0D3  F06A         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1080   00339C  0ED8               	movlw	low vfprintf@cfmt
  1081   00339E  6E6B               	movwf	vfpfcnvrt@fmt^0,c
  1082   0033A0  0E00               	movlw	high vfprintf@cfmt
  1083   0033A2  6E6C               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1084   0033A4  C0D6  F06D         	movff	vfprintf@ap,vfpfcnvrt@ap
  1085   0033A8  C0D7  F06E         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1086   0033AC  EC33  F008         	call	_vfpfcnvrt	;wreg free
  1087   0033B0                     l3753:
  1088                           
  1089                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1090   0033B0  C0D8  FFF6         	movff	vfprintf@cfmt,tblptrl
  1091   0033B4  C0D9  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1092   0033B8                     	if	0	;tblptru may be non-zero
  1093   0033B8                     	endif
  1094   0033B8                     	if	0	;tblptru may be non-zero
  1095   0033B8                     	endif
  1096   0033B8  0008               	tblrd		*
  1097   0033BA  50F5               	movf	tablat,w,c
  1098   0033BC  0900               	iorlw	0
  1099   0033BE  A4D8               	btfss	status,2,c
  1100   0033C0  EFE4  F019         	goto	u4311
  1101   0033C4  EFE6  F019         	goto	u4310
  1102   0033C8                     u4311:
  1103   0033C8  EFCA  F019         	goto	l3751
  1104   0033CC                     u4310:
  1105   0033CC                     
  1106                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1107   0033CC  0E00               	movlw	0
  1108   0033CE  0100               	movlb	0	; () banked
  1109   0033D0  6FD3               	movwf	(?_vfprintf+1)& (0+255),b
  1110   0033D2  0E00               	movlw	0
  1111   0033D4  6FD2               	movwf	?_vfprintf& (0+255),b
  1112   0033D6                     
  1113                           ; BSR set to: 0
  1114   0033D6  0012               	return		;funcret
  1115   0033D8                     __end_of_vfprintf:
  1116                           	callstack 0
  1117                           
  1118 ;; *************** function _vfpfcnvrt *****************
  1119 ;; Defined at:
  1120 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1121 ;; Parameters:    Size  Location     Type
  1122 ;;  fp              2  104[COMRAM] PTR struct _IO_FILE
  1123 ;;		 -> sprintf@f(11), 
  1124 ;;  fmt             2  106[COMRAM] PTR PTR unsigned char 
  1125 ;;		 -> vfprintf@cfmt(2), 
  1126 ;;  ap              2  108[COMRAM] PTR PTR void 
  1127 ;;		 -> sprintf@ap(2), 
  1128 ;; Auto vars:     Size  Location     Type
  1129 ;;  convarg         8  115[COMRAM] struct .
  1130 ;;  cp              2  124[COMRAM] PTR unsigned char 
  1131 ;;		 -> STR_1(31), 
  1132 ;;  done            2  113[COMRAM] int 
  1133 ;;  i               2    0        int 
  1134 ;;  c               1  123[COMRAM] unsigned char 
  1135 ;; Return value:  Size  Location     Type
  1136 ;;                  1    wreg      void 
  1137 ;; Registers used:
  1138 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1139 ;; Tracked objects:
  1140 ;;		On entry : 0/0
  1141 ;;		On exit  : 0/0
  1142 ;;		Unchanged: 0/0
  1143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1144 ;;      Params:         6       0       0       0       0       0       0
  1145 ;;      Locals:        13       0       0       0       0       0       0
  1146 ;;      Temps:          3       0       0       0       0       0       0
  1147 ;;      Totals:        22       0       0       0       0       0       0
  1148 ;;Total ram usage:       22 bytes
  1149 ;; Hardware stack levels used: 1
  1150 ;; Hardware stack levels required when called: 5
  1151 ;; This function calls:
  1152 ;;		_atoi
  1153 ;;		_dtoa
  1154 ;;		_efgtoa
  1155 ;;		_fputc
  1156 ;;		_isdigit
  1157 ;; This function is called by:
  1158 ;;		_vfprintf
  1159 ;; This function uses a non-reentrant model
  1160 ;;
  1161                           
  1162                           	psect	text4
  1163   001066                     __ptext4:
  1164                           	callstack 0
  1165   001066                     _vfpfcnvrt:
  1166                           	callstack 22
  1167   001066                     
  1168                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1169   001066  C06B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1170   00106A  C06C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1171   00106E  CFDE FFF6          	movff	postinc2,tblptrl
  1172   001072  CFDD FFF7          	movff	postdec2,tblptrh
  1173   001076                     	if	0	;tblptru may be non-zero
  1174   001076                     	endif
  1175   001076                     	if	0	;tblptru may be non-zero
  1176   001076                     	endif
  1177   001076  0008               	tblrd		*
  1178   001078  50F5               	movf	tablat,w,c
  1179   00107A  0A25               	xorlw	37
  1180   00107C  A4D8               	btfss	status,2,c
  1181   00107E  EF43  F008         	goto	u4191
  1182   001082  EF45  F008         	goto	u4190
  1183   001086                     u4191:
  1184   001086  EFB9  F00A         	goto	l3723
  1185   00108A                     u4190:
  1186   00108A                     
  1187                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1188   00108A  C06B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1189   00108E  C06C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1190   001092  2ADE               	incf	postinc2,f,c
  1191   001094  0E00               	movlw	0
  1192   001096  22DD               	addwfc	postdec2,f,c
  1193   001098                     
  1194                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1195   001098  0E00               	movlw	0
  1196   00109A  0100               	movlb	0	; () banked
  1197   00109C  6F8D               	movwf	(_width+1)& (0+255),b
  1198   00109E  0E00               	movlw	0
  1199   0010A0  6F8C               	movwf	_width& (0+255),b
  1200   0010A2  C08C  F07F         	movff	_width,_flags
  1201   0010A6                     
  1202                           ; BSR set to: 0
  1203                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1204   0010A6  698E               	setf	_prec& (0+255),b
  1205   0010A8  698F               	setf	(_prec+1)& (0+255),b
  1206   0010AA                     
  1207                           ; BSR set to: 0
  1208                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1027:         don
      +                          e = 0;
  1209   0010AA  0E00               	movlw	0
  1210   0010AC  6E73               	movwf	(vfpfcnvrt@done+1)^0,c
  1211   0010AE  0E00               	movlw	0
  1212   0010B0  6E72               	movwf	vfpfcnvrt@done^0,c
  1213                           
  1214                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  1215   0010B2  EF85  F008         	goto	l3637
  1216   0010B6                     l3627:
  1217                           
  1218                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1038:            
      +                                   flags |= (1 << 1);
  1219   0010B6  827F               	bsf	_flags^0,1,c
  1220   0010B8                     
  1221                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1039:            
      +                                   ++*fmt;
  1222   0010B8  C06B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1223   0010BC  C06C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1224   0010C0  2ADE               	incf	postinc2,f,c
  1225   0010C2  0E00               	movlw	0
  1226   0010C4  22DD               	addwfc	postdec2,f,c
  1227                           
  1228                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1040:            
      +                                   break;
  1229   0010C6  EF85  F008         	goto	l3637
  1230   0010CA                     l3631:
  1231                           
  1232                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1061:            
      +                                   done = 1;
  1233   0010CA  0E00               	movlw	0
  1234   0010CC  6E73               	movwf	(vfpfcnvrt@done+1)^0,c
  1235   0010CE  0E01               	movlw	1
  1236   0010D0  6E72               	movwf	vfpfcnvrt@done^0,c
  1237                           
  1238                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1062:            
      +                                   break;
  1239   0010D2  EF85  F008         	goto	l3637
  1240   0010D6                     l3635:
  1241   0010D6  C06B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1242   0010DA  C06C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1243   0010DE  CFDE FFF6          	movff	postinc2,tblptrl
  1244   0010E2  CFDD FFF7          	movff	postdec2,tblptrh
  1245   0010E6                     	if	0	;tblptru may be non-zero
  1246   0010E6                     	endif
  1247   0010E6                     	if	0	;tblptru may be non-zero
  1248   0010E6                     	endif
  1249   0010E6  0008               	tblrd		*
  1250   0010E8  50F5               	movf	tablat,w,c
  1251   0010EA  6E6F               	movwf	??_vfpfcnvrt^0,c
  1252   0010EC  6A70               	clrf	(??_vfpfcnvrt+1)^0,c
  1253                           
  1254                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1255                           ; Switch size 1, requested type "simple"
  1256                           ; Number of cases is 1, Range of values is 0 to 0
  1257                           ; switch strategies available:
  1258                           ; Name         Instructions Cycles
  1259                           ; simple_byte            4     3 (average)
  1260                           ;	Chosen strategy is simple_byte
  1261   0010EE  5070               	movf	(??_vfpfcnvrt+1)^0,w,c
  1262   0010F0  0A00               	xorlw	0	; case 0
  1263   0010F2  B4D8               	btfsc	status,2,c
  1264   0010F4  EF7E  F008         	goto	l3945
  1265   0010F8  EF65  F008         	goto	l3631
  1266   0010FC                     l3945:
  1267                           
  1268                           ; Switch size 1, requested type "simple"
  1269                           ; Number of cases is 1, Range of values is 48 to 48
  1270                           ; switch strategies available:
  1271                           ; Name         Instructions Cycles
  1272                           ; simple_byte            4     3 (average)
  1273                           ;	Chosen strategy is simple_byte
  1274   0010FC  506F               	movf	??_vfpfcnvrt^0,w,c
  1275   0010FE  0A30               	xorlw	48	; case 48
  1276   001100  B4D8               	btfsc	status,2,c
  1277   001102  EF5B  F008         	goto	l3627
  1278   001106  EF65  F008         	goto	l3631
  1279   00110A                     l3637:
  1280                           
  1281                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  1282   00110A  5072               	movf	vfpfcnvrt@done^0,w,c
  1283   00110C  1073               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  1284   00110E  B4D8               	btfsc	status,2,c
  1285   001110  EF8C  F008         	goto	u4201
  1286   001114  EF8E  F008         	goto	u4200
  1287   001118                     u4201:
  1288   001118  EF6B  F008         	goto	l3635
  1289   00111C                     u4200:
  1290   00111C                     
  1291                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1074:         if 
      +                          ((*fmt)[0] == '*') {
  1292   00111C  C06B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1293   001120  C06C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1294   001124  CFDE FFF6          	movff	postinc2,tblptrl
  1295   001128  CFDD FFF7          	movff	postdec2,tblptrh
  1296   00112C                     	if	0	;tblptru may be non-zero
  1297   00112C                     	endif
  1298   00112C                     	if	0	;tblptru may be non-zero
  1299   00112C                     	endif
  1300   00112C  0008               	tblrd		*
  1301   00112E  50F5               	movf	tablat,w,c
  1302   001130  0A2A               	xorlw	42
  1303   001132  A4D8               	btfss	status,2,c
  1304   001134  EF9E  F008         	goto	u4211
  1305   001138  EFA0  F008         	goto	u4210
  1306   00113C                     u4211:
  1307   00113C  EFCA  F008         	goto	l3647
  1308   001140                     u4210:
  1309   001140                     
  1310                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1075:            
      +                           ++*fmt;
  1311   001140  C06B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1312   001144  C06C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1313   001148  2ADE               	incf	postinc2,f,c
  1314   00114A  0E00               	movlw	0
  1315   00114C  22DD               	addwfc	postdec2,f,c
  1316                           
  1317                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1076:            
      +                           width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1318   00114E  C06D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1319   001152  C06E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1320   001156  CFDF F06F          	movff	indf2,??_vfpfcnvrt
  1321   00115A  0E02               	movlw	2
  1322   00115C  26DE               	addwf	postinc2,f,c
  1323   00115E  CFDF F070          	movff	indf2,??_vfpfcnvrt+1
  1324   001162  0E00               	movlw	0
  1325   001164  22DD               	addwfc	postdec2,f,c
  1326   001166  C06F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1327   00116A  C070  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1328   00116E  CFDE F08C          	movff	postinc2,_width
  1329   001172  CFDD F08D          	movff	postdec2,_width+1
  1330   001176                     
  1331                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1077:            
      +                           if (width < 0) {
  1332   001176  0100               	movlb	0	; () banked
  1333   001178  BF8D               	btfsc	(_width+1)& (0+255),7,b
  1334   00117A  EFC3  F008         	goto	u4220
  1335   00117E  EFC1  F008         	goto	u4221
  1336   001182                     u4221:
  1337   001182  EFFD  F008         	goto	l3655
  1338   001186                     u4220:
  1339   001186                     
  1340                           ; BSR set to: 0
  1341                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1078:            
      +                               flags |= (1 << 0);
  1342   001186  807F               	bsf	_flags^0,0,c
  1343                           
  1344                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1079:            
      +                               width = -width;
  1345   001188  6D8C               	negf	_width& (0+255),b
  1346   00118A  1F8D               	comf	(_width+1)& (0+255),f,b
  1347   00118C  B0D8               	btfsc	status,0,c
  1348   00118E  2B8D               	incf	(_width+1)& (0+255),f,b
  1349   001190  EFFD  F008         	goto	l3655
  1350   001194                     l3647:
  1351                           
  1352                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1082:            
      +                           width = atoi(*fmt);
  1353   001194  C06B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1354   001198  C06C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1355   00119C  CFDE F007          	movff	postinc2,atoi@s
  1356   0011A0  CFDD F008          	movff	postdec2,atoi@s+1
  1357   0011A4  ECC4  F015         	call	_atoi	;wreg free
  1358   0011A8  C007  F08C         	movff	?_atoi,_width
  1359   0011AC  C008  F08D         	movff	?_atoi+1,_width+1
  1360                           
  1361                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1083:            
      +                           while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  1362   0011B0  EFE1  F008         	goto	l3653
  1363   0011B4                     l3649:
  1364                           
  1365                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1084:            
      +                               ++*fmt;
  1366   0011B4  C06B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1367   0011B8  C06C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1368   0011BC  2ADE               	incf	postinc2,f,c
  1369   0011BE  0E00               	movlw	0
  1370   0011C0  22DD               	addwfc	postdec2,f,c
  1371   0011C2                     l3653:
  1372   0011C2  C06B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1373   0011C6  C06C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1374   0011CA  CFDE FFF6          	movff	postinc2,tblptrl
  1375   0011CE  CFDD FFF7          	movff	postdec2,tblptrh
  1376   0011D2                     	if	0	;tblptru may be non-zero
  1377   0011D2                     	endif
  1378   0011D2                     	if	0	;tblptru may be non-zero
  1379   0011D2                     	endif
  1380   0011D2  0008               	tblrd		*
  1381   0011D4  CFF5 F06F          	movff	tablat,??_vfpfcnvrt
  1382   0011D8  0ED0               	movlw	208
  1383   0011DA  246F               	addwf	??_vfpfcnvrt^0,w,c
  1384   0011DC  6E70               	movwf	(??_vfpfcnvrt+1)^0,c
  1385   0011DE  6A71               	clrf	(??_vfpfcnvrt+2)^0,c
  1386   0011E0  0EFF               	movlw	255
  1387   0011E2  2271               	addwfc	(??_vfpfcnvrt+2)^0,f,c
  1388   0011E4  5071               	movf	(??_vfpfcnvrt+2)^0,w,c
  1389   0011E6  E109               	bnz	u4230
  1390   0011E8  0E0A               	movlw	10
  1391   0011EA  5C70               	subwf	(??_vfpfcnvrt+1)^0,w,c
  1392   0011EC  A0D8               	btfss	status,0,c
  1393   0011EE  EFFB  F008         	goto	u4231
  1394   0011F2  EFFD  F008         	goto	u4230
  1395   0011F6                     u4231:
  1396   0011F6  EFDA  F008         	goto	l3649
  1397   0011FA                     u4230:
  1398   0011FA                     l3655:
  1399                           
  1400                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1091:         if 
      +                          ((*fmt)[0] == '.') {
  1401   0011FA  C06B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1402   0011FE  C06C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1403   001202  CFDE FFF6          	movff	postinc2,tblptrl
  1404   001206  CFDD FFF7          	movff	postdec2,tblptrh
  1405   00120A                     	if	0	;tblptru may be non-zero
  1406   00120A                     	endif
  1407   00120A                     	if	0	;tblptru may be non-zero
  1408   00120A                     	endif
  1409   00120A  0008               	tblrd		*
  1410   00120C  50F5               	movf	tablat,w,c
  1411   00120E  0A2E               	xorlw	46
  1412   001210  A4D8               	btfss	status,2,c
  1413   001212  EF0D  F009         	goto	u4241
  1414   001216  EF0F  F009         	goto	u4240
  1415   00121A                     u4241:
  1416   00121A  EF7D  F009         	goto	l3673
  1417   00121E                     u4240:
  1418   00121E                     
  1419                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1092:            
      +                           prec = 0;
  1420   00121E  0E00               	movlw	0
  1421   001220  0100               	movlb	0	; () banked
  1422   001222  6F8F               	movwf	(_prec+1)& (0+255),b
  1423   001224  0E00               	movlw	0
  1424   001226  6F8E               	movwf	_prec& (0+255),b
  1425   001228                     
  1426                           ; BSR set to: 0
  1427                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1093:            
      +                           ++*fmt;
  1428   001228  C06B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1429   00122C  C06C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1430   001230  2ADE               	incf	postinc2,f,c
  1431   001232  0E00               	movlw	0
  1432   001234  22DD               	addwfc	postdec2,f,c
  1433   001236                     
  1434                           ; BSR set to: 0
  1435                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1094:            
      +                           if ((*fmt)[0] == '*') {
  1436   001236  C06B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1437   00123A  C06C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1438   00123E  CFDE FFF6          	movff	postinc2,tblptrl
  1439   001242  CFDD FFF7          	movff	postdec2,tblptrh
  1440   001246                     	if	0	;tblptru may be non-zero
  1441   001246                     	endif
  1442   001246                     	if	0	;tblptru may be non-zero
  1443   001246                     	endif
  1444   001246  0008               	tblrd		*
  1445   001248  50F5               	movf	tablat,w,c
  1446   00124A  0A2A               	xorlw	42
  1447   00124C  A4D8               	btfss	status,2,c
  1448   00124E  EF2B  F009         	goto	u4251
  1449   001252  EF2D  F009         	goto	u4250
  1450   001256                     u4251:
  1451   001256  EF4A  F009         	goto	l3665
  1452   00125A                     u4250:
  1453   00125A                     
  1454                           ; BSR set to: 0
  1455                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1095:            
      +                               ++*fmt;
  1456   00125A  C06B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1457   00125E  C06C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1458   001262  2ADE               	incf	postinc2,f,c
  1459   001264  0E00               	movlw	0
  1460   001266  22DD               	addwfc	postdec2,f,c
  1461                           
  1462                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1096:            
      +                               prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1463   001268  C06D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1464   00126C  C06E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1465   001270  CFDF F06F          	movff	indf2,??_vfpfcnvrt
  1466   001274  0E02               	movlw	2
  1467   001276  26DE               	addwf	postinc2,f,c
  1468   001278  CFDF F070          	movff	indf2,??_vfpfcnvrt+1
  1469   00127C  0E00               	movlw	0
  1470   00127E  22DD               	addwfc	postdec2,f,c
  1471   001280  C06F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1472   001284  C070  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1473   001288  CFDE F08E          	movff	postinc2,_prec
  1474   00128C  CFDD F08F          	movff	postdec2,_prec+1
  1475                           
  1476                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1097:            
      +                           } else {
  1477   001290  EF7D  F009         	goto	l3673
  1478   001294                     l3665:
  1479                           
  1480                           ; BSR set to: 0
  1481                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1098:            
      +                               prec = atoi(*fmt);
  1482   001294  C06B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1483   001298  C06C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1484   00129C  CFDE F007          	movff	postinc2,atoi@s
  1485   0012A0  CFDD F008          	movff	postdec2,atoi@s+1
  1486   0012A4  ECC4  F015         	call	_atoi	;wreg free
  1487   0012A8  C007  F08E         	movff	?_atoi,_prec
  1488   0012AC  C008  F08F         	movff	?_atoi+1,_prec+1
  1489                           
  1490                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1099:            
      +                               while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  1491   0012B0  EF61  F009         	goto	l3671
  1492   0012B4                     l3667:
  1493                           
  1494                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1100:            
      +                                   ++*fmt;
  1495   0012B4  C06B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1496   0012B8  C06C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1497   0012BC  2ADE               	incf	postinc2,f,c
  1498   0012BE  0E00               	movlw	0
  1499   0012C0  22DD               	addwfc	postdec2,f,c
  1500   0012C2                     l3671:
  1501   0012C2  C06B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1502   0012C6  C06C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1503   0012CA  CFDE FFF6          	movff	postinc2,tblptrl
  1504   0012CE  CFDD FFF7          	movff	postdec2,tblptrh
  1505   0012D2                     	if	0	;tblptru may be non-zero
  1506   0012D2                     	endif
  1507   0012D2                     	if	0	;tblptru may be non-zero
  1508   0012D2                     	endif
  1509   0012D2  0008               	tblrd		*
  1510   0012D4  CFF5 F06F          	movff	tablat,??_vfpfcnvrt
  1511   0012D8  0ED0               	movlw	208
  1512   0012DA  246F               	addwf	??_vfpfcnvrt^0,w,c
  1513   0012DC  6E70               	movwf	(??_vfpfcnvrt+1)^0,c
  1514   0012DE  6A71               	clrf	(??_vfpfcnvrt+2)^0,c
  1515   0012E0  0EFF               	movlw	255
  1516   0012E2  2271               	addwfc	(??_vfpfcnvrt+2)^0,f,c
  1517   0012E4  5071               	movf	(??_vfpfcnvrt+2)^0,w,c
  1518   0012E6  E109               	bnz	u4260
  1519   0012E8  0E0A               	movlw	10
  1520   0012EA  5C70               	subwf	(??_vfpfcnvrt+1)^0,w,c
  1521   0012EC  A0D8               	btfss	status,0,c
  1522   0012EE  EF7B  F009         	goto	u4261
  1523   0012F2  EF7D  F009         	goto	u4260
  1524   0012F6                     u4261:
  1525   0012F6  EF5A  F009         	goto	l3667
  1526   0012FA                     u4260:
  1527   0012FA                     l3673:
  1528                           
  1529                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  1530   0012FA  C06B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1531   0012FE  C06C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1532   001302  CFDE F07D          	movff	postinc2,vfpfcnvrt@cp
  1533   001306  CFDD F07E          	movff	postdec2,vfpfcnvrt@cp+1
  1534   00130A                     
  1535                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1536   00130A  C07D  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1537   00130E  C07E  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1538   001312                     	if	0	;tblptru may be non-zero
  1539   001312                     	endif
  1540   001312                     	if	0	;tblptru may be non-zero
  1541   001312                     	endif
  1542   001312  0008               	tblrd		*
  1543   001314  50F5               	movf	tablat,w,c
  1544   001316  0A64               	xorlw	100
  1545   001318  B4D8               	btfsc	status,2,c
  1546   00131A  EF91  F009         	goto	u4271
  1547   00131E  EF93  F009         	goto	u4270
  1548   001322                     u4271:
  1549   001322  EFA1  F009         	goto	l3679
  1550   001326                     u4270:
  1551   001326  C07D  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1552   00132A  C07E  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1553   00132E                     	if	0	;tblptru may be non-zero
  1554   00132E                     	endif
  1555   00132E                     	if	0	;tblptru may be non-zero
  1556   00132E                     	endif
  1557   00132E  0008               	tblrd		*
  1558   001330  50F5               	movf	tablat,w,c
  1559   001332  0A69               	xorlw	105
  1560   001334  A4D8               	btfss	status,2,c
  1561   001336  EF9F  F009         	goto	u4281
  1562   00133A  EFA1  F009         	goto	u4280
  1563   00133E                     u4281:
  1564   00133E  EFE4  F009         	goto	l3685
  1565   001342                     u4280:
  1566   001342                     l3679:
  1567                           
  1568                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1569   001342  C06D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1570   001346  C06E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1571   00134A  CFDF F06F          	movff	indf2,??_vfpfcnvrt
  1572   00134E  0E02               	movlw	2
  1573   001350  26DE               	addwf	postinc2,f,c
  1574   001352  CFDF F070          	movff	indf2,??_vfpfcnvrt+1
  1575   001356  0E00               	movlw	0
  1576   001358  22DD               	addwfc	postdec2,f,c
  1577   00135A  C06F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1578   00135E  C070  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1579   001362  CFDE F074          	movff	postinc2,vfpfcnvrt@convarg
  1580   001366  CFDD F075          	movff	postdec2,vfpfcnvrt@convarg+1
  1581   00136A  0E00               	movlw	0
  1582   00136C  BE75               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1583   00136E  0EFF               	movlw	-1
  1584   001370  6E76               	movwf	(vfpfcnvrt@convarg+2)^0,c
  1585   001372  6E77               	movwf	(vfpfcnvrt@convarg+3)^0,c
  1586   001374  6E78               	movwf	(vfpfcnvrt@convarg+4)^0,c
  1587   001376  6E79               	movwf	(vfpfcnvrt@convarg+5)^0,c
  1588   001378  6E7A               	movwf	(vfpfcnvrt@convarg+6)^0,c
  1589   00137A  6E7B               	movwf	(vfpfcnvrt@convarg+7)^0,c
  1590                           
  1591                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1592   00137C  0E01               	movlw	1
  1593   00137E  247D               	addwf	vfpfcnvrt@cp^0,w,c
  1594   001380  6E6F               	movwf	??_vfpfcnvrt^0,c
  1595   001382  0E00               	movlw	0
  1596   001384  207E               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1597   001386  6E70               	movwf	(??_vfpfcnvrt+1)^0,c
  1598   001388  C06B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1599   00138C  C06C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1600   001390  C06F  FFDE         	movff	??_vfpfcnvrt,postinc2
  1601   001394  C070  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1602   001398                     
  1603                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1604   001398  C069  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  1605   00139C  C06A  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1606   0013A0  C074  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  1607   0013A4  C075  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1608   0013A8  C076  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1609   0013AC  C077  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1610   0013B0  C078  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1611   0013B4  C079  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1612   0013B8  C07A  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1613   0013BC  C07B  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1614   0013C0  EC10  F011         	call	_dtoa	;wreg free
  1615   0013C4  EFCD  F00A         	goto	l923
  1616   0013C8                     l3685:
  1617                           
  1618                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  1619   0013C8  C06B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1620   0013CC  C06C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1621   0013D0  CFDE F07D          	movff	postinc2,vfpfcnvrt@cp
  1622   0013D4  CFDD F07E          	movff	postdec2,vfpfcnvrt@cp+1
  1623   0013D8                     
  1624                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  1625   0013D8  C07D  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1626   0013DC  C07E  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1627   0013E0                     	if	0	;tblptru may be non-zero
  1628   0013E0                     	endif
  1629   0013E0                     	if	0	;tblptru may be non-zero
  1630   0013E0                     	endif
  1631   0013E0  0008               	tblrd		*
  1632   0013E2  CFF5 F07C          	movff	tablat,vfpfcnvrt@c
  1633                           
  1634                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  1635   0013E6  EF01  F00A         	goto	l3697
  1636   0013EA                     l3689:
  1637                           
  1638                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  1639   0013EA  4A7D               	infsnz	vfpfcnvrt@cp^0,f,c
  1640   0013EC  2A7E               	incf	(vfpfcnvrt@cp+1)^0,f,c
  1641                           
  1642                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  1643   0013EE  EF1A  F00A         	goto	l3699
  1644   0013F2                     l3691:
  1645                           
  1646                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  1647   0013F2  0E6C               	movlw	108
  1648   0013F4  6E7C               	movwf	vfpfcnvrt@c^0,c
  1649                           
  1650                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  1651   0013F6  EF1A  F00A         	goto	l3699
  1652   0013FA                     l3693:
  1653                           
  1654                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  1655   0013FA  0E00               	movlw	0
  1656   0013FC  6E7C               	movwf	vfpfcnvrt@c^0,c
  1657                           
  1658                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  1659   0013FE  EF1A  F00A         	goto	l3699
  1660   001402                     l3697:
  1661   001402  507C               	movf	vfpfcnvrt@c^0,w,c
  1662   001404  6E6F               	movwf	??_vfpfcnvrt^0,c
  1663   001406  6A70               	clrf	(??_vfpfcnvrt+1)^0,c
  1664                           
  1665                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1666                           ; Switch size 1, requested type "simple"
  1667                           ; Number of cases is 1, Range of values is 0 to 0
  1668                           ; switch strategies available:
  1669                           ; Name         Instructions Cycles
  1670                           ; simple_byte            4     3 (average)
  1671                           ;	Chosen strategy is simple_byte
  1672   001408  5070               	movf	(??_vfpfcnvrt+1)^0,w,c
  1673   00140A  0A00               	xorlw	0	; case 0
  1674   00140C  B4D8               	btfsc	status,2,c
  1675   00140E  EF0B  F00A         	goto	l3947
  1676   001412  EFFD  F009         	goto	l3693
  1677   001416                     l3947:
  1678                           
  1679                           ; Switch size 1, requested type "simple"
  1680                           ; Number of cases is 3, Range of values is 76 to 108
  1681                           ; switch strategies available:
  1682                           ; Name         Instructions Cycles
  1683                           ; simple_byte           10     6 (average)
  1684                           ;	Chosen strategy is simple_byte
  1685   001416  506F               	movf	??_vfpfcnvrt^0,w,c
  1686   001418  0A4C               	xorlw	76	; case 76
  1687   00141A  B4D8               	btfsc	status,2,c
  1688   00141C  EFF5  F009         	goto	l3689
  1689   001420  0A2A               	xorlw	42	; case 102
  1690   001422  B4D8               	btfsc	status,2,c
  1691   001424  EFF9  F009         	goto	l3691
  1692   001428  0A0A               	xorlw	10	; case 108
  1693   00142A  B4D8               	btfsc	status,2,c
  1694   00142C  EFF5  F009         	goto	l3689
  1695   001430  EFFD  F009         	goto	l3693
  1696   001434                     l3699:
  1697   001434  C07D  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1698   001438  C07E  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1699   00143C                     	if	0	;tblptru may be non-zero
  1700   00143C                     	endif
  1701   00143C                     	if	0	;tblptru may be non-zero
  1702   00143C                     	endif
  1703   00143C  0008               	tblrd		*
  1704   00143E  50F5               	movf	tablat,w,c
  1705   001440  0A66               	xorlw	102
  1706   001442  A4D8               	btfss	status,2,c
  1707   001444  EF26  F00A         	goto	u4291
  1708   001448  EF28  F00A         	goto	u4290
  1709   00144C                     u4291:
  1710   00144C  EFB0  F00A         	goto	l3719
  1711   001450                     u4290:
  1712   001450  EF5E  F00A         	goto	l3707
  1713   001454                     l3701:
  1714                           
  1715                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1716   001454  C06D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1717   001458  C06E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1718   00145C  CFDF F06F          	movff	indf2,??_vfpfcnvrt
  1719   001460  0E04               	movlw	4
  1720   001462  26DE               	addwf	postinc2,f,c
  1721   001464  CFDF F070          	movff	indf2,??_vfpfcnvrt+1
  1722   001468  0E00               	movlw	0
  1723   00146A  22DD               	addwfc	postdec2,f,c
  1724   00146C  C06F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1725   001470  C070  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1726   001474  CFDE F074          	movff	postinc2,vfpfcnvrt@convarg
  1727   001478  CFDE F075          	movff	postinc2,vfpfcnvrt@convarg+1
  1728   00147C  CFDE F076          	movff	postinc2,vfpfcnvrt@convarg+2
  1729   001480  CFDE F077          	movff	postinc2,vfpfcnvrt@convarg+3
  1730                           
  1731                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  1732   001484  EF73  F00A         	goto	l3709
  1733   001488                     l3703:
  1734                           
  1735                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1736   001488  C06D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1737   00148C  C06E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1738   001490  CFDF F06F          	movff	indf2,??_vfpfcnvrt
  1739   001494  0E04               	movlw	4
  1740   001496  26DE               	addwf	postinc2,f,c
  1741   001498  CFDF F070          	movff	indf2,??_vfpfcnvrt+1
  1742   00149C  0E00               	movlw	0
  1743   00149E  22DD               	addwfc	postdec2,f,c
  1744   0014A0  C06F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1745   0014A4  C070  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1746   0014A8  CFDE F074          	movff	postinc2,vfpfcnvrt@convarg
  1747   0014AC  CFDE F075          	movff	postinc2,vfpfcnvrt@convarg+1
  1748   0014B0  CFDE F076          	movff	postinc2,vfpfcnvrt@convarg+2
  1749   0014B4  CFDE F077          	movff	postinc2,vfpfcnvrt@convarg+3
  1750                           
  1751                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  1752   0014B8  EF73  F00A         	goto	l3709
  1753   0014BC                     l3707:
  1754   0014BC  507C               	movf	vfpfcnvrt@c^0,w,c
  1755   0014BE  6E6F               	movwf	??_vfpfcnvrt^0,c
  1756   0014C0  6A70               	clrf	(??_vfpfcnvrt+1)^0,c
  1757                           
  1758                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1759                           ; Switch size 1, requested type "simple"
  1760                           ; Number of cases is 1, Range of values is 0 to 0
  1761                           ; switch strategies available:
  1762                           ; Name         Instructions Cycles
  1763                           ; simple_byte            4     3 (average)
  1764                           ;	Chosen strategy is simple_byte
  1765   0014C2  5070               	movf	(??_vfpfcnvrt+1)^0,w,c
  1766   0014C4  0A00               	xorlw	0	; case 0
  1767   0014C6  B4D8               	btfsc	status,2,c
  1768   0014C8  EF68  F00A         	goto	l3949
  1769   0014CC  EF73  F00A         	goto	l3709
  1770   0014D0                     l3949:
  1771                           
  1772                           ; Switch size 1, requested type "simple"
  1773                           ; Number of cases is 2, Range of values is 76 to 108
  1774                           ; switch strategies available:
  1775                           ; Name         Instructions Cycles
  1776                           ; simple_byte            7     4 (average)
  1777                           ;	Chosen strategy is simple_byte
  1778   0014D0  506F               	movf	??_vfpfcnvrt^0,w,c
  1779   0014D2  0A4C               	xorlw	76	; case 76
  1780   0014D4  B4D8               	btfsc	status,2,c
  1781   0014D6  EF44  F00A         	goto	l3703
  1782   0014DA  0A20               	xorlw	32	; case 108
  1783   0014DC  B4D8               	btfsc	status,2,c
  1784   0014DE  EF2A  F00A         	goto	l3701
  1785   0014E2  EF73  F00A         	goto	l3709
  1786   0014E6                     l3709:
  1787                           
  1788                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  1789   0014E6  0E01               	movlw	1
  1790   0014E8  247D               	addwf	vfpfcnvrt@cp^0,w,c
  1791   0014EA  6E6F               	movwf	??_vfpfcnvrt^0,c
  1792   0014EC  0E00               	movlw	0
  1793   0014EE  207E               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1794   0014F0  6E70               	movwf	(??_vfpfcnvrt+1)^0,c
  1795   0014F2  C06B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1796   0014F6  C06C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1797   0014FA  C06F  FFDE         	movff	??_vfpfcnvrt,postinc2
  1798   0014FE  C070  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1799                           
  1800                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  1801   001502  EF9A  F00A         	goto	l3717
  1802   001506                     l3711:
  1803                           
  1804                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  1805   001506  C069  F034         	movff	vfpfcnvrt@fp,efgtoa@fp
  1806   00150A  C06A  F035         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1807   00150E  C074  F036         	movff	vfpfcnvrt@convarg,efgtoa@f
  1808   001512  C075  F037         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  1809   001516  C076  F038         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  1810   00151A  C077  F039         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  1811   00151E  C07D  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1812   001522  C07E  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1813   001526                     	if	0	;tblptru may be non-zero
  1814   001526                     	endif
  1815   001526                     	if	0	;tblptru may be non-zero
  1816   001526                     	endif
  1817   001526  0008               	tblrd		*
  1818   001528  CFF5 F03A          	movff	tablat,efgtoa@c
  1819   00152C  EC15  F003         	call	_efgtoa	;wreg free
  1820   001530  EFCD  F00A         	goto	l923
  1821   001534                     l3717:
  1822   001534  C07D  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1823   001538  C07E  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1824   00153C                     	if	0	;tblptru may be non-zero
  1825   00153C                     	endif
  1826   00153C                     	if	0	;tblptru may be non-zero
  1827   00153C                     	endif
  1828   00153C  0008               	tblrd		*
  1829   00153E  50F5               	movf	tablat,w,c
  1830   001540  6E6F               	movwf	??_vfpfcnvrt^0,c
  1831   001542  6A70               	clrf	(??_vfpfcnvrt+1)^0,c
  1832                           
  1833                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1834                           ; Switch size 1, requested type "simple"
  1835                           ; Number of cases is 1, Range of values is 0 to 0
  1836                           ; switch strategies available:
  1837                           ; Name         Instructions Cycles
  1838                           ; simple_byte            4     3 (average)
  1839                           ;	Chosen strategy is simple_byte
  1840   001544  5070               	movf	(??_vfpfcnvrt+1)^0,w,c
  1841   001546  0A00               	xorlw	0	; case 0
  1842   001548  B4D8               	btfsc	status,2,c
  1843   00154A  EFA9  F00A         	goto	l3951
  1844   00154E  EFB0  F00A         	goto	l3719
  1845   001552                     l3951:
  1846                           
  1847                           ; Switch size 1, requested type "simple"
  1848                           ; Number of cases is 1, Range of values is 102 to 102
  1849                           ; switch strategies available:
  1850                           ; Name         Instructions Cycles
  1851                           ; simple_byte            4     3 (average)
  1852                           ;	Chosen strategy is simple_byte
  1853   001552  506F               	movf	??_vfpfcnvrt^0,w,c
  1854   001554  0A66               	xorlw	102	; case 102
  1855   001556  B4D8               	btfsc	status,2,c
  1856   001558  EF83  F00A         	goto	l3711
  1857   00155C  EFB0  F00A         	goto	l3719
  1858   001560                     l3719:
  1859                           
  1860                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1861   001560  C06B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1862   001564  C06C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1863   001568  2ADE               	incf	postinc2,f,c
  1864   00156A  0E00               	movlw	0
  1865   00156C  22DD               	addwfc	postdec2,f,c
  1866   00156E  EFCD  F00A         	goto	l923
  1867   001572                     l3723:
  1868                           
  1869                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1870   001572  C06B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1871   001576  C06C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1872   00157A  CFDE FFF6          	movff	postinc2,tblptrl
  1873   00157E  CFDD FFF7          	movff	postdec2,tblptrh
  1874   001582                     	if	0	;tblptru may be non-zero
  1875   001582                     	endif
  1876   001582                     	if	0	;tblptru may be non-zero
  1877   001582                     	endif
  1878   001582  0008               	tblrd		*
  1879   001584  50F5               	movf	tablat,w,c
  1880   001586  6E01               	movwf	fputc@c^0,c
  1881   001588  6A02               	clrf	(fputc@c+1)^0,c
  1882   00158A  C069  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1883   00158E  C06A  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1884   001592  ECED  F017         	call	_fputc	;wreg free
  1885   001596  EFB0  F00A         	goto	l3719
  1886   00159A                     l923:
  1887   00159A  0012               	return		;funcret
  1888   00159C                     __end_of_vfpfcnvrt:
  1889                           	callstack 0
  1890                           
  1891 ;; *************** function _efgtoa *****************
  1892 ;; Defined at:
  1893 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1894 ;; Parameters:    Size  Location     Type
  1895 ;;  fp              2   51[COMRAM] PTR struct _IO_FILE
  1896 ;;		 -> sprintf@f(11), 
  1897 ;;  f               4   53[COMRAM] PTR struct _IO_FILE
  1898 ;;  c               1   57[COMRAM] unsigned char 
  1899 ;; Auto vars:     Size  Location     Type
  1900 ;;  u               4  100[COMRAM] struct flui
  1901 ;;  g               4   94[COMRAM] struct flui
  1902 ;;  l               4   87[COMRAM] struct flui
  1903 ;;  h               4   83[COMRAM] struct flui
  1904 ;;  ou              4   79[COMRAM] struct flui
  1905 ;;  n               2   98[COMRAM] int 
  1906 ;;  i               2   91[COMRAM] int 
  1907 ;;  w               2   77[COMRAM] int 
  1908 ;;  e               2   75[COMRAM] int 
  1909 ;;  m               2   73[COMRAM] int 
  1910 ;;  d               2   71[COMRAM] int 
  1911 ;;  t               2   64[COMRAM] int 
  1912 ;;  p               2   62[COMRAM] int 
  1913 ;;  ne              2   60[COMRAM] int 
  1914 ;;  sign            1   93[COMRAM] unsigned char 
  1915 ;;  nmode           1   70[COMRAM] unsigned char 
  1916 ;;  mode            1   69[COMRAM] unsigned char 
  1917 ;;  pp              1   68[COMRAM] unsigned char 
  1918 ;;  esign           1    0        unsigned char 
  1919 ;; Return value:  Size  Location     Type
  1920 ;;                  1    wreg      void 
  1921 ;; Registers used:
  1922 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1923 ;; Tracked objects:
  1924 ;;		On entry : 0/0
  1925 ;;		On exit  : 0/0
  1926 ;;		Unchanged: 0/0
  1927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1928 ;;      Params:         7       0       0       0       0       0       0
  1929 ;;      Locals:        44       0       0       0       0       0       0
  1930 ;;      Temps:          2       0       0       0       0       0       0
  1931 ;;      Totals:        53       0       0       0       0       0       0
  1932 ;;Total ram usage:       53 bytes
  1933 ;; Hardware stack levels used: 1
  1934 ;; Hardware stack levels required when called: 4
  1935 ;; This function calls:
  1936 ;;		___fladd
  1937 ;;		___fldiv
  1938 ;;		___fleq
  1939 ;;		___flge
  1940 ;;		___flmul
  1941 ;;		___flneg
  1942 ;;		___flsub
  1943 ;;		___fltol
  1944 ;;		___fpclassifyf
  1945 ;;		_floorf
  1946 ;;		_labs
  1947 ;;		_memcpy
  1948 ;;		_pad
  1949 ;;		_strcpy
  1950 ;; This function is called by:
  1951 ;;		_vfpfcnvrt
  1952 ;; This function uses a non-reentrant model
  1953 ;;
  1954                           
  1955                           	psect	text5
  1956   00062A                     __ptext5:
  1957                           	callstack 0
  1958   00062A                     _efgtoa:
  1959                           	callstack 22
  1960   00062A                     
  1961                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  1962   00062A  0E00               	movlw	0
  1963   00062C  6E5E               	movwf	efgtoa@sign^0,c
  1964   00062E                     
  1965                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  1966   00062E  C036  F05F         	movff	efgtoa@f,efgtoa@g
  1967   000632  C037  F060         	movff	efgtoa@f+1,efgtoa@g+1
  1968   000636  C038  F061         	movff	efgtoa@f+2,efgtoa@g+2
  1969   00063A  C039  F062         	movff	efgtoa@f+3,efgtoa@g+3
  1970   00063E                     
  1971                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  1972   00063E  BE62               	btfsc	(efgtoa@g+3)^0,7,c
  1973   000640  EF26  F003         	goto	u3800
  1974   000644  EF24  F003         	goto	u3801
  1975   000648                     u3801:
  1976   000648  EF3A  F003         	goto	l3361
  1977   00064C                     u3800:
  1978   00064C                     
  1979                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  1980   00064C  0E01               	movlw	1
  1981   00064E  6E5E               	movwf	efgtoa@sign^0,c
  1982   000650                     
  1983                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  1984   000650  C05F  F001         	movff	efgtoa@g,___flneg@f1
  1985   000654  C060  F002         	movff	efgtoa@g+1,___flneg@f1+1
  1986   000658  C061  F003         	movff	efgtoa@g+2,___flneg@f1+2
  1987   00065C  C062  F004         	movff	efgtoa@g+3,___flneg@f1+3
  1988   000660  ECBC  F01A         	call	___flneg	;wreg free
  1989   000664  C001  F05F         	movff	?___flneg,efgtoa@g
  1990   000668  C002  F060         	movff	?___flneg+1,efgtoa@g+1
  1991   00066C  C003  F061         	movff	?___flneg+2,efgtoa@g+2
  1992   000670  C004  F062         	movff	?___flneg+3,efgtoa@g+3
  1993   000674                     l3361:
  1994                           
  1995                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  1996   000674  0E00               	movlw	0
  1997   000676  6E64               	movwf	(efgtoa@n+1)^0,c
  1998   000678  0E00               	movlw	0
  1999   00067A  6E63               	movwf	efgtoa@n^0,c
  2000   00067C                     
  2001                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  2002   00067C  C08C  F04E         	movff	_width,efgtoa@w
  2003   000680  C08D  F04F         	movff	_width+1,efgtoa@w+1
  2004   000684                     
  2005                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  2006   000684  505E               	movf	efgtoa@sign^0,w,c
  2007   000686  B4D8               	btfsc	status,2,c
  2008   000688  EF48  F003         	goto	u3811
  2009   00068C  EF4A  F003         	goto	u3810
  2010   000690                     u3811:
  2011   000690  EF5E  F003         	goto	l3375
  2012   000694                     u3810:
  2013   000694                     
  2014                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  2015   000694  505E               	movf	efgtoa@sign^0,w,c
  2016   000696  A4D8               	btfss	status,2,c
  2017   000698  EF50  F003         	goto	u3821
  2018   00069C  EF52  F003         	goto	u3820
  2019   0006A0                     u3821:
  2020   0006A0  EF58  F003         	goto	l3371
  2021   0006A4                     u3820:
  2022   0006A4  0E00               	movlw	0
  2023   0006A6  6E44               	movwf	(_efgtoa$916+1)^0,c
  2024   0006A8  0E2B               	movlw	43
  2025   0006AA  6E43               	movwf	_efgtoa$916^0,c
  2026   0006AC  EF5C  F003         	goto	l3373
  2027   0006B0                     l3371:
  2028   0006B0  0E00               	movlw	0
  2029   0006B2  6E44               	movwf	(_efgtoa$916+1)^0,c
  2030   0006B4  0E2D               	movlw	45
  2031   0006B6  6E43               	movwf	_efgtoa$916^0,c
  2032   0006B8                     l3373:
  2033   0006B8  C043  F05E         	movff	_efgtoa$916,efgtoa@sign
  2034   0006BC                     l3375:
  2035                           
  2036                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  2037   0006BC  C05F  F001         	movff	efgtoa@g,___fpclassifyf@x
  2038   0006C0  C060  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2039   0006C4  C061  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2040   0006C8  C062  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2041   0006CC  EC6E  F017         	call	___fpclassifyf	;wreg free
  2042   0006D0  0401               	decf	?___fpclassifyf^0,w,c
  2043   0006D2  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2044   0006D4  A4D8               	btfss	status,2,c
  2045   0006D6  EF6F  F003         	goto	u3831
  2046   0006DA  EF71  F003         	goto	u3830
  2047   0006DE                     u3831:
  2048   0006DE  EFA2  F003         	goto	l3393
  2049   0006E2                     u3830:
  2050   0006E2                     
  2051                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  2052   0006E2  505E               	movf	efgtoa@sign^0,w,c
  2053   0006E4  B4D8               	btfsc	status,2,c
  2054   0006E6  EF77  F003         	goto	u3841
  2055   0006EA  EF79  F003         	goto	u3840
  2056   0006EE                     u3841:
  2057   0006EE  EF82  F003         	goto	l3385
  2058   0006F2                     u3840:
  2059   0006F2                     
  2060                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  2061   0006F2  C05E  F100         	movff	efgtoa@sign,_dbuf
  2062   0006F6                     
  2063                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  2064   0006F6  064E               	decf	efgtoa@w^0,f,c
  2065   0006F8  A0D8               	btfss	status,0,c
  2066   0006FA  064F               	decf	(efgtoa@w+1)^0,f,c
  2067   0006FC                     
  2068                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  2069   0006FC  0E00               	movlw	0
  2070   0006FE  6E64               	movwf	(efgtoa@n+1)^0,c
  2071   000700  0E01               	movlw	1
  2072   000702  6E63               	movwf	efgtoa@n^0,c
  2073   000704                     l3385:
  2074                           
  2075                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  2076   000704  0E00               	movlw	low _dbuf
  2077   000706  2463               	addwf	efgtoa@n^0,w,c
  2078   000708  6E01               	movwf	strcpy@dest^0,c
  2079   00070A  0E01               	movlw	high _dbuf
  2080   00070C  2064               	addwfc	(efgtoa@n+1)^0,w,c
  2081   00070E  6E02               	movwf	(strcpy@dest+1)^0,c
  2082   000710  0E20               	movlw	low STR_2
  2083   000712  6E03               	movwf	strcpy@src^0,c
  2084   000714  0E06               	movlw	high STR_2
  2085   000716  6E04               	movwf	(strcpy@src+1)^0,c
  2086   000718  EC7C  F01A         	call	_strcpy	;wreg free
  2087   00071C                     l3387:
  2088                           
  2089                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  2090   00071C  0EFD               	movlw	253
  2091   00071E  264E               	addwf	efgtoa@w^0,f,c
  2092   000720  0EFF               	movlw	255
  2093   000722  224F               	addwfc	(efgtoa@w+1)^0,f,c
  2094   000724                     
  2095                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  2096   000724  C034  F011         	movff	efgtoa@fp,pad@fp
  2097   000728  C035  F012         	movff	efgtoa@fp+1,pad@fp+1
  2098   00072C  0E00               	movlw	low _dbuf
  2099   00072E  6E13               	movwf	pad@buf^0,c
  2100   000730  0E01               	movlw	high _dbuf
  2101   000732  6E14               	movwf	(pad@buf+1)^0,c
  2102   000734  C04E  F015         	movff	efgtoa@w,pad@p
  2103   000738  C04F  F016         	movff	efgtoa@w+1,pad@p+1
  2104   00073C  ECA7  F018         	call	_pad	;wreg free
  2105   000740  EF32  F008         	goto	l846
  2106   000744                     l3393:
  2107                           
  2108                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  2109   000744  C05F  F001         	movff	efgtoa@g,___fpclassifyf@x
  2110   000748  C060  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2111   00074C  C061  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2112   000750  C062  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2113   000754  EC6E  F017         	call	___fpclassifyf	;wreg free
  2114   000758  5001               	movf	?___fpclassifyf^0,w,c
  2115   00075A  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2116   00075C  A4D8               	btfss	status,2,c
  2117   00075E  EFB3  F003         	goto	u3851
  2118   000762  EFB5  F003         	goto	u3850
  2119   000766                     u3851:
  2120   000766  EFD4  F003         	goto	l3411
  2121   00076A                     u3850:
  2122   00076A                     
  2123                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  2124   00076A  505E               	movf	efgtoa@sign^0,w,c
  2125   00076C  B4D8               	btfsc	status,2,c
  2126   00076E  EFBB  F003         	goto	u3861
  2127   000772  EFBD  F003         	goto	u3860
  2128   000776                     u3861:
  2129   000776  EFC6  F003         	goto	l3403
  2130   00077A                     u3860:
  2131   00077A                     
  2132                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  2133   00077A  C05E  F100         	movff	efgtoa@sign,_dbuf
  2134   00077E                     
  2135                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  2136   00077E  064E               	decf	efgtoa@w^0,f,c
  2137   000780  A0D8               	btfss	status,0,c
  2138   000782  064F               	decf	(efgtoa@w+1)^0,f,c
  2139   000784                     
  2140                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  2141   000784  0E00               	movlw	0
  2142   000786  6E64               	movwf	(efgtoa@n+1)^0,c
  2143   000788  0E01               	movlw	1
  2144   00078A  6E63               	movwf	efgtoa@n^0,c
  2145   00078C                     l3403:
  2146                           
  2147                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  2148   00078C  0E00               	movlw	low _dbuf
  2149   00078E  2463               	addwf	efgtoa@n^0,w,c
  2150   000790  6E01               	movwf	strcpy@dest^0,c
  2151   000792  0E01               	movlw	high _dbuf
  2152   000794  2064               	addwfc	(efgtoa@n+1)^0,w,c
  2153   000796  6E02               	movwf	(strcpy@dest+1)^0,c
  2154   000798  0E24               	movlw	low STR_5
  2155   00079A  6E03               	movwf	strcpy@src^0,c
  2156   00079C  0E06               	movlw	high STR_5
  2157   00079E  6E04               	movwf	(strcpy@src+1)^0,c
  2158   0007A0  EC7C  F01A         	call	_strcpy	;wreg free
  2159   0007A4  EF8E  F003         	goto	l3387
  2160   0007A8                     l3411:
  2161                           
  2162                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  2163   0007A8  0E00               	movlw	0
  2164   0007AA  6E65               	movwf	efgtoa@u^0,c
  2165   0007AC  0E00               	movlw	0
  2166   0007AE  6E66               	movwf	(efgtoa@u+1)^0,c
  2167   0007B0  0E80               	movlw	128
  2168   0007B2  6E67               	movwf	(efgtoa@u+2)^0,c
  2169   0007B4  0E3F               	movlw	63
  2170   0007B6  6E68               	movwf	(efgtoa@u+3)^0,c
  2171                           
  2172                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  2173   0007B8  0E00               	movlw	0
  2174   0007BA  6E4D               	movwf	(efgtoa@e+1)^0,c
  2175   0007BC  0E00               	movlw	0
  2176   0007BE  6E4C               	movwf	efgtoa@e^0,c
  2177   0007C0                     
  2178                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  2179   0007C0  C05F  F001         	movff	efgtoa@g,___fleq@ff1
  2180   0007C4  C060  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2181   0007C8  C061  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2182   0007CC  C062  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2183   0007D0  0E00               	movlw	0
  2184   0007D2  6E05               	movwf	___fleq@ff2^0,c
  2185   0007D4  0E00               	movlw	0
  2186   0007D6  6E06               	movwf	(___fleq@ff2+1)^0,c
  2187   0007D8  0E00               	movlw	0
  2188   0007DA  6E07               	movwf	(___fleq@ff2+2)^0,c
  2189   0007DC  0E00               	movlw	0
  2190   0007DE  6E08               	movwf	(___fleq@ff2+3)^0,c
  2191   0007E0  EC52  F018         	call	___fleq	;wreg free
  2192   0007E4  B0D8               	btfsc	status,0,c
  2193   0007E6  EFF7  F003         	goto	u3871
  2194   0007EA  EFF9  F003         	goto	u3870
  2195   0007EE                     u3871:
  2196   0007EE  EFD4  F004         	goto	l849
  2197   0007F2                     u3870:
  2198   0007F2  EF05  F004         	goto	l3419
  2199   0007F6                     l851:
  2200                           
  2201                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  2202   0007F6  C050  F065         	movff	efgtoa@ou,efgtoa@u
  2203   0007FA  C051  F066         	movff	efgtoa@ou+1,efgtoa@u+1
  2204   0007FE  C052  F067         	movff	efgtoa@ou+2,efgtoa@u+2
  2205   000802  C053  F068         	movff	efgtoa@ou+3,efgtoa@u+3
  2206   000806                     
  2207                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  2208   000806  4A4C               	infsnz	efgtoa@e^0,f,c
  2209   000808  2A4D               	incf	(efgtoa@e+1)^0,f,c
  2210   00080A                     l3419:
  2211                           
  2212                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  2213   00080A  C065  F00F         	movff	efgtoa@u,___flmul@b
  2214   00080E  C066  F010         	movff	efgtoa@u+1,___flmul@b+1
  2215   000812  C067  F011         	movff	efgtoa@u+2,___flmul@b+2
  2216   000816  C068  F012         	movff	efgtoa@u+3,___flmul@b+3
  2217   00081A  0E00               	movlw	0
  2218   00081C  6E13               	movwf	___flmul@a^0,c
  2219   00081E  0E00               	movlw	0
  2220   000820  6E14               	movwf	(___flmul@a+1)^0,c
  2221   000822  0E20               	movlw	32
  2222   000824  6E15               	movwf	(___flmul@a+2)^0,c
  2223   000826  0E41               	movlw	65
  2224   000828  6E16               	movwf	(___flmul@a+3)^0,c
  2225   00082A  EC2E  F00D         	call	___flmul	;wreg free
  2226   00082E  C00F  F050         	movff	?___flmul,efgtoa@ou
  2227   000832  C010  F051         	movff	?___flmul+1,efgtoa@ou+1
  2228   000836  C011  F052         	movff	?___flmul+2,efgtoa@ou+2
  2229   00083A  C012  F053         	movff	?___flmul+3,efgtoa@ou+3
  2230   00083E  5050               	movf	efgtoa@ou^0,w,c
  2231   000840  5C5F               	subwf	efgtoa@g^0,w,c
  2232   000842  6E01               	movwf	labs@a^0,c
  2233   000844  5051               	movf	(efgtoa@ou+1)^0,w,c
  2234   000846  5860               	subwfb	(efgtoa@g+1)^0,w,c
  2235   000848  6E02               	movwf	(labs@a+1)^0,c
  2236   00084A  5052               	movf	(efgtoa@ou+2)^0,w,c
  2237   00084C  5861               	subwfb	(efgtoa@g+2)^0,w,c
  2238   00084E  6E03               	movwf	(labs@a+2)^0,c
  2239   000850  5053               	movf	(efgtoa@ou+3)^0,w,c
  2240   000852  5862               	subwfb	(efgtoa@g+3)^0,w,c
  2241   000854  6E04               	movwf	(labs@a+3)^0,c
  2242   000856  EC3E  F019         	call	_labs	;wreg free
  2243   00085A  BE04               	btfsc	(?_labs+3)^0,7,c
  2244   00085C  EF3B  F004         	goto	u3881
  2245   000860  5004               	movf	(?_labs+3)^0,w,c
  2246   000862  1003               	iorwf	(?_labs+2)^0,w,c
  2247   000864  1002               	iorwf	(?_labs+1)^0,w,c
  2248   000866  E109               	bnz	u3880
  2249   000868  0E02               	movlw	2
  2250   00086A  5C01               	subwf	?_labs^0,w,c
  2251   00086C  A0D8               	btfss	status,0,c
  2252   00086E  EF3B  F004         	goto	u3881
  2253   000872  EF3D  F004         	goto	u3880
  2254   000876                     u3881:
  2255   000876  EFFB  F003         	goto	l851
  2256   00087A                     u3880:
  2257   00087A  C050  F028         	movff	efgtoa@ou,___flge@ff1
  2258   00087E  C051  F029         	movff	efgtoa@ou+1,___flge@ff1+1
  2259   000882  C052  F02A         	movff	efgtoa@ou+2,___flge@ff1+2
  2260   000886  C053  F02B         	movff	efgtoa@ou+3,___flge@ff1+3
  2261   00088A  C05F  F02C         	movff	efgtoa@g,___flge@ff2
  2262   00088E  C060  F02D         	movff	efgtoa@g+1,___flge@ff2+1
  2263   000892  C061  F02E         	movff	efgtoa@g+2,___flge@ff2+2
  2264   000896  C062  F02F         	movff	efgtoa@g+3,___flge@ff2+3
  2265   00089A  ECEC  F016         	call	___flge	;wreg free
  2266   00089E  A0D8               	btfss	status,0,c
  2267   0008A0  EF54  F004         	goto	u3891
  2268   0008A4  EF56  F004         	goto	u3890
  2269   0008A8                     u3891:
  2270   0008A8  EFFB  F003         	goto	l851
  2271   0008AC                     u3890:
  2272   0008AC                     
  2273                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  2274   0008AC  5065               	movf	efgtoa@u^0,w,c
  2275   0008AE  5C5F               	subwf	efgtoa@g^0,w,c
  2276   0008B0  6E01               	movwf	labs@a^0,c
  2277   0008B2  5066               	movf	(efgtoa@u+1)^0,w,c
  2278   0008B4  5860               	subwfb	(efgtoa@g+1)^0,w,c
  2279   0008B6  6E02               	movwf	(labs@a+1)^0,c
  2280   0008B8  5067               	movf	(efgtoa@u+2)^0,w,c
  2281   0008BA  5861               	subwfb	(efgtoa@g+2)^0,w,c
  2282   0008BC  6E03               	movwf	(labs@a+2)^0,c
  2283   0008BE  5068               	movf	(efgtoa@u+3)^0,w,c
  2284   0008C0  5862               	subwfb	(efgtoa@g+3)^0,w,c
  2285   0008C2  6E04               	movwf	(labs@a+3)^0,c
  2286   0008C4  EC3E  F019         	call	_labs	;wreg free
  2287   0008C8  BE04               	btfsc	(?_labs+3)^0,7,c
  2288   0008CA  EF74  F004         	goto	u3900
  2289   0008CE  5004               	movf	(?_labs+3)^0,w,c
  2290   0008D0  1003               	iorwf	(?_labs+2)^0,w,c
  2291   0008D2  1002               	iorwf	(?_labs+1)^0,w,c
  2292   0008D4  E107               	bnz	u3901
  2293   0008D6  0E02               	movlw	2
  2294   0008D8  5C01               	subwf	?_labs^0,w,c
  2295   0008DA  B0D8               	btfsc	status,0,c
  2296   0008DC  EF72  F004         	goto	u3901
  2297   0008E0  EF74  F004         	goto	u3900
  2298   0008E4                     u3901:
  2299   0008E4  EFBB  F004         	goto	l3437
  2300   0008E8                     u3900:
  2301   0008E8                     l3427:
  2302                           
  2303                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  2304   0008E8  C065  F05F         	movff	efgtoa@u,efgtoa@g
  2305   0008EC  C066  F060         	movff	efgtoa@u+1,efgtoa@g+1
  2306   0008F0  C067  F061         	movff	efgtoa@u+2,efgtoa@g+2
  2307   0008F4  C068  F062         	movff	efgtoa@u+3,efgtoa@g+3
  2308                           
  2309                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  2310   0008F8  EFD4  F004         	goto	l849
  2311   0008FC                     l3429:
  2312                           
  2313                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  2314   0008FC  C065  F001         	movff	efgtoa@u,___fldiv@b
  2315   000900  C066  F002         	movff	efgtoa@u+1,___fldiv@b+1
  2316   000904  C067  F003         	movff	efgtoa@u+2,___fldiv@b+2
  2317   000908  C068  F004         	movff	efgtoa@u+3,___fldiv@b+3
  2318   00090C  0E00               	movlw	0
  2319   00090E  6E05               	movwf	___fldiv@a^0,c
  2320   000910  0E00               	movlw	0
  2321   000912  6E06               	movwf	(___fldiv@a+1)^0,c
  2322   000914  0E20               	movlw	32
  2323   000916  6E07               	movwf	(___fldiv@a+2)^0,c
  2324   000918  0E41               	movlw	65
  2325   00091A  6E08               	movwf	(___fldiv@a+3)^0,c
  2326   00091C  EC43  F00F         	call	___fldiv	;wreg free
  2327   000920  C001  F065         	movff	?___fldiv,efgtoa@u
  2328   000924  C002  F066         	movff	?___fldiv+1,efgtoa@u+1
  2329   000928  C003  F067         	movff	?___fldiv+2,efgtoa@u+2
  2330   00092C  C004  F068         	movff	?___fldiv+3,efgtoa@u+3
  2331   000930                     
  2332                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  2333   000930  064C               	decf	efgtoa@e^0,f,c
  2334   000932  A0D8               	btfss	status,0,c
  2335   000934  064D               	decf	(efgtoa@e+1)^0,f,c
  2336   000936                     
  2337                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  2338   000936  5065               	movf	efgtoa@u^0,w,c
  2339   000938  5C5F               	subwf	efgtoa@g^0,w,c
  2340   00093A  6E01               	movwf	labs@a^0,c
  2341   00093C  5066               	movf	(efgtoa@u+1)^0,w,c
  2342   00093E  5860               	subwfb	(efgtoa@g+1)^0,w,c
  2343   000940  6E02               	movwf	(labs@a+1)^0,c
  2344   000942  5067               	movf	(efgtoa@u+2)^0,w,c
  2345   000944  5861               	subwfb	(efgtoa@g+2)^0,w,c
  2346   000946  6E03               	movwf	(labs@a+2)^0,c
  2347   000948  5068               	movf	(efgtoa@u+3)^0,w,c
  2348   00094A  5862               	subwfb	(efgtoa@g+3)^0,w,c
  2349   00094C  6E04               	movwf	(labs@a+3)^0,c
  2350   00094E  EC3E  F019         	call	_labs	;wreg free
  2351   000952  BE04               	btfsc	(?_labs+3)^0,7,c
  2352   000954  EFB9  F004         	goto	u3910
  2353   000958  5004               	movf	(?_labs+3)^0,w,c
  2354   00095A  1003               	iorwf	(?_labs+2)^0,w,c
  2355   00095C  1002               	iorwf	(?_labs+1)^0,w,c
  2356   00095E  E107               	bnz	u3911
  2357   000960  0E02               	movlw	2
  2358   000962  5C01               	subwf	?_labs^0,w,c
  2359   000964  B0D8               	btfsc	status,0,c
  2360   000966  EFB7  F004         	goto	u3911
  2361   00096A  EFB9  F004         	goto	u3910
  2362   00096E                     u3911:
  2363   00096E  EFBB  F004         	goto	l3437
  2364   000972                     u3910:
  2365   000972  EF74  F004         	goto	l3427
  2366   000976                     l3437:
  2367                           
  2368                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  2369   000976  C05F  F028         	movff	efgtoa@g,___flge@ff1
  2370   00097A  C060  F029         	movff	efgtoa@g+1,___flge@ff1+1
  2371   00097E  C061  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  2372   000982  C062  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  2373   000986  C065  F02C         	movff	efgtoa@u,___flge@ff2
  2374   00098A  C066  F02D         	movff	efgtoa@u+1,___flge@ff2+1
  2375   00098E  C067  F02E         	movff	efgtoa@u+2,___flge@ff2+2
  2376   000992  C068  F02F         	movff	efgtoa@u+3,___flge@ff2+3
  2377   000996  ECEC  F016         	call	___flge	;wreg free
  2378   00099A  A0D8               	btfss	status,0,c
  2379   00099C  EFD2  F004         	goto	u3921
  2380   0009A0  EFD4  F004         	goto	u3920
  2381   0009A4                     u3921:
  2382   0009A4  EF7E  F004         	goto	l3429
  2383   0009A8                     u3920:
  2384   0009A8                     l849:
  2385                           
  2386                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  2387   0009A8  C03A  F046         	movff	efgtoa@c,efgtoa@mode
  2388                           
  2389                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  2390   0009AC  C046  F047         	movff	efgtoa@mode,efgtoa@nmode
  2391   0009B0                     
  2392                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  2393   0009B0  0100               	movlb	0	; () banked
  2394   0009B2  BF8F               	btfsc	(_prec+1)& (0+255),7,b
  2395   0009B4  EFDE  F004         	goto	u3931
  2396   0009B8  EFE0  F004         	goto	u3930
  2397   0009BC                     u3931:
  2398   0009BC  EFE6  F004         	goto	l3443
  2399   0009C0                     u3930:
  2400   0009C0                     
  2401                           ; BSR set to: 0
  2402   0009C0  C08E  F03F         	movff	_prec,efgtoa@p
  2403   0009C4  C08F  F040         	movff	_prec+1,efgtoa@p+1
  2404   0009C8  EFEA  F004         	goto	l3445
  2405   0009CC                     l3443:
  2406                           
  2407                           ; BSR set to: 0
  2408   0009CC  0E00               	movlw	0
  2409   0009CE  6E40               	movwf	(efgtoa@p+1)^0,c
  2410   0009D0  0E06               	movlw	6
  2411   0009D2  6E3F               	movwf	efgtoa@p^0,c
  2412   0009D4                     l3445:
  2413                           
  2414                           ; BSR set to: 0
  2415                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  2416   0009D4  C03F  F04A         	movff	efgtoa@p,efgtoa@m
  2417   0009D8  C040  F04B         	movff	efgtoa@p+1,efgtoa@m+1
  2418   0009DC                     
  2419                           ; BSR set to: 0
  2420                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  2421   0009DC  4A4A               	infsnz	efgtoa@m^0,f,c
  2422   0009DE  2A4B               	incf	(efgtoa@m+1)^0,f,c
  2423   0009E0                     
  2424                           ; BSR set to: 0
  2425                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  2426   0009E0  0E66               	movlw	102
  2427   0009E2  1847               	xorwf	efgtoa@nmode^0,w,c
  2428   0009E4  A4D8               	btfss	status,2,c
  2429   0009E6  EFF7  F004         	goto	u3941
  2430   0009EA  EFF9  F004         	goto	u3940
  2431   0009EE                     u3941:
  2432   0009EE  EF19  F005         	goto	l3459
  2433   0009F2                     u3940:
  2434   0009F2                     
  2435                           ; BSR set to: 0
  2436                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  2437   0009F2  BE4D               	btfsc	(efgtoa@e+1)^0,7,c
  2438   0009F4  EF00  F005         	goto	u3950
  2439   0009F8  EFFE  F004         	goto	u3951
  2440   0009FC                     u3951:
  2441   0009FC  EF0C  F005         	goto	l3455
  2442   000A00                     u3950:
  2443   000A00                     
  2444                           ; BSR set to: 0
  2445                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  2446   000A00  0E00               	movlw	0
  2447   000A02  6E65               	movwf	efgtoa@u^0,c
  2448   000A04  0E00               	movlw	0
  2449   000A06  6E66               	movwf	(efgtoa@u+1)^0,c
  2450   000A08  0E80               	movlw	128
  2451   000A0A  6E67               	movwf	(efgtoa@u+2)^0,c
  2452   000A0C  0E3F               	movlw	63
  2453   000A0E  6E68               	movwf	(efgtoa@u+3)^0,c
  2454                           
  2455                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  2456   000A10  0E00               	movlw	0
  2457   000A12  6E4D               	movwf	(efgtoa@e+1)^0,c
  2458   000A14  0E00               	movlw	0
  2459   000A16  6E4C               	movwf	efgtoa@e^0,c
  2460   000A18                     l3455:
  2461                           
  2462                           ; BSR set to: 0
  2463                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  2464   000A18  0E67               	movlw	103
  2465   000A1A  1846               	xorwf	efgtoa@mode^0,w,c
  2466   000A1C  B4D8               	btfsc	status,2,c
  2467   000A1E  EF13  F005         	goto	u3961
  2468   000A22  EF15  F005         	goto	u3960
  2469   000A26                     u3961:
  2470   000A26  EF19  F005         	goto	l3459
  2471   000A2A                     u3960:
  2472   000A2A                     
  2473                           ; BSR set to: 0
  2474                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  2475   000A2A  504C               	movf	efgtoa@e^0,w,c
  2476   000A2C  264A               	addwf	efgtoa@m^0,f,c
  2477   000A2E  504D               	movf	(efgtoa@e+1)^0,w,c
  2478   000A30  224B               	addwfc	(efgtoa@m+1)^0,f,c
  2479   000A32                     l3459:
  2480                           
  2481                           ; BSR set to: 0
  2482                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  2483   000A32  0E00               	movlw	0
  2484   000A34  6E5D               	movwf	(efgtoa@i+1)^0,c
  2485   000A36  0E00               	movlw	0
  2486   000A38  6E5C               	movwf	efgtoa@i^0,c
  2487   000A3A                     
  2488                           ; BSR set to: 0
  2489                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  2490   000A3A  C05F  F054         	movff	efgtoa@g,efgtoa@h
  2491   000A3E  C060  F055         	movff	efgtoa@g+1,efgtoa@h+1
  2492   000A42  C061  F056         	movff	efgtoa@g+2,efgtoa@h+2
  2493   000A46  C062  F057         	movff	efgtoa@g+3,efgtoa@h+3
  2494   000A4A                     
  2495                           ; BSR set to: 0
  2496                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  2497   000A4A  C065  F050         	movff	efgtoa@u,efgtoa@ou
  2498   000A4E  C066  F051         	movff	efgtoa@u+1,efgtoa@ou+1
  2499   000A52  C067  F052         	movff	efgtoa@u+2,efgtoa@ou+2
  2500   000A56  C068  F053         	movff	efgtoa@u+3,efgtoa@ou+3
  2501                           
  2502                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  2503   000A5A  EFA9  F005         	goto	l3473
  2504   000A5E                     l3465:
  2505                           
  2506                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  2507   000A5E  C054  F001         	movff	efgtoa@h,___fldiv@b
  2508   000A62  C055  F002         	movff	efgtoa@h+1,___fldiv@b+1
  2509   000A66  C056  F003         	movff	efgtoa@h+2,___fldiv@b+2
  2510   000A6A  C057  F004         	movff	efgtoa@h+3,___fldiv@b+3
  2511   000A6E  C065  F005         	movff	efgtoa@u,___fldiv@a
  2512   000A72  C066  F006         	movff	efgtoa@u+1,___fldiv@a+1
  2513   000A76  C067  F007         	movff	efgtoa@u+2,___fldiv@a+2
  2514   000A7A  C068  F008         	movff	efgtoa@u+3,___fldiv@a+3
  2515   000A7E  EC43  F00F         	call	___fldiv	;wreg free
  2516   000A82  C001  F01A         	movff	?___fldiv,floorf@x
  2517   000A86  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  2518   000A8A  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  2519   000A8E  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  2520   000A92  EC6B  F012         	call	_floorf	;wreg free
  2521   000A96  C01A  F058         	movff	?_floorf,efgtoa@l
  2522   000A9A  C01B  F059         	movff	?_floorf+1,efgtoa@l+1
  2523   000A9E  C01C  F05A         	movff	?_floorf+2,efgtoa@l+2
  2524   000AA2  C01D  F05B         	movff	?_floorf+3,efgtoa@l+3
  2525                           
  2526                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  2527   000AA6  C058  F001         	movff	efgtoa@l,___fltol@f1
  2528   000AAA  C059  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2529   000AAE  C05A  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2530   000AB2  C05B  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2531   000AB6  EC69  F016         	call	___fltol	;wreg free
  2532   000ABA  C001  F048         	movff	?___fltol,efgtoa@d
  2533   000ABE  C002  F049         	movff	?___fltol+1,efgtoa@d+1
  2534   000AC2                     
  2535                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  2536   000AC2  C054  F028         	movff	efgtoa@h,___flsub@b
  2537   000AC6  C055  F029         	movff	efgtoa@h+1,___flsub@b+1
  2538   000ACA  C056  F02A         	movff	efgtoa@h+2,___flsub@b+2
  2539   000ACE  C057  F02B         	movff	efgtoa@h+3,___flsub@b+3
  2540   000AD2  C058  F013         	movff	efgtoa@l,___flmul@a
  2541   000AD6  C059  F014         	movff	efgtoa@l+1,___flmul@a+1
  2542   000ADA  C05A  F015         	movff	efgtoa@l+2,___flmul@a+2
  2543   000ADE  C05B  F016         	movff	efgtoa@l+3,___flmul@a+3
  2544   000AE2  C065  F00F         	movff	efgtoa@u,___flmul@b
  2545   000AE6  C066  F010         	movff	efgtoa@u+1,___flmul@b+1
  2546   000AEA  C067  F011         	movff	efgtoa@u+2,___flmul@b+2
  2547   000AEE  C068  F012         	movff	efgtoa@u+3,___flmul@b+3
  2548   000AF2  EC2E  F00D         	call	___flmul	;wreg free
  2549   000AF6  C00F  F02C         	movff	?___flmul,___flsub@a
  2550   000AFA  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  2551   000AFE  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  2552   000B02  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  2553   000B06  EC14  F01A         	call	___flsub	;wreg free
  2554   000B0A  C028  F054         	movff	?___flsub,efgtoa@h
  2555   000B0E  C029  F055         	movff	?___flsub+1,efgtoa@h+1
  2556   000B12  C02A  F056         	movff	?___flsub+2,efgtoa@h+2
  2557   000B16  C02B  F057         	movff	?___flsub+3,efgtoa@h+3
  2558   000B1A                     
  2559                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  2560   000B1A  C065  F001         	movff	efgtoa@u,___fldiv@b
  2561   000B1E  C066  F002         	movff	efgtoa@u+1,___fldiv@b+1
  2562   000B22  C067  F003         	movff	efgtoa@u+2,___fldiv@b+2
  2563   000B26  C068  F004         	movff	efgtoa@u+3,___fldiv@b+3
  2564   000B2A  0E00               	movlw	0
  2565   000B2C  6E05               	movwf	___fldiv@a^0,c
  2566   000B2E  0E00               	movlw	0
  2567   000B30  6E06               	movwf	(___fldiv@a+1)^0,c
  2568   000B32  0E20               	movlw	32
  2569   000B34  6E07               	movwf	(___fldiv@a+2)^0,c
  2570   000B36  0E41               	movlw	65
  2571   000B38  6E08               	movwf	(___fldiv@a+3)^0,c
  2572   000B3A  EC43  F00F         	call	___fldiv	;wreg free
  2573   000B3E  C001  F065         	movff	?___fldiv,efgtoa@u
  2574   000B42  C002  F066         	movff	?___fldiv+1,efgtoa@u+1
  2575   000B46  C003  F067         	movff	?___fldiv+2,efgtoa@u+2
  2576   000B4A  C004  F068         	movff	?___fldiv+3,efgtoa@u+3
  2577   000B4E                     
  2578                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  2579   000B4E  4A5C               	infsnz	efgtoa@i^0,f,c
  2580   000B50  2A5D               	incf	(efgtoa@i+1)^0,f,c
  2581   000B52                     l3473:
  2582                           
  2583                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  2584   000B52  504A               	movf	efgtoa@m^0,w,c
  2585   000B54  5C5C               	subwf	efgtoa@i^0,w,c
  2586   000B56  505D               	movf	(efgtoa@i+1)^0,w,c
  2587   000B58  0A80               	xorlw	128
  2588   000B5A  6E3B               	movwf	??_efgtoa^0,c
  2589   000B5C  504B               	movf	(efgtoa@m+1)^0,w,c
  2590   000B5E  0A80               	xorlw	128
  2591   000B60  583B               	subwfb	??_efgtoa^0,w,c
  2592   000B62  A0D8               	btfss	status,0,c
  2593   000B64  EFB6  F005         	goto	u3971
  2594   000B68  EFB8  F005         	goto	u3970
  2595   000B6C                     u3971:
  2596   000B6C  EF2F  F005         	goto	l3465
  2597   000B70                     u3970:
  2598   000B70                     
  2599                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  2600   000B70  C065  F00F         	movff	efgtoa@u,___flmul@b
  2601   000B74  C066  F010         	movff	efgtoa@u+1,___flmul@b+1
  2602   000B78  C067  F011         	movff	efgtoa@u+2,___flmul@b+2
  2603   000B7C  C068  F012         	movff	efgtoa@u+3,___flmul@b+3
  2604   000B80  0E00               	movlw	0
  2605   000B82  6E13               	movwf	___flmul@a^0,c
  2606   000B84  0E00               	movlw	0
  2607   000B86  6E14               	movwf	(___flmul@a+1)^0,c
  2608   000B88  0EA0               	movlw	160
  2609   000B8A  6E15               	movwf	(___flmul@a+2)^0,c
  2610   000B8C  0E40               	movlw	64
  2611   000B8E  6E16               	movwf	(___flmul@a+3)^0,c
  2612   000B90  EC2E  F00D         	call	___flmul	;wreg free
  2613   000B94  C00F  F058         	movff	?___flmul,efgtoa@l
  2614   000B98  C010  F059         	movff	?___flmul+1,efgtoa@l+1
  2615   000B9C  C011  F05A         	movff	?___flmul+2,efgtoa@l+2
  2616   000BA0  C012  F05B         	movff	?___flmul+3,efgtoa@l+3
  2617   000BA4                     
  2618                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  2619   000BA4  C054  F028         	movff	efgtoa@h,___flge@ff1
  2620   000BA8  C055  F029         	movff	efgtoa@h+1,___flge@ff1+1
  2621   000BAC  C056  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  2622   000BB0  C057  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  2623   000BB4  C058  F02C         	movff	efgtoa@l,___flge@ff2
  2624   000BB8  C059  F02D         	movff	efgtoa@l+1,___flge@ff2+1
  2625   000BBC  C05A  F02E         	movff	efgtoa@l+2,___flge@ff2+2
  2626   000BC0  C05B  F02F         	movff	efgtoa@l+3,___flge@ff2+3
  2627   000BC4  ECEC  F016         	call	___flge	;wreg free
  2628   000BC8  B0D8               	btfsc	status,0,c
  2629   000BCA  EFE9  F005         	goto	u3981
  2630   000BCE  EFEB  F005         	goto	u3980
  2631   000BD2                     u3981:
  2632   000BD2  EFF5  F005         	goto	l3481
  2633   000BD6                     u3980:
  2634   000BD6                     
  2635                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  2636   000BD6  0E00               	movlw	0
  2637   000BD8  6E58               	movwf	efgtoa@l^0,c
  2638   000BDA  0E00               	movlw	0
  2639   000BDC  6E59               	movwf	(efgtoa@l+1)^0,c
  2640   000BDE  0E00               	movlw	0
  2641   000BE0  6E5A               	movwf	(efgtoa@l+2)^0,c
  2642   000BE2  0E00               	movlw	0
  2643   000BE4  6E5B               	movwf	(efgtoa@l+3)^0,c
  2644                           
  2645                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  2646   000BE6  EF1D  F006         	goto	l3487
  2647   000BEA                     l3481:
  2648                           
  2649                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  2650   000BEA  C054  F001         	movff	efgtoa@h,___fleq@ff1
  2651   000BEE  C055  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  2652   000BF2  C056  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  2653   000BF6  C057  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  2654   000BFA  C058  F005         	movff	efgtoa@l,___fleq@ff2
  2655   000BFE  C059  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  2656   000C02  C05A  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  2657   000C06  C05B  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  2658   000C0A  EC52  F018         	call	___fleq	;wreg free
  2659   000C0E  A0D8               	btfss	status,0,c
  2660   000C10  EF0C  F006         	goto	u3991
  2661   000C14  EF0E  F006         	goto	u3990
  2662   000C18                     u3991:
  2663   000C18  EF1D  F006         	goto	l3487
  2664   000C1C                     u3990:
  2665   000C1C  B048               	btfsc	efgtoa@d^0,0,c
  2666   000C1E  EF13  F006         	goto	u4001
  2667   000C22  EF15  F006         	goto	u4000
  2668   000C26                     u4001:
  2669   000C26  EF1D  F006         	goto	l3487
  2670   000C2A                     u4000:
  2671   000C2A                     
  2672                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  2673   000C2A  0E00               	movlw	0
  2674   000C2C  6E58               	movwf	efgtoa@l^0,c
  2675   000C2E  0E00               	movlw	0
  2676   000C30  6E59               	movwf	(efgtoa@l+1)^0,c
  2677   000C32  0E00               	movlw	0
  2678   000C34  6E5A               	movwf	(efgtoa@l+2)^0,c
  2679   000C36  0E00               	movlw	0
  2680   000C38  6E5B               	movwf	(efgtoa@l+3)^0,c
  2681   000C3A                     l3487:
  2682                           
  2683                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  2684   000C3A  C05F  F001         	movff	efgtoa@g,___fladd@b
  2685   000C3E  C060  F002         	movff	efgtoa@g+1,___fladd@b+1
  2686   000C42  C061  F003         	movff	efgtoa@g+2,___fladd@b+2
  2687   000C46  C062  F004         	movff	efgtoa@g+3,___fladd@b+3
  2688   000C4A  C058  F005         	movff	efgtoa@l,___fladd@a
  2689   000C4E  C059  F006         	movff	efgtoa@l+1,___fladd@a+1
  2690   000C52  C05A  F007         	movff	efgtoa@l+2,___fladd@a+2
  2691   000C56  C05B  F008         	movff	efgtoa@l+3,___fladd@a+3
  2692   000C5A  ECCE  F00A         	call	___fladd	;wreg free
  2693   000C5E  C001  F054         	movff	?___fladd,efgtoa@h
  2694   000C62  C002  F055         	movff	?___fladd+1,efgtoa@h+1
  2695   000C66  C003  F056         	movff	?___fladd+2,efgtoa@h+2
  2696   000C6A  C004  F057         	movff	?___fladd+3,efgtoa@h+3
  2697   000C6E                     
  2698                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  2699   000C6E  C054  F028         	movff	efgtoa@h,___flge@ff1
  2700   000C72  C055  F029         	movff	efgtoa@h+1,___flge@ff1+1
  2701   000C76  C056  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  2702   000C7A  C057  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  2703   000C7E  0E00               	movlw	0
  2704   000C80  6E13               	movwf	___flmul@a^0,c
  2705   000C82  0E00               	movlw	0
  2706   000C84  6E14               	movwf	(___flmul@a+1)^0,c
  2707   000C86  0E20               	movlw	32
  2708   000C88  6E15               	movwf	(___flmul@a+2)^0,c
  2709   000C8A  0E41               	movlw	65
  2710   000C8C  6E16               	movwf	(___flmul@a+3)^0,c
  2711   000C8E  C050  F00F         	movff	efgtoa@ou,___flmul@b
  2712   000C92  C051  F010         	movff	efgtoa@ou+1,___flmul@b+1
  2713   000C96  C052  F011         	movff	efgtoa@ou+2,___flmul@b+2
  2714   000C9A  C053  F012         	movff	efgtoa@ou+3,___flmul@b+3
  2715   000C9E  EC2E  F00D         	call	___flmul	;wreg free
  2716   000CA2  C00F  F02C         	movff	?___flmul,___flge@ff2
  2717   000CA6  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  2718   000CAA  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  2719   000CAE  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  2720   000CB2  ECEC  F016         	call	___flge	;wreg free
  2721   000CB6  A0D8               	btfss	status,0,c
  2722   000CB8  EF60  F006         	goto	u4011
  2723   000CBC  EF62  F006         	goto	u4010
  2724   000CC0                     u4011:
  2725   000CC0  EF89  F006         	goto	l3499
  2726   000CC4                     u4010:
  2727   000CC4                     
  2728                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  2729   000CC4  4A4C               	infsnz	efgtoa@e^0,f,c
  2730   000CC6  2A4D               	incf	(efgtoa@e+1)^0,f,c
  2731   000CC8                     
  2732                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  2733   000CC8  C050  F00F         	movff	efgtoa@ou,___flmul@b
  2734   000CCC  C051  F010         	movff	efgtoa@ou+1,___flmul@b+1
  2735   000CD0  C052  F011         	movff	efgtoa@ou+2,___flmul@b+2
  2736   000CD4  C053  F012         	movff	efgtoa@ou+3,___flmul@b+3
  2737   000CD8  0E00               	movlw	0
  2738   000CDA  6E13               	movwf	___flmul@a^0,c
  2739   000CDC  0E00               	movlw	0
  2740   000CDE  6E14               	movwf	(___flmul@a+1)^0,c
  2741   000CE0  0E20               	movlw	32
  2742   000CE2  6E15               	movwf	(___flmul@a+2)^0,c
  2743   000CE4  0E41               	movlw	65
  2744   000CE6  6E16               	movwf	(___flmul@a+3)^0,c
  2745   000CE8  EC2E  F00D         	call	___flmul	;wreg free
  2746   000CEC  C00F  F050         	movff	?___flmul,efgtoa@ou
  2747   000CF0  C010  F051         	movff	?___flmul+1,efgtoa@ou+1
  2748   000CF4  C011  F052         	movff	?___flmul+2,efgtoa@ou+2
  2749   000CF8  C012  F053         	movff	?___flmul+3,efgtoa@ou+3
  2750   000CFC                     
  2751                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  2752   000CFC  0E66               	movlw	102
  2753   000CFE  1847               	xorwf	efgtoa@nmode^0,w,c
  2754   000D00  A4D8               	btfss	status,2,c
  2755   000D02  EF85  F006         	goto	u4021
  2756   000D06  EF87  F006         	goto	u4020
  2757   000D0A                     u4021:
  2758   000D0A  EF89  F006         	goto	l3499
  2759   000D0E                     u4020:
  2760   000D0E                     
  2761                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  2762   000D0E  4A4A               	infsnz	efgtoa@m^0,f,c
  2763   000D10  2A4B               	incf	(efgtoa@m+1)^0,f,c
  2764   000D12                     l3499:
  2765                           
  2766                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  2767   000D12  C050  F065         	movff	efgtoa@ou,efgtoa@u
  2768   000D16  C051  F066         	movff	efgtoa@ou+1,efgtoa@u+1
  2769   000D1A  C052  F067         	movff	efgtoa@ou+2,efgtoa@u+2
  2770   000D1E  C053  F068         	movff	efgtoa@ou+3,efgtoa@u+3
  2771   000D22                     
  2772                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  2773   000D22  C04C  F03D         	movff	efgtoa@e,efgtoa@ne
  2774   000D26  C04D  F03E         	movff	efgtoa@e+1,efgtoa@ne+1
  2775   000D2A                     
  2776                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  2777   000D2A  0E00               	movlw	0
  2778   000D2C  6E45               	movwf	efgtoa@pp^0,c
  2779   000D2E                     
  2780                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  2781   000D2E  0E00               	movlw	0
  2782   000D30  6E42               	movwf	(efgtoa@t+1)^0,c
  2783   000D32  0E00               	movlw	0
  2784   000D34  6E41               	movwf	efgtoa@t^0,c
  2785   000D36                     
  2786                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  2787   000D36  0E00               	movlw	0
  2788   000D38  6E5D               	movwf	(efgtoa@i+1)^0,c
  2789   000D3A  0E00               	movlw	0
  2790   000D3C  6E5C               	movwf	efgtoa@i^0,c
  2791                           
  2792                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  2793   000D3E  EF83  F007         	goto	l3549
  2794   000D42                     l3509:
  2795                           
  2796                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  2797   000D42  C054  F001         	movff	efgtoa@h,___fldiv@b
  2798   000D46  C055  F002         	movff	efgtoa@h+1,___fldiv@b+1
  2799   000D4A  C056  F003         	movff	efgtoa@h+2,___fldiv@b+2
  2800   000D4E  C057  F004         	movff	efgtoa@h+3,___fldiv@b+3
  2801   000D52  C065  F005         	movff	efgtoa@u,___fldiv@a
  2802   000D56  C066  F006         	movff	efgtoa@u+1,___fldiv@a+1
  2803   000D5A  C067  F007         	movff	efgtoa@u+2,___fldiv@a+2
  2804   000D5E  C068  F008         	movff	efgtoa@u+3,___fldiv@a+3
  2805   000D62  EC43  F00F         	call	___fldiv	;wreg free
  2806   000D66  C001  F01A         	movff	?___fldiv,floorf@x
  2807   000D6A  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  2808   000D6E  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  2809   000D72  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  2810   000D76  EC6B  F012         	call	_floorf	;wreg free
  2811   000D7A  C01A  F058         	movff	?_floorf,efgtoa@l
  2812   000D7E  C01B  F059         	movff	?_floorf+1,efgtoa@l+1
  2813   000D82  C01C  F05A         	movff	?_floorf+2,efgtoa@l+2
  2814   000D86  C01D  F05B         	movff	?_floorf+3,efgtoa@l+3
  2815                           
  2816                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  2817   000D8A  C058  F001         	movff	efgtoa@l,___fltol@f1
  2818   000D8E  C059  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2819   000D92  C05A  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2820   000D96  C05B  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2821   000D9A  EC69  F016         	call	___fltol	;wreg free
  2822   000D9E  BE02               	btfsc	(?___fltol+1)^0,7,c
  2823   000DA0  EFDD  F006         	goto	u4030
  2824   000DA4  5002               	movf	(?___fltol+1)^0,w,c
  2825   000DA6  E107               	bnz	u4031
  2826   000DA8  0E0A               	movlw	10
  2827   000DAA  5C01               	subwf	?___fltol^0,w,c
  2828   000DAC  B0D8               	btfsc	status,0,c
  2829   000DAE  EFDB  F006         	goto	u4031
  2830   000DB2  EFDD  F006         	goto	u4030
  2831   000DB6                     u4031:
  2832   000DB6  EFED  F006         	goto	l3513
  2833   000DBA                     u4030:
  2834   000DBA  C058  F001         	movff	efgtoa@l,___fltol@f1
  2835   000DBE  C059  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2836   000DC2  C05A  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2837   000DC6  C05B  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2838   000DCA  EC69  F016         	call	___fltol	;wreg free
  2839   000DCE  C001  F048         	movff	?___fltol,efgtoa@d
  2840   000DD2  C002  F049         	movff	?___fltol+1,efgtoa@d+1
  2841   000DD6  EFF1  F006         	goto	l879
  2842   000DDA                     l3513:
  2843   000DDA  0E00               	movlw	0
  2844   000DDC  6E49               	movwf	(efgtoa@d+1)^0,c
  2845   000DDE  0E09               	movlw	9
  2846   000DE0  6E48               	movwf	efgtoa@d^0,c
  2847   000DE2                     l879:
  2848                           
  2849                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  2850   000DE2  5045               	movf	efgtoa@pp^0,w,c
  2851   000DE4  A4D8               	btfss	status,2,c
  2852   000DE6  EFF7  F006         	goto	u4041
  2853   000DEA  EFF9  F006         	goto	u4040
  2854   000DEE                     u4041:
  2855   000DEE  EF21  F007         	goto	l3533
  2856   000DF2                     u4040:
  2857   000DF2  BE3E               	btfsc	(efgtoa@ne+1)^0,7,c
  2858   000DF4  EF00  F007         	goto	u4050
  2859   000DF8  EFFE  F006         	goto	u4051
  2860   000DFC                     u4051:
  2861   000DFC  EF21  F007         	goto	l3533
  2862   000E00                     u4050:
  2863   000E00                     
  2864                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  2865   000E00  0E00               	movlw	low _dbuf
  2866   000E02  2463               	addwf	efgtoa@n^0,w,c
  2867   000E04  6ED9               	movwf	fsr2l,c
  2868   000E06  0E01               	movlw	high _dbuf
  2869   000E08  2064               	addwfc	(efgtoa@n+1)^0,w,c
  2870   000E0A  6EDA               	movwf	fsr2h,c
  2871   000E0C  0E2E               	movlw	46
  2872   000E0E  6EDF               	movwf	indf2,c
  2873   000E10  4A63               	infsnz	efgtoa@n^0,f,c
  2874   000E12  2A64               	incf	(efgtoa@n+1)^0,f,c
  2875   000E14                     
  2876                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  2877   000E14  064E               	decf	efgtoa@w^0,f,c
  2878   000E16  A0D8               	btfss	status,0,c
  2879   000E18  064F               	decf	(efgtoa@w+1)^0,f,c
  2880   000E1A                     
  2881                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  2882   000E1A  0E01               	movlw	1
  2883   000E1C  6E45               	movwf	efgtoa@pp^0,c
  2884   000E1E  EF21  F007         	goto	l3533
  2885   000E22                     l3525:
  2886                           
  2887                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  2888   000E22  0E00               	movlw	low _dbuf
  2889   000E24  2463               	addwf	efgtoa@n^0,w,c
  2890   000E26  6ED9               	movwf	fsr2l,c
  2891   000E28  0E01               	movlw	high _dbuf
  2892   000E2A  2064               	addwfc	(efgtoa@n+1)^0,w,c
  2893   000E2C  6EDA               	movwf	fsr2h,c
  2894   000E2E  0E30               	movlw	48
  2895   000E30  6EDF               	movwf	indf2,c
  2896   000E32  4A63               	infsnz	efgtoa@n^0,f,c
  2897   000E34  2A64               	incf	(efgtoa@n+1)^0,f,c
  2898   000E36                     
  2899                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  2900   000E36  064E               	decf	efgtoa@w^0,f,c
  2901   000E38  A0D8               	btfss	status,0,c
  2902   000E3A  064F               	decf	(efgtoa@w+1)^0,f,c
  2903   000E3C                     
  2904                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  2905   000E3C  0641               	decf	efgtoa@t^0,f,c
  2906   000E3E  A0D8               	btfss	status,0,c
  2907   000E40  0642               	decf	(efgtoa@t+1)^0,f,c
  2908   000E42                     l3533:
  2909                           
  2910                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  2911   000E42  5041               	movf	efgtoa@t^0,w,c
  2912   000E44  1042               	iorwf	(efgtoa@t+1)^0,w,c
  2913   000E46  A4D8               	btfss	status,2,c
  2914   000E48  EF28  F007         	goto	u4061
  2915   000E4C  EF2A  F007         	goto	u4060
  2916   000E50                     u4061:
  2917   000E50  EF11  F007         	goto	l3525
  2918   000E54                     u4060:
  2919   000E54                     
  2920                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  2921   000E54  0E00               	movlw	low _dbuf
  2922   000E56  2463               	addwf	efgtoa@n^0,w,c
  2923   000E58  6ED9               	movwf	fsr2l,c
  2924   000E5A  0E01               	movlw	high _dbuf
  2925   000E5C  2064               	addwfc	(efgtoa@n+1)^0,w,c
  2926   000E5E  6EDA               	movwf	fsr2h,c
  2927   000E60  5048               	movf	efgtoa@d^0,w,c
  2928   000E62  0F30               	addlw	48
  2929   000E64  6EDF               	movwf	indf2,c
  2930   000E66  4A63               	infsnz	efgtoa@n^0,f,c
  2931   000E68  2A64               	incf	(efgtoa@n+1)^0,f,c
  2932   000E6A                     
  2933                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  2934   000E6A  064E               	decf	efgtoa@w^0,f,c
  2935   000E6C  A0D8               	btfss	status,0,c
  2936   000E6E  064F               	decf	(efgtoa@w+1)^0,f,c
  2937   000E70                     
  2938                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  2939   000E70  C054  F028         	movff	efgtoa@h,___flsub@b
  2940   000E74  C055  F029         	movff	efgtoa@h+1,___flsub@b+1
  2941   000E78  C056  F02A         	movff	efgtoa@h+2,___flsub@b+2
  2942   000E7C  C057  F02B         	movff	efgtoa@h+3,___flsub@b+3
  2943   000E80  C058  F013         	movff	efgtoa@l,___flmul@a
  2944   000E84  C059  F014         	movff	efgtoa@l+1,___flmul@a+1
  2945   000E88  C05A  F015         	movff	efgtoa@l+2,___flmul@a+2
  2946   000E8C  C05B  F016         	movff	efgtoa@l+3,___flmul@a+3
  2947   000E90  C065  F00F         	movff	efgtoa@u,___flmul@b
  2948   000E94  C066  F010         	movff	efgtoa@u+1,___flmul@b+1
  2949   000E98  C067  F011         	movff	efgtoa@u+2,___flmul@b+2
  2950   000E9C  C068  F012         	movff	efgtoa@u+3,___flmul@b+3
  2951   000EA0  EC2E  F00D         	call	___flmul	;wreg free
  2952   000EA4  C00F  F02C         	movff	?___flmul,___flsub@a
  2953   000EA8  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  2954   000EAC  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  2955   000EB0  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  2956   000EB4  EC14  F01A         	call	___flsub	;wreg free
  2957   000EB8  C028  F054         	movff	?___flsub,efgtoa@h
  2958   000EBC  C029  F055         	movff	?___flsub+1,efgtoa@h+1
  2959   000EC0  C02A  F056         	movff	?___flsub+2,efgtoa@h+2
  2960   000EC4  C02B  F057         	movff	?___flsub+3,efgtoa@h+3
  2961   000EC8                     
  2962                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  2963   000EC8  C065  F001         	movff	efgtoa@u,___fldiv@b
  2964   000ECC  C066  F002         	movff	efgtoa@u+1,___fldiv@b+1
  2965   000ED0  C067  F003         	movff	efgtoa@u+2,___fldiv@b+2
  2966   000ED4  C068  F004         	movff	efgtoa@u+3,___fldiv@b+3
  2967   000ED8  0E00               	movlw	0
  2968   000EDA  6E05               	movwf	___fldiv@a^0,c
  2969   000EDC  0E00               	movlw	0
  2970   000EDE  6E06               	movwf	(___fldiv@a+1)^0,c
  2971   000EE0  0E20               	movlw	32
  2972   000EE2  6E07               	movwf	(___fldiv@a+2)^0,c
  2973   000EE4  0E41               	movlw	65
  2974   000EE6  6E08               	movwf	(___fldiv@a+3)^0,c
  2975   000EE8  EC43  F00F         	call	___fldiv	;wreg free
  2976   000EEC  C001  F065         	movff	?___fldiv,efgtoa@u
  2977   000EF0  C002  F066         	movff	?___fldiv+1,efgtoa@u+1
  2978   000EF4  C003  F067         	movff	?___fldiv+2,efgtoa@u+2
  2979   000EF8  C004  F068         	movff	?___fldiv+3,efgtoa@u+3
  2980   000EFC                     
  2981                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  2982   000EFC  063D               	decf	efgtoa@ne^0,f,c
  2983   000EFE  A0D8               	btfss	status,0,c
  2984   000F00  063E               	decf	(efgtoa@ne+1)^0,f,c
  2985   000F02                     
  2986                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  2987   000F02  4A5C               	infsnz	efgtoa@i^0,f,c
  2988   000F04  2A5D               	incf	(efgtoa@i+1)^0,f,c
  2989   000F06                     l3549:
  2990                           
  2991                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  2992   000F06  504A               	movf	efgtoa@m^0,w,c
  2993   000F08  5C5C               	subwf	efgtoa@i^0,w,c
  2994   000F0A  505D               	movf	(efgtoa@i+1)^0,w,c
  2995   000F0C  0A80               	xorlw	128
  2996   000F0E  6E3B               	movwf	??_efgtoa^0,c
  2997   000F10  504B               	movf	(efgtoa@m+1)^0,w,c
  2998   000F12  0A80               	xorlw	128
  2999   000F14  583B               	subwfb	??_efgtoa^0,w,c
  3000   000F16  B0D8               	btfsc	status,0,c
  3001   000F18  EF90  F007         	goto	u4071
  3002   000F1C  EF92  F007         	goto	u4070
  3003   000F20                     u4071:
  3004   000F20  EFA0  F007         	goto	l3553
  3005   000F24                     u4070:
  3006   000F24  BE64               	btfsc	(efgtoa@n+1)^0,7,c
  3007   000F26  EF9E  F007         	goto	u4081
  3008   000F2A  5064               	movf	(efgtoa@n+1)^0,w,c
  3009   000F2C  E109               	bnz	u4080
  3010   000F2E  0E4B               	movlw	75
  3011   000F30  5C63               	subwf	efgtoa@n^0,w,c
  3012   000F32  A0D8               	btfss	status,0,c
  3013   000F34  EF9E  F007         	goto	u4081
  3014   000F38  EFA0  F007         	goto	u4080
  3015   000F3C                     u4081:
  3016   000F3C  EFA1  F006         	goto	l3509
  3017   000F40                     u4080:
  3018   000F40                     l3553:
  3019                           
  3020                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  3021   000F40  0E00               	movlw	0
  3022   000F42  6E5D               	movwf	(efgtoa@i+1)^0,c
  3023   000F44  0E4F               	movlw	79
  3024   000F46  6E5C               	movwf	efgtoa@i^0,c
  3025   000F48                     
  3026                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  3027   000F48  0E00               	movlw	low _dbuf
  3028   000F4A  245C               	addwf	efgtoa@i^0,w,c
  3029   000F4C  6ED9               	movwf	fsr2l,c
  3030   000F4E  0E01               	movlw	high _dbuf
  3031   000F50  205D               	addwfc	(efgtoa@i+1)^0,w,c
  3032   000F52  6EDA               	movwf	fsr2h,c
  3033   000F54  0E00               	movlw	0
  3034   000F56  6EDF               	movwf	indf2,c
  3035   000F58                     
  3036                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  3037   000F58  0E00               	movlw	low _dbuf
  3038   000F5A  6E3B               	movwf	??_efgtoa^0,c
  3039   000F5C  0E01               	movlw	high _dbuf
  3040   000F5E  6E3C               	movwf	(??_efgtoa+1)^0,c
  3041   000F60  5063               	movf	efgtoa@n^0,w,c
  3042   000F62  5E3B               	subwf	??_efgtoa^0,f,c
  3043   000F64  5064               	movf	(efgtoa@n+1)^0,w,c
  3044   000F66  5A3C               	subwfb	(??_efgtoa+1)^0,f,c
  3045   000F68  505C               	movf	efgtoa@i^0,w,c
  3046   000F6A  243B               	addwf	??_efgtoa^0,w,c
  3047   000F6C  6E01               	movwf	memcpy@d1^0,c
  3048   000F6E  505D               	movf	(efgtoa@i+1)^0,w,c
  3049   000F70  203C               	addwfc	(??_efgtoa+1)^0,w,c
  3050   000F72  6E02               	movwf	(memcpy@d1+1)^0,c
  3051   000F74  0E00               	movlw	low _dbuf
  3052   000F76  6E03               	movwf	memcpy@s1^0,c
  3053   000F78  0E01               	movlw	high _dbuf
  3054   000F7A  6E04               	movwf	(memcpy@s1+1)^0,c
  3055   000F7C  C063  F005         	movff	efgtoa@n,memcpy@n
  3056   000F80  C064  F006         	movff	efgtoa@n+1,memcpy@n+1
  3057   000F84  ECEC  F019         	call	_memcpy	;wreg free
  3058   000F88                     
  3059                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  3060   000F88  5063               	movf	efgtoa@n^0,w,c
  3061   000F8A  5C5C               	subwf	efgtoa@i^0,w,c
  3062   000F8C  6E63               	movwf	efgtoa@n^0,c
  3063   000F8E  5064               	movf	(efgtoa@n+1)^0,w,c
  3064   000F90  585D               	subwfb	(efgtoa@i+1)^0,w,c
  3065   000F92  6E64               	movwf	(efgtoa@n+1)^0,c
  3066   000F94                     
  3067                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  3068   000F94  505E               	movf	efgtoa@sign^0,w,c
  3069   000F96  A4D8               	btfss	status,2,c
  3070   000F98  EFD0  F007         	goto	u4091
  3071   000F9C  EFD3  F007         	goto	u4090
  3072   000FA0                     u4091:
  3073   000FA0  0E01               	movlw	1
  3074   000FA2  EFD4  F007         	goto	u4100
  3075   000FA6                     u4090:
  3076   000FA6  0E00               	movlw	0
  3077   000FA8                     u4100:
  3078   000FA8  6E5C               	movwf	efgtoa@i^0,c
  3079   000FAA  6A5D               	clrf	(efgtoa@i+1)^0,c
  3080   000FAC                     
  3081                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 772:  if (flags &
      +                           (1 << 1)) {
  3082   000FAC  A27F               	btfss	_flags^0,1,c
  3083   000FAE  EFDB  F007         	goto	u4111
  3084   000FB2  EFDD  F007         	goto	u4110
  3085   000FB6                     u4111:
  3086   000FB6  EF0B  F008         	goto	l3575
  3087   000FBA                     u4110:
  3088   000FBA  EFED  F007         	goto	l3571
  3089   000FBE                     l3567:
  3090                           
  3091                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 774:    dbuf[--n]
      +                           = '0';
  3092   000FBE  0663               	decf	efgtoa@n^0,f,c
  3093   000FC0  A0D8               	btfss	status,0,c
  3094   000FC2  0664               	decf	(efgtoa@n+1)^0,f,c
  3095   000FC4  0E00               	movlw	low _dbuf
  3096   000FC6  2463               	addwf	efgtoa@n^0,w,c
  3097   000FC8  6ED9               	movwf	fsr2l,c
  3098   000FCA  0E01               	movlw	high _dbuf
  3099   000FCC  2064               	addwfc	(efgtoa@n+1)^0,w,c
  3100   000FCE  6EDA               	movwf	fsr2h,c
  3101   000FD0  0E30               	movlw	48
  3102   000FD2  6EDF               	movwf	indf2,c
  3103   000FD4                     
  3104                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 775:    w--;
  3105   000FD4  064E               	decf	efgtoa@w^0,f,c
  3106   000FD6  A0D8               	btfss	status,0,c
  3107   000FD8  064F               	decf	(efgtoa@w+1)^0,f,c
  3108   000FDA                     l3571:
  3109                           
  3110                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 773:   while (w >
      +                           i && n > i) {
  3111   000FDA  504E               	movf	efgtoa@w^0,w,c
  3112   000FDC  5C5C               	subwf	efgtoa@i^0,w,c
  3113   000FDE  505D               	movf	(efgtoa@i+1)^0,w,c
  3114   000FE0  0A80               	xorlw	128
  3115   000FE2  6E3B               	movwf	??_efgtoa^0,c
  3116   000FE4  504F               	movf	(efgtoa@w+1)^0,w,c
  3117   000FE6  0A80               	xorlw	128
  3118   000FE8  583B               	subwfb	??_efgtoa^0,w,c
  3119   000FEA  B0D8               	btfsc	status,0,c
  3120   000FEC  EFFA  F007         	goto	u4121
  3121   000FF0  EFFC  F007         	goto	u4120
  3122   000FF4                     u4121:
  3123   000FF4  EF0B  F008         	goto	l3575
  3124   000FF8                     u4120:
  3125   000FF8  5063               	movf	efgtoa@n^0,w,c
  3126   000FFA  5C5C               	subwf	efgtoa@i^0,w,c
  3127   000FFC  505D               	movf	(efgtoa@i+1)^0,w,c
  3128   000FFE  0A80               	xorlw	128
  3129   001000  6E3B               	movwf	??_efgtoa^0,c
  3130   001002  5064               	movf	(efgtoa@n+1)^0,w,c
  3131   001004  0A80               	xorlw	128
  3132   001006  583B               	subwfb	??_efgtoa^0,w,c
  3133   001008  A0D8               	btfss	status,0,c
  3134   00100A  EF09  F008         	goto	u4131
  3135   00100E  EF0B  F008         	goto	u4130
  3136   001012                     u4131:
  3137   001012  EFDF  F007         	goto	l3567
  3138   001016                     u4130:
  3139   001016                     l3575:
  3140                           
  3141                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  3142   001016  505E               	movf	efgtoa@sign^0,w,c
  3143   001018  B4D8               	btfsc	status,2,c
  3144   00101A  EF11  F008         	goto	u4141
  3145   00101E  EF13  F008         	goto	u4140
  3146   001022                     u4141:
  3147   001022  EF1E  F008         	goto	l3579
  3148   001026                     u4140:
  3149   001026                     
  3150                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  3151   001026  0663               	decf	efgtoa@n^0,f,c
  3152   001028  A0D8               	btfss	status,0,c
  3153   00102A  0664               	decf	(efgtoa@n+1)^0,f,c
  3154   00102C  0E00               	movlw	low _dbuf
  3155   00102E  2463               	addwf	efgtoa@n^0,w,c
  3156   001030  6ED9               	movwf	fsr2l,c
  3157   001032  0E01               	movlw	high _dbuf
  3158   001034  2064               	addwfc	(efgtoa@n+1)^0,w,c
  3159   001036  6EDA               	movwf	fsr2h,c
  3160   001038  C05E  FFDF         	movff	efgtoa@sign,indf2
  3161   00103C                     l3579:
  3162                           
  3163                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  3164   00103C  505C               	movf	efgtoa@i^0,w,c
  3165   00103E  5E4E               	subwf	efgtoa@w^0,f,c
  3166   001040  505D               	movf	(efgtoa@i+1)^0,w,c
  3167   001042  5A4F               	subwfb	(efgtoa@w+1)^0,f,c
  3168   001044                     
  3169                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  3170   001044  C034  F011         	movff	efgtoa@fp,pad@fp
  3171   001048  C035  F012         	movff	efgtoa@fp+1,pad@fp+1
  3172   00104C  0E00               	movlw	low _dbuf
  3173   00104E  2463               	addwf	efgtoa@n^0,w,c
  3174   001050  6E13               	movwf	pad@buf^0,c
  3175   001052  0E01               	movlw	high _dbuf
  3176   001054  2064               	addwfc	(efgtoa@n+1)^0,w,c
  3177   001056  6E14               	movwf	(pad@buf+1)^0,c
  3178   001058  C04E  F015         	movff	efgtoa@w,pad@p
  3179   00105C  C04F  F016         	movff	efgtoa@w+1,pad@p+1
  3180   001060  ECA7  F018         	call	_pad	;wreg free
  3181   001064                     l846:
  3182   001064  0012               	return		;funcret
  3183   001066                     __end_of_efgtoa:
  3184                           	callstack 0
  3185                           
  3186 ;; *************** function _strcpy *****************
  3187 ;; Defined at:
  3188 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  3189 ;; Parameters:    Size  Location     Type
  3190 ;;  dest            2    0[COMRAM] PTR unsigned char 
  3191 ;;		 -> dbuf(80), 
  3192 ;;  src             2    2[COMRAM] PTR const unsigned char 
  3193 ;;		 -> STR_5(4), STR_2(4), 
  3194 ;; Auto vars:     Size  Location     Type
  3195 ;;  d               2    6[COMRAM] PTR unsigned char 
  3196 ;;		 -> dbuf(80), 
  3197 ;;  s               2    4[COMRAM] PTR const unsigned char 
  3198 ;;		 -> STR_5(4), STR_2(4), 
  3199 ;; Return value:  Size  Location     Type
  3200 ;;                  2    0[COMRAM] PTR unsigned char 
  3201 ;; Registers used:
  3202 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3203 ;; Tracked objects:
  3204 ;;		On entry : 0/0
  3205 ;;		On exit  : 0/0
  3206 ;;		Unchanged: 0/0
  3207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3208 ;;      Params:         4       0       0       0       0       0       0
  3209 ;;      Locals:         4       0       0       0       0       0       0
  3210 ;;      Temps:          0       0       0       0       0       0       0
  3211 ;;      Totals:         8       0       0       0       0       0       0
  3212 ;;Total ram usage:        8 bytes
  3213 ;; Hardware stack levels used: 1
  3214 ;; This function calls:
  3215 ;;		Nothing
  3216 ;; This function is called by:
  3217 ;;		_efgtoa
  3218 ;; This function uses a non-reentrant model
  3219 ;;
  3220                           
  3221                           	psect	text6
  3222   0034F8                     __ptext6:
  3223                           	callstack 0
  3224   0034F8                     _strcpy:
  3225                           	callstack 25
  3226   0034F8  C003  F005         	movff	strcpy@src,strcpy@s
  3227   0034FC  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  3228   003500  C001  F007         	movff	strcpy@dest,strcpy@d
  3229   003504  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  3230   003508                     l3229:
  3231   003508  C005  FFF6         	movff	strcpy@s,tblptrl
  3232   00350C  C006  FFF7         	movff	strcpy@s+1,tblptrh
  3233   003510  4A05               	infsnz	strcpy@s^0,f,c
  3234   003512  2A06               	incf	(strcpy@s+1)^0,f,c
  3235   003514                     	if	0	;tblptru may be non-zero
  3236   003514                     	endif
  3237   003514                     	if	0	;tblptru may be non-zero
  3238   003514                     	endif
  3239   003514  C007  FFD9         	movff	strcpy@d,fsr2l
  3240   003518  C008  FFDA         	movff	strcpy@d+1,fsr2h
  3241   00351C  4A07               	infsnz	strcpy@d^0,f,c
  3242   00351E  2A08               	incf	(strcpy@d+1)^0,f,c
  3243   003520  0008               	tblrd		*
  3244   003522  CFF5 FFDF          	movff	tablat,indf2
  3245   003526  50DF               	movf	indf2,w,c
  3246   003528  A4D8               	btfss	status,2,c
  3247   00352A  EF99  F01A         	goto	u3501
  3248   00352E  EF9B  F01A         	goto	u3500
  3249   003532                     u3501:
  3250   003532  EF84  F01A         	goto	l3229
  3251   003536                     u3500:
  3252   003536  0012               	return		;funcret
  3253   003538                     __end_of_strcpy:
  3254                           	callstack 0
  3255                           
  3256 ;; *************** function _memcpy *****************
  3257 ;; Defined at:
  3258 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  3259 ;; Parameters:    Size  Location     Type
  3260 ;;  d1              2    0[COMRAM] PTR void 
  3261 ;;		 -> dbuf(80), 
  3262 ;;  s1              2    2[COMRAM] PTR const void 
  3263 ;;		 -> dbuf(80), 
  3264 ;;  n               2    4[COMRAM] unsigned int 
  3265 ;; Auto vars:     Size  Location     Type
  3266 ;;  s               2    8[COMRAM] PTR const unsigned char 
  3267 ;;		 -> dbuf(80), 
  3268 ;;  d               2    6[COMRAM] PTR unsigned char 
  3269 ;;		 -> dbuf(80), 
  3270 ;;  tmp             1   10[COMRAM] unsigned char 
  3271 ;; Return value:  Size  Location     Type
  3272 ;;                  2    0[COMRAM] PTR void 
  3273 ;; Registers used:
  3274 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3275 ;; Tracked objects:
  3276 ;;		On entry : 0/0
  3277 ;;		On exit  : 0/0
  3278 ;;		Unchanged: 0/0
  3279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3280 ;;      Params:         6       0       0       0       0       0       0
  3281 ;;      Locals:         5       0       0       0       0       0       0
  3282 ;;      Temps:          0       0       0       0       0       0       0
  3283 ;;      Totals:        11       0       0       0       0       0       0
  3284 ;;Total ram usage:       11 bytes
  3285 ;; Hardware stack levels used: 1
  3286 ;; This function calls:
  3287 ;;		Nothing
  3288 ;; This function is called by:
  3289 ;;		_efgtoa
  3290 ;; This function uses a non-reentrant model
  3291 ;;
  3292                           
  3293                           	psect	text7
  3294   0033D8                     __ptext7:
  3295                           	callstack 0
  3296   0033D8                     _memcpy:
  3297                           	callstack 25
  3298   0033D8  C003  F009         	movff	memcpy@s1,memcpy@s
  3299   0033DC  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  3300   0033E0  C001  F007         	movff	memcpy@d1,memcpy@d
  3301   0033E4  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  3302   0033E8  EF06  F01A         	goto	l3273
  3303   0033EC                     l3265:
  3304   0033EC  C009  FFD9         	movff	memcpy@s,fsr2l
  3305   0033F0  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  3306   0033F4  50DF               	movf	indf2,w,c
  3307   0033F6  6E0B               	movwf	memcpy@tmp^0,c
  3308   0033F8  4A09               	infsnz	memcpy@s^0,f,c
  3309   0033FA  2A0A               	incf	(memcpy@s+1)^0,f,c
  3310   0033FC  C007  FFD9         	movff	memcpy@d,fsr2l
  3311   003400  C008  FFDA         	movff	memcpy@d+1,fsr2h
  3312   003404  C00B  FFDF         	movff	memcpy@tmp,indf2
  3313   003408  4A07               	infsnz	memcpy@d^0,f,c
  3314   00340A  2A08               	incf	(memcpy@d+1)^0,f,c
  3315   00340C                     l3273:
  3316   00340C  0605               	decf	memcpy@n^0,f,c
  3317   00340E  A0D8               	btfss	status,0,c
  3318   003410  0606               	decf	(memcpy@n+1)^0,f,c
  3319   003412  2805               	incf	memcpy@n^0,w,c
  3320   003414  E106               	bnz	u3621
  3321   003416  2806               	incf	(memcpy@n+1)^0,w,c
  3322   003418  A4D8               	btfss	status,2,c
  3323   00341A  EF11  F01A         	goto	u3621
  3324   00341E  EF13  F01A         	goto	u3620
  3325   003422                     u3621:
  3326   003422  EFF6  F019         	goto	l3265
  3327   003426                     u3620:
  3328   003426  0012               	return		;funcret
  3329   003428                     __end_of_memcpy:
  3330                           	callstack 0
  3331                           
  3332 ;; *************** function _labs *****************
  3333 ;; Defined at:
  3334 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  3335 ;; Parameters:    Size  Location     Type
  3336 ;;  a               4    0[COMRAM] long 
  3337 ;; Auto vars:     Size  Location     Type
  3338 ;;		None
  3339 ;; Return value:  Size  Location     Type
  3340 ;;                  4    0[COMRAM] long 
  3341 ;; Registers used:
  3342 ;;		wreg, status,2, status,0
  3343 ;; Tracked objects:
  3344 ;;		On entry : 0/0
  3345 ;;		On exit  : 0/0
  3346 ;;		Unchanged: 0/0
  3347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3348 ;;      Params:         4       0       0       0       0       0       0
  3349 ;;      Locals:         0       0       0       0       0       0       0
  3350 ;;      Temps:          4       0       0       0       0       0       0
  3351 ;;      Totals:         8       0       0       0       0       0       0
  3352 ;;Total ram usage:        8 bytes
  3353 ;; Hardware stack levels used: 1
  3354 ;; This function calls:
  3355 ;;		Nothing
  3356 ;; This function is called by:
  3357 ;;		_efgtoa
  3358 ;; This function uses a non-reentrant model
  3359 ;;
  3360                           
  3361                           	psect	text8
  3362   00327C                     __ptext8:
  3363                           	callstack 0
  3364   00327C                     _labs:
  3365                           	callstack 25
  3366   00327C  BE04               	btfsc	(labs@a+3)^0,7,c
  3367   00327E  EF4D  F019         	goto	u3510
  3368   003282  5004               	movf	(labs@a+3)^0,w,c
  3369   003284  1003               	iorwf	(labs@a+2)^0,w,c
  3370   003286  1002               	iorwf	(labs@a+1)^0,w,c
  3371   003288  E106               	bnz	u3511
  3372   00328A  0401               	decf	labs@a^0,w,c
  3373   00328C  B0D8               	btfsc	status,0,c
  3374   00328E  EF4B  F019         	goto	u3511
  3375   003292  EF4D  F019         	goto	u3510
  3376   003296                     u3511:
  3377   003296  EF68  F019         	goto	l1019
  3378   00329A                     u3510:
  3379   00329A  C001  F005         	movff	labs@a,??_labs
  3380   00329E  C002  F006         	movff	labs@a+1,??_labs+1
  3381   0032A2  C003  F007         	movff	labs@a+2,??_labs+2
  3382   0032A6  C004  F008         	movff	labs@a+3,??_labs+3
  3383   0032AA  1E05               	comf	??_labs^0,f,c
  3384   0032AC  1E06               	comf	(??_labs+1)^0,f,c
  3385   0032AE  1E07               	comf	(??_labs+2)^0,f,c
  3386   0032B0  1E08               	comf	(??_labs+3)^0,f,c
  3387   0032B2  2A05               	incf	??_labs^0,f,c
  3388   0032B4  0E00               	movlw	0
  3389   0032B6  2206               	addwfc	(??_labs+1)^0,f,c
  3390   0032B8  2207               	addwfc	(??_labs+2)^0,f,c
  3391   0032BA  2208               	addwfc	(??_labs+3)^0,f,c
  3392   0032BC  C005  F001         	movff	??_labs,?_labs
  3393   0032C0  C006  F002         	movff	??_labs+1,?_labs+1
  3394   0032C4  C007  F003         	movff	??_labs+2,?_labs+2
  3395   0032C8  C008  F004         	movff	??_labs+3,?_labs+3
  3396   0032CC  EF70  F019         	goto	l1022
  3397   0032D0                     l1019:
  3398   0032D0  C001  F001         	movff	labs@a,?_labs
  3399   0032D4  C002  F002         	movff	labs@a+1,?_labs+1
  3400   0032D8  C003  F003         	movff	labs@a+2,?_labs+2
  3401   0032DC  C004  F004         	movff	labs@a+3,?_labs+3
  3402   0032E0                     l1022:
  3403   0032E0  0012               	return		;funcret
  3404   0032E2                     __end_of_labs:
  3405                           	callstack 0
  3406                           
  3407 ;; *************** function _floorf *****************
  3408 ;; Defined at:
  3409 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  3410 ;; Parameters:    Size  Location     Type
  3411 ;;  x               4   25[COMRAM] float 
  3412 ;; Auto vars:     Size  Location     Type
  3413 ;;  u               4   41[COMRAM] struct .
  3414 ;;  m               4   35[COMRAM] unsigned long 
  3415 ;;  e               2   39[COMRAM] int 
  3416 ;; Return value:  Size  Location     Type
  3417 ;;                  4   25[COMRAM] float 
  3418 ;; Registers used:
  3419 ;;		wreg, status,2, status,0
  3420 ;; Tracked objects:
  3421 ;;		On entry : 0/0
  3422 ;;		On exit  : 0/0
  3423 ;;		Unchanged: 0/0
  3424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3425 ;;      Params:         4       0       0       0       0       0       0
  3426 ;;      Locals:        10       0       0       0       0       0       0
  3427 ;;      Temps:          6       0       0       0       0       0       0
  3428 ;;      Totals:        20       0       0       0       0       0       0
  3429 ;;Total ram usage:       20 bytes
  3430 ;; Hardware stack levels used: 1
  3431 ;; This function calls:
  3432 ;;		Nothing
  3433 ;; This function is called by:
  3434 ;;		_efgtoa
  3435 ;; This function uses a non-reentrant model
  3436 ;;
  3437                           
  3438                           	psect	text9
  3439   0024D6                     __ptext9:
  3440                           	callstack 0
  3441   0024D6                     _floorf:
  3442                           	callstack 25
  3443   0024D6  C080  F02A         	movff	floorf@F526,floorf@u
  3444   0024DA  C081  F02B         	movff	floorf@F526+1,floorf@u+1
  3445   0024DE  C082  F02C         	movff	floorf@F526+2,floorf@u+2
  3446   0024E2  C083  F02D         	movff	floorf@F526+3,floorf@u+3
  3447   0024E6  C01A  F02A         	movff	floorf@x,floorf@u
  3448   0024EA  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  3449   0024EE  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  3450   0024F2  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  3451   0024F6  0E81               	movlw	129
  3452   0024F8  6E1E               	movwf	??_floorf^0,c
  3453   0024FA  0EFF               	movlw	255
  3454   0024FC  6E1F               	movwf	(??_floorf+1)^0,c
  3455   0024FE  C02A  F020         	movff	floorf@u,??_floorf+2
  3456   002502  C02B  F021         	movff	floorf@u+1,??_floorf+3
  3457   002506  C02C  F022         	movff	floorf@u+2,??_floorf+4
  3458   00250A  C02D  F023         	movff	floorf@u+3,??_floorf+5
  3459   00250E  0E18               	movlw	24
  3460   002510  EF8F  F012         	goto	u3520
  3461   002514                     u3525:
  3462   002514  90D8               	bcf	status,0,c
  3463   002516  3223               	rrcf	(??_floorf+5)^0,f,c
  3464   002518  3222               	rrcf	(??_floorf+4)^0,f,c
  3465   00251A  3221               	rrcf	(??_floorf+3)^0,f,c
  3466   00251C  3220               	rrcf	(??_floorf+2)^0,f,c
  3467   00251E                     u3520:
  3468   00251E  2EE8               	decfsz	wreg,f,c
  3469   002520  EF8A  F012         	goto	u3525
  3470   002524  5020               	movf	(??_floorf+2)^0,w,c
  3471   002526  241E               	addwf	??_floorf^0,w,c
  3472   002528  6E28               	movwf	floorf@e^0,c
  3473   00252A  0E00               	movlw	0
  3474   00252C  201F               	addwfc	(??_floorf+1)^0,w,c
  3475   00252E  6E29               	movwf	(floorf@e+1)^0,c
  3476   002530  BE29               	btfsc	(floorf@e+1)^0,7,c
  3477   002532  EFA4  F012         	goto	u3531
  3478   002536  5029               	movf	(floorf@e+1)^0,w,c
  3479   002538  E109               	bnz	u3530
  3480   00253A  0E17               	movlw	23
  3481   00253C  5C28               	subwf	floorf@e^0,w,c
  3482   00253E  A0D8               	btfss	status,0,c
  3483   002540  EFA4  F012         	goto	u3531
  3484   002544  EFA6  F012         	goto	u3530
  3485   002548                     u3531:
  3486   002548  EFB0  F012         	goto	l3241
  3487   00254C                     u3530:
  3488   00254C                     l3239:
  3489   00254C  C01A  F01A         	movff	floorf@x,?_floorf
  3490   002550  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  3491   002554  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  3492   002558  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  3493   00255C  EF73  F013         	goto	l994
  3494   002560                     l3241:
  3495   002560  BE29               	btfsc	(floorf@e+1)^0,7,c
  3496   002562  EFB5  F012         	goto	u3541
  3497   002566  EFB7  F012         	goto	u3540
  3498   00256A                     u3541:
  3499   00256A  EF27  F013         	goto	l3251
  3500   00256E                     u3540:
  3501   00256E  C028  F01E         	movff	floorf@e,??_floorf
  3502   002572  0EFF               	movlw	255
  3503   002574  6E1F               	movwf	(??_floorf+1)^0,c
  3504   002576  0EFF               	movlw	255
  3505   002578  6E20               	movwf	(??_floorf+2)^0,c
  3506   00257A  0E7F               	movlw	127
  3507   00257C  6E21               	movwf	(??_floorf+3)^0,c
  3508   00257E  0E00               	movlw	0
  3509   002580  6E22               	movwf	(??_floorf+4)^0,c
  3510   002582                     u3555:
  3511   002582  661E               	tstfsz	??_floorf^0,c
  3512   002584  EFC6  F012         	goto	u3556
  3513   002588  EFCE  F012         	goto	u3557
  3514   00258C                     u3556:
  3515   00258C  3422               	rlcf	(??_floorf+4)^0,w,c
  3516   00258E  3222               	rrcf	(??_floorf+4)^0,f,c
  3517   002590  3221               	rrcf	(??_floorf+3)^0,f,c
  3518   002592  3220               	rrcf	(??_floorf+2)^0,f,c
  3519   002594  321F               	rrcf	(??_floorf+1)^0,f,c
  3520   002596  2E1E               	decfsz	??_floorf^0,f,c
  3521   002598  EFC1  F012         	goto	u3555
  3522   00259C                     u3557:
  3523   00259C  C01F  F024         	movff	??_floorf+1,floorf@m
  3524   0025A0  C020  F025         	movff	??_floorf+2,floorf@m+1
  3525   0025A4  C021  F026         	movff	??_floorf+3,floorf@m+2
  3526   0025A8  C022  F027         	movff	??_floorf+4,floorf@m+3
  3527   0025AC  5024               	movf	floorf@m^0,w,c
  3528   0025AE  142A               	andwf	floorf@u^0,w,c
  3529   0025B0  6E1E               	movwf	??_floorf^0,c
  3530   0025B2  5025               	movf	(floorf@m+1)^0,w,c
  3531   0025B4  142B               	andwf	(floorf@u+1)^0,w,c
  3532   0025B6  6E1F               	movwf	(??_floorf+1)^0,c
  3533   0025B8  5026               	movf	(floorf@m+2)^0,w,c
  3534   0025BA  142C               	andwf	(floorf@u+2)^0,w,c
  3535   0025BC  6E20               	movwf	(??_floorf+2)^0,c
  3536   0025BE  5027               	movf	(floorf@m+3)^0,w,c
  3537   0025C0  142D               	andwf	(floorf@u+3)^0,w,c
  3538   0025C2  6E21               	movwf	(??_floorf+3)^0,c
  3539   0025C4  501E               	movf	??_floorf^0,w,c
  3540   0025C6  101F               	iorwf	(??_floorf+1)^0,w,c
  3541   0025C8  1020               	iorwf	(??_floorf+2)^0,w,c
  3542   0025CA  1021               	iorwf	(??_floorf+3)^0,w,c
  3543   0025CC  A4D8               	btfss	status,2,c
  3544   0025CE  EFEB  F012         	goto	u3561
  3545   0025D2  EFED  F012         	goto	u3560
  3546   0025D6                     u3561:
  3547   0025D6  EFEF  F012         	goto	l3247
  3548   0025DA                     u3560:
  3549   0025DA  EFA6  F012         	goto	l3239
  3550   0025DE                     l3247:
  3551   0025DE  C02A  F01E         	movff	floorf@u,??_floorf
  3552   0025E2  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  3553   0025E6  C02C  F020         	movff	floorf@u+2,??_floorf+2
  3554   0025EA  C02D  F021         	movff	floorf@u+3,??_floorf+3
  3555   0025EE  0E20               	movlw	32
  3556   0025F0  EFFF  F012         	goto	u3570
  3557   0025F4                     u3575:
  3558   0025F4  90D8               	bcf	status,0,c
  3559   0025F6  3221               	rrcf	(??_floorf+3)^0,f,c
  3560   0025F8  3220               	rrcf	(??_floorf+2)^0,f,c
  3561   0025FA  321F               	rrcf	(??_floorf+1)^0,f,c
  3562   0025FC  321E               	rrcf	??_floorf^0,f,c
  3563   0025FE                     u3570:
  3564   0025FE  2EE8               	decfsz	wreg,f,c
  3565   002600  EFFA  F012         	goto	u3575
  3566   002604  501E               	movf	??_floorf^0,w,c
  3567   002606  101F               	iorwf	(??_floorf+1)^0,w,c
  3568   002608  1020               	iorwf	(??_floorf+2)^0,w,c
  3569   00260A  1021               	iorwf	(??_floorf+3)^0,w,c
  3570   00260C  B4D8               	btfsc	status,2,c
  3571   00260E  EF0B  F013         	goto	u3581
  3572   002612  EF0D  F013         	goto	u3580
  3573   002616                     u3581:
  3574   002616  EF15  F013         	goto	l997
  3575   00261A                     u3580:
  3576   00261A  5024               	movf	floorf@m^0,w,c
  3577   00261C  262A               	addwf	floorf@u^0,f,c
  3578   00261E  5025               	movf	(floorf@m+1)^0,w,c
  3579   002620  222B               	addwfc	(floorf@u+1)^0,f,c
  3580   002622  5026               	movf	(floorf@m+2)^0,w,c
  3581   002624  222C               	addwfc	(floorf@u+2)^0,f,c
  3582   002626  5027               	movf	(floorf@m+3)^0,w,c
  3583   002628  222D               	addwfc	(floorf@u+3)^0,f,c
  3584   00262A                     l997:
  3585   00262A  1C24               	comf	floorf@m^0,w,c
  3586   00262C  6E1E               	movwf	??_floorf^0,c
  3587   00262E  1C25               	comf	(floorf@m+1)^0,w,c
  3588   002630  6E1F               	movwf	(??_floorf+1)^0,c
  3589   002632  1C26               	comf	(floorf@m+2)^0,w,c
  3590   002634  6E20               	movwf	(??_floorf+2)^0,c
  3591   002636  1C27               	comf	(floorf@m+3)^0,w,c
  3592   002638  6E21               	movwf	(??_floorf+3)^0,c
  3593   00263A  501E               	movf	??_floorf^0,w,c
  3594   00263C  162A               	andwf	floorf@u^0,f,c
  3595   00263E  501F               	movf	(??_floorf+1)^0,w,c
  3596   002640  162B               	andwf	(floorf@u+1)^0,f,c
  3597   002642  5020               	movf	(??_floorf+2)^0,w,c
  3598   002644  162C               	andwf	(floorf@u+2)^0,f,c
  3599   002646  5021               	movf	(??_floorf+3)^0,w,c
  3600   002648  162D               	andwf	(floorf@u+3)^0,f,c
  3601   00264A  EF6B  F013         	goto	l3259
  3602   00264E                     l3251:
  3603   00264E  C02A  F01E         	movff	floorf@u,??_floorf
  3604   002652  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  3605   002656  C02C  F020         	movff	floorf@u+2,??_floorf+2
  3606   00265A  C02D  F021         	movff	floorf@u+3,??_floorf+3
  3607   00265E  0E20               	movlw	32
  3608   002660  EF37  F013         	goto	u3590
  3609   002664                     u3595:
  3610   002664  90D8               	bcf	status,0,c
  3611   002666  3221               	rrcf	(??_floorf+3)^0,f,c
  3612   002668  3220               	rrcf	(??_floorf+2)^0,f,c
  3613   00266A  321F               	rrcf	(??_floorf+1)^0,f,c
  3614   00266C  321E               	rrcf	??_floorf^0,f,c
  3615   00266E                     u3590:
  3616   00266E  2EE8               	decfsz	wreg,f,c
  3617   002670  EF32  F013         	goto	u3595
  3618   002674  501E               	movf	??_floorf^0,w,c
  3619   002676  101F               	iorwf	(??_floorf+1)^0,w,c
  3620   002678  1020               	iorwf	(??_floorf+2)^0,w,c
  3621   00267A  1021               	iorwf	(??_floorf+3)^0,w,c
  3622   00267C  A4D8               	btfss	status,2,c
  3623   00267E  EF43  F013         	goto	u3601
  3624   002682  EF45  F013         	goto	u3600
  3625   002686                     u3601:
  3626   002686  EF4F  F013         	goto	l3255
  3627   00268A                     u3600:
  3628   00268A  0E00               	movlw	0
  3629   00268C  6E2A               	movwf	floorf@u^0,c
  3630   00268E  0E00               	movlw	0
  3631   002690  6E2B               	movwf	(floorf@u+1)^0,c
  3632   002692  0E00               	movlw	0
  3633   002694  6E2C               	movwf	(floorf@u+2)^0,c
  3634   002696  0E00               	movlw	0
  3635   002698  6E2D               	movwf	(floorf@u+3)^0,c
  3636   00269A  EF6B  F013         	goto	l3259
  3637   00269E                     l3255:
  3638   00269E  90D8               	bcf	status,0,c
  3639   0026A0  342A               	rlcf	floorf@u^0,w,c
  3640   0026A2  6E1E               	movwf	??_floorf^0,c
  3641   0026A4  342B               	rlcf	(floorf@u+1)^0,w,c
  3642   0026A6  6E1F               	movwf	(??_floorf+1)^0,c
  3643   0026A8  342C               	rlcf	(floorf@u+2)^0,w,c
  3644   0026AA  6E20               	movwf	(??_floorf+2)^0,c
  3645   0026AC  342D               	rlcf	(floorf@u+3)^0,w,c
  3646   0026AE  6E21               	movwf	(??_floorf+3)^0,c
  3647   0026B0  501E               	movf	??_floorf^0,w,c
  3648   0026B2  101F               	iorwf	(??_floorf+1)^0,w,c
  3649   0026B4  1020               	iorwf	(??_floorf+2)^0,w,c
  3650   0026B6  1021               	iorwf	(??_floorf+3)^0,w,c
  3651   0026B8  B4D8               	btfsc	status,2,c
  3652   0026BA  EF61  F013         	goto	u3611
  3653   0026BE  EF63  F013         	goto	u3610
  3654   0026C2                     u3611:
  3655   0026C2  EF6B  F013         	goto	l3259
  3656   0026C6                     u3610:
  3657   0026C6  0E00               	movlw	0
  3658   0026C8  6E2A               	movwf	floorf@u^0,c
  3659   0026CA  0E00               	movlw	0
  3660   0026CC  6E2B               	movwf	(floorf@u+1)^0,c
  3661   0026CE  0E80               	movlw	128
  3662   0026D0  6E2C               	movwf	(floorf@u+2)^0,c
  3663   0026D2  0EBF               	movlw	191
  3664   0026D4  6E2D               	movwf	(floorf@u+3)^0,c
  3665   0026D6                     l3259:
  3666   0026D6  C02A  F01A         	movff	floorf@u,?_floorf
  3667   0026DA  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  3668   0026DE  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  3669   0026E2  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  3670   0026E6                     l994:
  3671   0026E6  0012               	return		;funcret
  3672   0026E8                     __end_of_floorf:
  3673                           	callstack 0
  3674                           
  3675 ;; *************** function ___fpclassifyf *****************
  3676 ;; Defined at:
  3677 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  3678 ;; Parameters:    Size  Location     Type
  3679 ;;  x               4    0[COMRAM] float 
  3680 ;; Auto vars:     Size  Location     Type
  3681 ;;  u               4   10[COMRAM] struct .
  3682 ;;  e               2    8[COMRAM] int 
  3683 ;; Return value:  Size  Location     Type
  3684 ;;                  2    0[COMRAM] int 
  3685 ;; Registers used:
  3686 ;;		wreg, status,2, status,0
  3687 ;; Tracked objects:
  3688 ;;		On entry : 0/0
  3689 ;;		On exit  : 0/0
  3690 ;;		Unchanged: 0/0
  3691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3692 ;;      Params:         4       0       0       0       0       0       0
  3693 ;;      Locals:         6       0       0       0       0       0       0
  3694 ;;      Temps:          4       0       0       0       0       0       0
  3695 ;;      Totals:        14       0       0       0       0       0       0
  3696 ;;Total ram usage:       14 bytes
  3697 ;; Hardware stack levels used: 1
  3698 ;; This function calls:
  3699 ;;		Nothing
  3700 ;; This function is called by:
  3701 ;;		_efgtoa
  3702 ;; This function uses a non-reentrant model
  3703 ;;
  3704                           
  3705                           	psect	text10
  3706   002EDC                     __ptext10:
  3707                           	callstack 0
  3708   002EDC                     ___fpclassifyf:
  3709                           	callstack 25
  3710   002EDC  C084  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  3711   002EE0  C085  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  3712   002EE4  C086  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  3713   002EE8  C087  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  3714   002EEC  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  3715   002EF0  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  3716   002EF4  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  3717   002EF8  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  3718   002EFC  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  3719   002F00  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  3720   002F04  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  3721   002F08  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  3722   002F0C  0E18               	movlw	24
  3723   002F0E  EF8E  F017         	goto	u3430
  3724   002F12                     u3435:
  3725   002F12  90D8               	bcf	status,0,c
  3726   002F14  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  3727   002F16  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  3728   002F18  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  3729   002F1A  3205               	rrcf	??___fpclassifyf^0,f,c
  3730   002F1C                     u3430:
  3731   002F1C  2EE8               	decfsz	wreg,f,c
  3732   002F1E  EF89  F017         	goto	u3435
  3733   002F22  5005               	movf	??___fpclassifyf^0,w,c
  3734   002F24  6E09               	movwf	___fpclassifyf@e^0,c
  3735   002F26  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  3736   002F28  5009               	movf	___fpclassifyf@e^0,w,c
  3737   002F2A  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  3738   002F2C  A4D8               	btfss	status,2,c
  3739   002F2E  EF9B  F017         	goto	u3441
  3740   002F32  EF9D  F017         	goto	u3440
  3741   002F36                     u3441:
  3742   002F36  EFBD  F017         	goto	l3217
  3743   002F3A                     u3440:
  3744   002F3A  90D8               	bcf	status,0,c
  3745   002F3C  340B               	rlcf	___fpclassifyf@u^0,w,c
  3746   002F3E  6E05               	movwf	??___fpclassifyf^0,c
  3747   002F40  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  3748   002F42  6E06               	movwf	(??___fpclassifyf+1)^0,c
  3749   002F44  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  3750   002F46  6E07               	movwf	(??___fpclassifyf+2)^0,c
  3751   002F48  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  3752   002F4A  6E08               	movwf	(??___fpclassifyf+3)^0,c
  3753   002F4C  5005               	movf	??___fpclassifyf^0,w,c
  3754   002F4E  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  3755   002F50  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  3756   002F52  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  3757   002F54  A4D8               	btfss	status,2,c
  3758   002F56  EFAF  F017         	goto	u3451
  3759   002F5A  EFB1  F017         	goto	u3450
  3760   002F5E                     u3451:
  3761   002F5E  EFB7  F017         	goto	l3213
  3762   002F62                     u3450:
  3763   002F62  0E00               	movlw	0
  3764   002F64  6E02               	movwf	(?___fpclassifyf+1)^0,c
  3765   002F66  0E02               	movlw	2
  3766   002F68  6E01               	movwf	?___fpclassifyf^0,c
  3767   002F6A  EFEC  F017         	goto	l955
  3768   002F6E                     l3213:
  3769   002F6E  0E00               	movlw	0
  3770   002F70  6E02               	movwf	(?___fpclassifyf+1)^0,c
  3771   002F72  0E03               	movlw	3
  3772   002F74  6E01               	movwf	?___fpclassifyf^0,c
  3773   002F76  EFEC  F017         	goto	l955
  3774   002F7A                     l3217:
  3775   002F7A  2809               	incf	___fpclassifyf@e^0,w,c
  3776   002F7C  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  3777   002F7E  A4D8               	btfss	status,2,c
  3778   002F80  EFC4  F017         	goto	u3461
  3779   002F84  EFC6  F017         	goto	u3460
  3780   002F88                     u3461:
  3781   002F88  EFE8  F017         	goto	l3223
  3782   002F8C                     u3460:
  3783   002F8C  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  3784   002F90  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  3785   002F94  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  3786   002F98  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  3787   002F9C  0E09               	movlw	9
  3788   002F9E                     u3475:
  3789   002F9E  90D8               	bcf	status,0,c
  3790   002FA0  3605               	rlcf	??___fpclassifyf^0,f,c
  3791   002FA2  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  3792   002FA4  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  3793   002FA6  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  3794   002FA8  2EE8               	decfsz	wreg,f,c
  3795   002FAA  EFCF  F017         	goto	u3475
  3796   002FAE  5005               	movf	??___fpclassifyf^0,w,c
  3797   002FB0  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  3798   002FB2  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  3799   002FB4  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  3800   002FB6  B4D8               	btfsc	status,2,c
  3801   002FB8  EFE0  F017         	goto	u3481
  3802   002FBC  EFE3  F017         	goto	u3480
  3803   002FC0                     u3481:
  3804   002FC0  0E01               	movlw	1
  3805   002FC2  EFE4  F017         	goto	u3490
  3806   002FC6                     u3480:
  3807   002FC6  0E00               	movlw	0
  3808   002FC8                     u3490:
  3809   002FC8  6E01               	movwf	?___fpclassifyf^0,c
  3810   002FCA  6A02               	clrf	(?___fpclassifyf+1)^0,c
  3811   002FCC  EFEC  F017         	goto	l955
  3812   002FD0                     l3223:
  3813   002FD0  0E00               	movlw	0
  3814   002FD2  6E02               	movwf	(?___fpclassifyf+1)^0,c
  3815   002FD4  0E04               	movlw	4
  3816   002FD6  6E01               	movwf	?___fpclassifyf^0,c
  3817   002FD8                     l955:
  3818   002FD8  0012               	return		;funcret
  3819   002FDA                     __end_of___fpclassifyf:
  3820                           	callstack 0
  3821                           
  3822 ;; *************** function ___fltol *****************
  3823 ;; Defined at:
  3824 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  3825 ;; Parameters:    Size  Location     Type
  3826 ;;  f1              4    0[COMRAM] int 
  3827 ;; Auto vars:     Size  Location     Type
  3828 ;;  exp1            1    9[COMRAM] unsigned char 
  3829 ;;  sign1           1    8[COMRAM] unsigned char 
  3830 ;; Return value:  Size  Location     Type
  3831 ;;                  4    0[COMRAM] long 
  3832 ;; Registers used:
  3833 ;;		wreg, status,2, status,0
  3834 ;; Tracked objects:
  3835 ;;		On entry : 0/0
  3836 ;;		On exit  : 0/0
  3837 ;;		Unchanged: 0/0
  3838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3839 ;;      Params:         4       0       0       0       0       0       0
  3840 ;;      Locals:         2       0       0       0       0       0       0
  3841 ;;      Temps:          4       0       0       0       0       0       0
  3842 ;;      Totals:        10       0       0       0       0       0       0
  3843 ;;Total ram usage:       10 bytes
  3844 ;; Hardware stack levels used: 1
  3845 ;; This function calls:
  3846 ;;		Nothing
  3847 ;; This function is called by:
  3848 ;;		_efgtoa
  3849 ;; This function uses a non-reentrant model
  3850 ;;
  3851                           
  3852                           	psect	text11
  3853   002CD2                     __ptext11:
  3854                           	callstack 0
  3855   002CD2                     ___fltol:
  3856                           	callstack 25
  3857   002CD2  3403               	rlcf	(___fltol@f1+2)^0,w,c
  3858   002CD4  3404               	rlcf	(___fltol@f1+3)^0,w,c
  3859   002CD6  6E0A               	movwf	___fltol@exp1^0,c
  3860   002CD8  500A               	movf	___fltol@exp1^0,w,c
  3861   002CDA  A4D8               	btfss	status,2,c
  3862   002CDC  EF72  F016         	goto	u3311
  3863   002CE0  EF74  F016         	goto	u3310
  3864   002CE4                     u3311:
  3865   002CE4  EF7E  F016         	goto	l3145
  3866   002CE8                     u3310:
  3867   002CE8                     l3141:
  3868   002CE8  0E00               	movlw	0
  3869   002CEA  6E01               	movwf	?___fltol^0,c
  3870   002CEC  0E00               	movlw	0
  3871   002CEE  6E02               	movwf	(?___fltol+1)^0,c
  3872   002CF0  0E00               	movlw	0
  3873   002CF2  6E03               	movwf	(?___fltol+2)^0,c
  3874   002CF4  0E00               	movlw	0
  3875   002CF6  6E04               	movwf	(?___fltol+3)^0,c
  3876   002CF8  EFEB  F016         	goto	l390
  3877   002CFC                     l3145:
  3878   002CFC  C001  F005         	movff	___fltol@f1,??___fltol
  3879   002D00  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  3880   002D04  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  3881   002D08  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  3882   002D0C  0E20               	movlw	32
  3883   002D0E  EF8E  F016         	goto	u3320
  3884   002D12                     u3325:
  3885   002D12  90D8               	bcf	status,0,c
  3886   002D14  3208               	rrcf	(??___fltol+3)^0,f,c
  3887   002D16  3207               	rrcf	(??___fltol+2)^0,f,c
  3888   002D18  3206               	rrcf	(??___fltol+1)^0,f,c
  3889   002D1A  3205               	rrcf	??___fltol^0,f,c
  3890   002D1C                     u3320:
  3891   002D1C  2EE8               	decfsz	wreg,f,c
  3892   002D1E  EF89  F016         	goto	u3325
  3893   002D22  5005               	movf	??___fltol^0,w,c
  3894   002D24  6E09               	movwf	___fltol@sign1^0,c
  3895   002D26  8E03               	bsf	(___fltol@f1+2)^0,7,c
  3896   002D28  0EFF               	movlw	255
  3897   002D2A  1601               	andwf	___fltol@f1^0,f,c
  3898   002D2C  0EFF               	movlw	255
  3899   002D2E  1602               	andwf	(___fltol@f1+1)^0,f,c
  3900   002D30  0EFF               	movlw	255
  3901   002D32  1603               	andwf	(___fltol@f1+2)^0,f,c
  3902   002D34  0E00               	movlw	0
  3903   002D36  1604               	andwf	(___fltol@f1+3)^0,f,c
  3904   002D38  0E96               	movlw	150
  3905   002D3A  5E0A               	subwf	___fltol@exp1^0,f,c
  3906   002D3C  BE0A               	btfsc	___fltol@exp1^0,7,c
  3907   002D3E  EFA5  F016         	goto	u3330
  3908   002D42  EFA3  F016         	goto	u3331
  3909   002D46                     u3331:
  3910   002D46  EFBB  F016         	goto	l3165
  3911   002D4A                     u3330:
  3912   002D4A  500A               	movf	___fltol@exp1^0,w,c
  3913   002D4C  0A80               	xorlw	128
  3914   002D4E  0F97               	addlw	151
  3915   002D50  B0D8               	btfsc	status,0,c
  3916   002D52  EFAD  F016         	goto	u3341
  3917   002D56  EFAF  F016         	goto	u3340
  3918   002D5A                     u3341:
  3919   002D5A  EFB1  F016         	goto	l3161
  3920   002D5E                     u3340:
  3921   002D5E  EF74  F016         	goto	l3141
  3922   002D62                     l3161:
  3923   002D62  90D8               	bcf	status,0,c
  3924   002D64  3204               	rrcf	(___fltol@f1+3)^0,f,c
  3925   002D66  3203               	rrcf	(___fltol@f1+2)^0,f,c
  3926   002D68  3202               	rrcf	(___fltol@f1+1)^0,f,c
  3927   002D6A  3201               	rrcf	___fltol@f1^0,f,c
  3928   002D6C  3E0A               	incfsz	___fltol@exp1^0,f,c
  3929   002D6E  EFB1  F016         	goto	l3161
  3930   002D72  EFD3  F016         	goto	l3175
  3931   002D76                     l3165:
  3932   002D76  0E1F               	movlw	31
  3933   002D78  640A               	cpfsgt	___fltol@exp1^0,c
  3934   002D7A  EFC1  F016         	goto	u3351
  3935   002D7E  EFC3  F016         	goto	u3350
  3936   002D82                     u3351:
  3937   002D82  EFCB  F016         	goto	l3173
  3938   002D86                     u3350:
  3939   002D86  EF74  F016         	goto	l3141
  3940   002D8A                     l3171:
  3941   002D8A  90D8               	bcf	status,0,c
  3942   002D8C  3601               	rlcf	___fltol@f1^0,f,c
  3943   002D8E  3602               	rlcf	(___fltol@f1+1)^0,f,c
  3944   002D90  3603               	rlcf	(___fltol@f1+2)^0,f,c
  3945   002D92  3604               	rlcf	(___fltol@f1+3)^0,f,c
  3946   002D94  060A               	decf	___fltol@exp1^0,f,c
  3947   002D96                     l3173:
  3948   002D96  500A               	movf	___fltol@exp1^0,w,c
  3949   002D98  A4D8               	btfss	status,2,c
  3950   002D9A  EFD1  F016         	goto	u3361
  3951   002D9E  EFD3  F016         	goto	u3360
  3952   002DA2                     u3361:
  3953   002DA2  EFC5  F016         	goto	l3171
  3954   002DA6                     u3360:
  3955   002DA6                     l3175:
  3956   002DA6  5009               	movf	___fltol@sign1^0,w,c
  3957   002DA8  B4D8               	btfsc	status,2,c
  3958   002DAA  EFD9  F016         	goto	u3371
  3959   002DAE  EFDB  F016         	goto	u3370
  3960   002DB2                     u3371:
  3961   002DB2  EFE3  F016         	goto	l3179
  3962   002DB6                     u3370:
  3963   002DB6  1E04               	comf	(___fltol@f1+3)^0,f,c
  3964   002DB8  1E03               	comf	(___fltol@f1+2)^0,f,c
  3965   002DBA  1E02               	comf	(___fltol@f1+1)^0,f,c
  3966   002DBC  6C01               	negf	___fltol@f1^0,c
  3967   002DBE  0E00               	movlw	0
  3968   002DC0  2202               	addwfc	(___fltol@f1+1)^0,f,c
  3969   002DC2  2203               	addwfc	(___fltol@f1+2)^0,f,c
  3970   002DC4  2204               	addwfc	(___fltol@f1+3)^0,f,c
  3971   002DC6                     l3179:
  3972   002DC6  C001  F001         	movff	___fltol@f1,?___fltol
  3973   002DCA  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  3974   002DCE  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  3975   002DD2  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  3976   002DD6                     l390:
  3977   002DD6  0012               	return		;funcret
  3978   002DD8                     __end_of___fltol:
  3979                           	callstack 0
  3980                           
  3981 ;; *************** function ___flsub *****************
  3982 ;; Defined at:
  3983 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  3984 ;; Parameters:    Size  Location     Type
  3985 ;;  b               4   39[COMRAM] long 
  3986 ;;  a               4   43[COMRAM] long 
  3987 ;; Auto vars:     Size  Location     Type
  3988 ;;		None
  3989 ;; Return value:  Size  Location     Type
  3990 ;;                  4   39[COMRAM] long 
  3991 ;; Registers used:
  3992 ;;		wreg, status,2, status,0, cstack
  3993 ;; Tracked objects:
  3994 ;;		On entry : 0/0
  3995 ;;		On exit  : 0/0
  3996 ;;		Unchanged: 0/0
  3997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3998 ;;      Params:         8       0       0       0       0       0       0
  3999 ;;      Locals:         0       0       0       0       0       0       0
  4000 ;;      Temps:          0       0       0       0       0       0       0
  4001 ;;      Totals:         8       0       0       0       0       0       0
  4002 ;;Total ram usage:        8 bytes
  4003 ;; Hardware stack levels used: 1
  4004 ;; Hardware stack levels required when called: 1
  4005 ;; This function calls:
  4006 ;;		___fladd
  4007 ;; This function is called by:
  4008 ;;		_efgtoa
  4009 ;; This function uses a non-reentrant model
  4010 ;;
  4011                           
  4012                           	psect	text12
  4013   003428                     __ptext12:
  4014                           	callstack 0
  4015   003428                     ___flsub:
  4016                           	callstack 24
  4017   003428  0E00               	movlw	0
  4018   00342A  1A2C               	xorwf	___flsub@a^0,f,c
  4019   00342C  0E00               	movlw	0
  4020   00342E  1A2D               	xorwf	(___flsub@a+1)^0,f,c
  4021   003430  0E00               	movlw	0
  4022   003432  1A2E               	xorwf	(___flsub@a+2)^0,f,c
  4023   003434  0E80               	movlw	128
  4024   003436  1A2F               	xorwf	(___flsub@a+3)^0,f,c
  4025   003438  C028  F001         	movff	___flsub@b,___fladd@b
  4026   00343C  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  4027   003440  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  4028   003444  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  4029   003448  C02C  F005         	movff	___flsub@a,___fladd@a
  4030   00344C  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  4031   003450  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  4032   003454  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  4033   003458  ECCE  F00A         	call	___fladd	;wreg free
  4034   00345C  C001  F028         	movff	?___fladd,?___flsub
  4035   003460  C002  F029         	movff	?___fladd+1,?___flsub+1
  4036   003464  C003  F02A         	movff	?___fladd+2,?___flsub+2
  4037   003468  C004  F02B         	movff	?___fladd+3,?___flsub+3
  4038   00346C  0012               	return		;funcret
  4039   00346E                     __end_of___flsub:
  4040                           	callstack 0
  4041                           
  4042 ;; *************** function ___fladd *****************
  4043 ;; Defined at:
  4044 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  4045 ;; Parameters:    Size  Location     Type
  4046 ;;  b               4    0[COMRAM] long 
  4047 ;;  a               4    4[COMRAM] long 
  4048 ;; Auto vars:     Size  Location     Type
  4049 ;;  grs             1   15[COMRAM] unsigned char 
  4050 ;;  bexp            1   14[COMRAM] unsigned char 
  4051 ;;  aexp            1   13[COMRAM] unsigned char 
  4052 ;;  signs           1   12[COMRAM] unsigned char 
  4053 ;; Return value:  Size  Location     Type
  4054 ;;                  4    0[COMRAM] unsigned char 
  4055 ;; Registers used:
  4056 ;;		wreg, status,2, status,0
  4057 ;; Tracked objects:
  4058 ;;		On entry : 0/0
  4059 ;;		On exit  : 0/0
  4060 ;;		Unchanged: 0/0
  4061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4062 ;;      Params:         8       0       0       0       0       0       0
  4063 ;;      Locals:         4       0       0       0       0       0       0
  4064 ;;      Temps:          4       0       0       0       0       0       0
  4065 ;;      Totals:        16       0       0       0       0       0       0
  4066 ;;Total ram usage:       16 bytes
  4067 ;; Hardware stack levels used: 1
  4068 ;; This function calls:
  4069 ;;		Nothing
  4070 ;; This function is called by:
  4071 ;;		___flsub
  4072 ;;		_efgtoa
  4073 ;; This function uses a non-reentrant model
  4074 ;;
  4075                           
  4076                           	psect	text13
  4077   00159C                     __ptext13:
  4078                           	callstack 0
  4079   00159C                     ___fladd:
  4080                           	callstack 24
  4081   00159C  5004               	movf	(___fladd@b+3)^0,w,c
  4082   00159E  0B80               	andlw	128
  4083   0015A0  6E0D               	movwf	___fladd@signs^0,c
  4084   0015A2  5004               	movf	(___fladd@b+3)^0,w,c
  4085   0015A4  2404               	addwf	(___fladd@b+3)^0,w,c
  4086   0015A6  6E0F               	movwf	___fladd@bexp^0,c
  4087   0015A8  AE03               	btfss	(___fladd@b+2)^0,7,c
  4088   0015AA  EFD9  F00A         	goto	u2271
  4089   0015AE  EFDB  F00A         	goto	u2270
  4090   0015B2                     u2271:
  4091   0015B2  EFDC  F00A         	goto	l2529
  4092   0015B6                     u2270:
  4093   0015B6  800F               	bsf	___fladd@bexp^0,0,c
  4094   0015B8                     l2529:
  4095   0015B8  500F               	movf	___fladd@bexp^0,w,c
  4096   0015BA  B4D8               	btfsc	status,2,c
  4097   0015BC  EFE2  F00A         	goto	u2281
  4098   0015C0  EFE4  F00A         	goto	u2280
  4099   0015C4                     u2281:
  4100   0015C4  EFF9  F00A         	goto	l2539
  4101   0015C8                     u2280:
  4102   0015C8  280F               	incf	___fladd@bexp^0,w,c
  4103   0015CA  A4D8               	btfss	status,2,c
  4104   0015CC  EFEA  F00A         	goto	u2291
  4105   0015D0  EFEC  F00A         	goto	u2290
  4106   0015D4                     u2291:
  4107   0015D4  EFF4  F00A         	goto	l2535
  4108   0015D8                     u2290:
  4109   0015D8  0E00               	movlw	0
  4110   0015DA  6E01               	movwf	___fladd@b^0,c
  4111   0015DC  0E00               	movlw	0
  4112   0015DE  6E02               	movwf	(___fladd@b+1)^0,c
  4113   0015E0  0E00               	movlw	0
  4114   0015E2  6E03               	movwf	(___fladd@b+2)^0,c
  4115   0015E4  0E00               	movlw	0
  4116   0015E6  6E04               	movwf	(___fladd@b+3)^0,c
  4117   0015E8                     l2535:
  4118   0015E8  8E03               	bsf	(___fladd@b+2)^0,7,c
  4119   0015EA  0E00               	movlw	0
  4120   0015EC  6E04               	movwf	(___fladd@b+3)^0,c
  4121   0015EE  EF01  F00B         	goto	l2541
  4122   0015F2                     l2539:
  4123   0015F2  0E00               	movlw	0
  4124   0015F4  6E01               	movwf	___fladd@b^0,c
  4125   0015F6  0E00               	movlw	0
  4126   0015F8  6E02               	movwf	(___fladd@b+1)^0,c
  4127   0015FA  0E00               	movlw	0
  4128   0015FC  6E03               	movwf	(___fladd@b+2)^0,c
  4129   0015FE  0E00               	movlw	0
  4130   001600  6E04               	movwf	(___fladd@b+3)^0,c
  4131   001602                     l2541:
  4132   001602  5008               	movf	(___fladd@a+3)^0,w,c
  4133   001604  0B80               	andlw	128
  4134   001606  6E0E               	movwf	___fladd@aexp^0,c
  4135   001608  500D               	movf	___fladd@signs^0,w,c
  4136   00160A  180E               	xorwf	___fladd@aexp^0,w,c
  4137   00160C  B4D8               	btfsc	status,2,c
  4138   00160E  EF0B  F00B         	goto	u2301
  4139   001612  EF0D  F00B         	goto	u2300
  4140   001616                     u2301:
  4141   001616  EF0E  F00B         	goto	l2547
  4142   00161A                     u2300:
  4143   00161A  8C0D               	bsf	___fladd@signs^0,6,c
  4144   00161C                     l2547:
  4145   00161C  5008               	movf	(___fladd@a+3)^0,w,c
  4146   00161E  2408               	addwf	(___fladd@a+3)^0,w,c
  4147   001620  6E0E               	movwf	___fladd@aexp^0,c
  4148   001622  AE07               	btfss	(___fladd@a+2)^0,7,c
  4149   001624  EF16  F00B         	goto	u2311
  4150   001628  EF18  F00B         	goto	u2310
  4151   00162C                     u2311:
  4152   00162C  EF19  F00B         	goto	l2553
  4153   001630                     u2310:
  4154   001630  800E               	bsf	___fladd@aexp^0,0,c
  4155   001632                     l2553:
  4156   001632  500E               	movf	___fladd@aexp^0,w,c
  4157   001634  B4D8               	btfsc	status,2,c
  4158   001636  EF1F  F00B         	goto	u2321
  4159   00163A  EF21  F00B         	goto	u2320
  4160   00163E                     u2321:
  4161   00163E  EF36  F00B         	goto	l2563
  4162   001642                     u2320:
  4163   001642  280E               	incf	___fladd@aexp^0,w,c
  4164   001644  A4D8               	btfss	status,2,c
  4165   001646  EF27  F00B         	goto	u2331
  4166   00164A  EF29  F00B         	goto	u2330
  4167   00164E                     u2331:
  4168   00164E  EF31  F00B         	goto	l2559
  4169   001652                     u2330:
  4170   001652  0E00               	movlw	0
  4171   001654  6E05               	movwf	___fladd@a^0,c
  4172   001656  0E00               	movlw	0
  4173   001658  6E06               	movwf	(___fladd@a+1)^0,c
  4174   00165A  0E00               	movlw	0
  4175   00165C  6E07               	movwf	(___fladd@a+2)^0,c
  4176   00165E  0E00               	movlw	0
  4177   001660  6E08               	movwf	(___fladd@a+3)^0,c
  4178   001662                     l2559:
  4179   001662  8E07               	bsf	(___fladd@a+2)^0,7,c
  4180   001664  0E00               	movlw	0
  4181   001666  6E08               	movwf	(___fladd@a+3)^0,c
  4182   001668  EF3E  F00B         	goto	l2565
  4183   00166C                     l2563:
  4184   00166C  0E00               	movlw	0
  4185   00166E  6E05               	movwf	___fladd@a^0,c
  4186   001670  0E00               	movlw	0
  4187   001672  6E06               	movwf	(___fladd@a+1)^0,c
  4188   001674  0E00               	movlw	0
  4189   001676  6E07               	movwf	(___fladd@a+2)^0,c
  4190   001678  0E00               	movlw	0
  4191   00167A  6E08               	movwf	(___fladd@a+3)^0,c
  4192   00167C                     l2565:
  4193   00167C  500F               	movf	___fladd@bexp^0,w,c
  4194   00167E  5C0E               	subwf	___fladd@aexp^0,w,c
  4195   001680  B0D8               	btfsc	status,0,c
  4196   001682  EF45  F00B         	goto	u2341
  4197   001686  EF47  F00B         	goto	u2340
  4198   00168A                     u2341:
  4199   00168A  EF6E  F00B         	goto	l2601
  4200   00168E                     u2340:
  4201   00168E  AC0D               	btfss	___fladd@signs^0,6,c
  4202   001690  EF4C  F00B         	goto	u2351
  4203   001694  EF4E  F00B         	goto	u2350
  4204   001698                     u2351:
  4205   001698  EF50  F00B         	goto	l2571
  4206   00169C                     u2350:
  4207   00169C  0E80               	movlw	128
  4208   00169E  1A0D               	xorwf	___fladd@signs^0,f,c
  4209   0016A0                     l2571:
  4210   0016A0  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  4211   0016A4  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4212   0016A8  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  4213   0016AC  C001  F010         	movff	___fladd@b,___fladd@grs
  4214   0016B0  C005  F001         	movff	___fladd@a,___fladd@b
  4215   0016B4  C010  F005         	movff	___fladd@grs,___fladd@a
  4216   0016B8  C002  F010         	movff	___fladd@b+1,___fladd@grs
  4217   0016BC  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  4218   0016C0  C010  F006         	movff	___fladd@grs,___fladd@a+1
  4219   0016C4  C003  F010         	movff	___fladd@b+2,___fladd@grs
  4220   0016C8  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  4221   0016CC  C010  F007         	movff	___fladd@grs,___fladd@a+2
  4222   0016D0  C004  F010         	movff	___fladd@b+3,___fladd@grs
  4223   0016D4  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  4224   0016D8  C010  F008         	movff	___fladd@grs,___fladd@a+3
  4225   0016DC                     l2601:
  4226   0016DC  0E00               	movlw	0
  4227   0016DE  6E10               	movwf	___fladd@grs^0,c
  4228   0016E0  500F               	movf	___fladd@bexp^0,w,c
  4229   0016E2  C00E  F009         	movff	___fladd@aexp,??___fladd
  4230   0016E6  6A0A               	clrf	(??___fladd+1)^0,c
  4231   0016E8  5E09               	subwf	??___fladd^0,f,c
  4232   0016EA  0E00               	movlw	0
  4233   0016EC  5A0A               	subwfb	(??___fladd+1)^0,f,c
  4234   0016EE  BE0A               	btfsc	(??___fladd+1)^0,7,c
  4235   0016F0  EF83  F00B         	goto	u2361
  4236   0016F4  500A               	movf	(??___fladd+1)^0,w,c
  4237   0016F6  E109               	bnz	u2360
  4238   0016F8  0E1A               	movlw	26
  4239   0016FA  5C09               	subwf	??___fladd^0,w,c
  4240   0016FC  A0D8               	btfss	status,0,c
  4241   0016FE  EF83  F00B         	goto	u2361
  4242   001702  EF85  F00B         	goto	u2360
  4243   001706                     u2361:
  4244   001706  EFBC  F00B         	goto	l622
  4245   00170A                     u2360:
  4246   00170A  5001               	movf	___fladd@b^0,w,c
  4247   00170C  1002               	iorwf	(___fladd@b+1)^0,w,c
  4248   00170E  1003               	iorwf	(___fladd@b+2)^0,w,c
  4249   001710  1004               	iorwf	(___fladd@b+3)^0,w,c
  4250   001712  A4D8               	btfss	status,2,c
  4251   001714  EF8E  F00B         	goto	u2371
  4252   001718  EF91  F00B         	goto	u2370
  4253   00171C                     u2371:
  4254   00171C  0E01               	movlw	1
  4255   00171E  EF92  F00B         	goto	u2380
  4256   001722                     u2370:
  4257   001722  0E00               	movlw	0
  4258   001724                     u2380:
  4259   001724  6E10               	movwf	___fladd@grs^0,c
  4260   001726  0E00               	movlw	0
  4261   001728  6E01               	movwf	___fladd@b^0,c
  4262   00172A  0E00               	movlw	0
  4263   00172C  6E02               	movwf	(___fladd@b+1)^0,c
  4264   00172E  0E00               	movlw	0
  4265   001730  6E03               	movwf	(___fladd@b+2)^0,c
  4266   001732  0E00               	movlw	0
  4267   001734  6E04               	movwf	(___fladd@b+3)^0,c
  4268   001736  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4269   00173A  EFC5  F00B         	goto	l621
  4270   00173E                     l623:
  4271   00173E  A010               	btfss	___fladd@grs^0,0,c
  4272   001740  EFA4  F00B         	goto	u2391
  4273   001744  EFA6  F00B         	goto	u2390
  4274   001748                     u2391:
  4275   001748  EFAC  F00B         	goto	l2613
  4276   00174C                     u2390:
  4277   00174C  90D8               	bcf	status,0,c
  4278   00174E  3010               	rrcf	___fladd@grs^0,w,c
  4279   001750  0901               	iorlw	1
  4280   001752  6E10               	movwf	___fladd@grs^0,c
  4281   001754  EFAE  F00B         	goto	l2615
  4282   001758                     l2613:
  4283   001758  90D8               	bcf	status,0,c
  4284   00175A  3210               	rrcf	___fladd@grs^0,f,c
  4285   00175C                     l2615:
  4286   00175C  A001               	btfss	___fladd@b^0,0,c
  4287   00175E  EFB3  F00B         	goto	u2401
  4288   001762  EFB5  F00B         	goto	u2400
  4289   001766                     u2401:
  4290   001766  EFB6  F00B         	goto	l2619
  4291   00176A                     u2400:
  4292   00176A  8E10               	bsf	___fladd@grs^0,7,c
  4293   00176C                     l2619:
  4294   00176C  3404               	rlcf	(___fladd@b+3)^0,w,c
  4295   00176E  3204               	rrcf	(___fladd@b+3)^0,f,c
  4296   001770  3203               	rrcf	(___fladd@b+2)^0,f,c
  4297   001772  3202               	rrcf	(___fladd@b+1)^0,f,c
  4298   001774  3201               	rrcf	___fladd@b^0,f,c
  4299   001776  2A0F               	incf	___fladd@bexp^0,f,c
  4300   001778                     l622:
  4301   001778  500E               	movf	___fladd@aexp^0,w,c
  4302   00177A  5C0F               	subwf	___fladd@bexp^0,w,c
  4303   00177C  A0D8               	btfss	status,0,c
  4304   00177E  EFC3  F00B         	goto	u2411
  4305   001782  EFC5  F00B         	goto	u2410
  4306   001786                     u2411:
  4307   001786  EF9F  F00B         	goto	l623
  4308   00178A                     u2410:
  4309   00178A                     l621:
  4310   00178A  BC0D               	btfsc	___fladd@signs^0,6,c
  4311   00178C  EFCA  F00B         	goto	u2421
  4312   001790  EFCC  F00B         	goto	u2420
  4313   001794                     u2421:
  4314   001794  EF0C  F00C         	goto	l2647
  4315   001798                     u2420:
  4316   001798  500F               	movf	___fladd@bexp^0,w,c
  4317   00179A  A4D8               	btfss	status,2,c
  4318   00179C  EFD2  F00B         	goto	u2431
  4319   0017A0  EFD4  F00B         	goto	u2430
  4320   0017A4                     u2431:
  4321   0017A4  EFDE  F00B         	goto	l2629
  4322   0017A8                     u2430:
  4323   0017A8  0E00               	movlw	0
  4324   0017AA  6E01               	movwf	?___fladd^0,c
  4325   0017AC  0E00               	movlw	0
  4326   0017AE  6E02               	movwf	(?___fladd+1)^0,c
  4327   0017B0  0E00               	movlw	0
  4328   0017B2  6E03               	movwf	(?___fladd+2)^0,c
  4329   0017B4  0E00               	movlw	0
  4330   0017B6  6E04               	movwf	(?___fladd+3)^0,c
  4331   0017B8  EF2D  F00D         	goto	l630
  4332   0017BC                     l2629:
  4333   0017BC  5005               	movf	___fladd@a^0,w,c
  4334   0017BE  2601               	addwf	___fladd@b^0,f,c
  4335   0017C0  5006               	movf	(___fladd@a+1)^0,w,c
  4336   0017C2  2202               	addwfc	(___fladd@b+1)^0,f,c
  4337   0017C4  5007               	movf	(___fladd@a+2)^0,w,c
  4338   0017C6  2203               	addwfc	(___fladd@b+2)^0,f,c
  4339   0017C8  5008               	movf	(___fladd@a+3)^0,w,c
  4340   0017CA  2204               	addwfc	(___fladd@b+3)^0,f,c
  4341   0017CC  A004               	btfss	(___fladd@b+3)^0,0,c
  4342   0017CE  EFEB  F00B         	goto	u2441
  4343   0017D2  EFED  F00B         	goto	u2440
  4344   0017D6                     u2441:
  4345   0017D6  EF99  F00C         	goto	l2683
  4346   0017DA                     u2440:
  4347   0017DA  A010               	btfss	___fladd@grs^0,0,c
  4348   0017DC  EFF2  F00B         	goto	u2451
  4349   0017E0  EFF4  F00B         	goto	u2450
  4350   0017E4                     u2451:
  4351   0017E4  EFFA  F00B         	goto	l2637
  4352   0017E8                     u2450:
  4353   0017E8  90D8               	bcf	status,0,c
  4354   0017EA  3010               	rrcf	___fladd@grs^0,w,c
  4355   0017EC  0901               	iorlw	1
  4356   0017EE  6E10               	movwf	___fladd@grs^0,c
  4357   0017F0  EFFC  F00B         	goto	l2639
  4358   0017F4                     l2637:
  4359   0017F4  90D8               	bcf	status,0,c
  4360   0017F6  3210               	rrcf	___fladd@grs^0,f,c
  4361   0017F8                     l2639:
  4362   0017F8  A001               	btfss	___fladd@b^0,0,c
  4363   0017FA  EF01  F00C         	goto	u2461
  4364   0017FE  EF03  F00C         	goto	u2460
  4365   001802                     u2461:
  4366   001802  EF04  F00C         	goto	l2643
  4367   001806                     u2460:
  4368   001806  8E10               	bsf	___fladd@grs^0,7,c
  4369   001808                     l2643:
  4370   001808  3404               	rlcf	(___fladd@b+3)^0,w,c
  4371   00180A  3204               	rrcf	(___fladd@b+3)^0,f,c
  4372   00180C  3203               	rrcf	(___fladd@b+2)^0,f,c
  4373   00180E  3202               	rrcf	(___fladd@b+1)^0,f,c
  4374   001810  3201               	rrcf	___fladd@b^0,f,c
  4375   001812  2A0F               	incf	___fladd@bexp^0,f,c
  4376   001814  EF99  F00C         	goto	l2683
  4377   001818                     l2647:
  4378   001818  5005               	movf	___fladd@a^0,w,c
  4379   00181A  5C01               	subwf	___fladd@b^0,w,c
  4380   00181C  5006               	movf	(___fladd@a+1)^0,w,c
  4381   00181E  5802               	subwfb	(___fladd@b+1)^0,w,c
  4382   001820  5007               	movf	(___fladd@a+2)^0,w,c
  4383   001822  5803               	subwfb	(___fladd@b+2)^0,w,c
  4384   001824  5004               	movf	(___fladd@b+3)^0,w,c
  4385   001826  0A80               	xorlw	128
  4386   001828  6E09               	movwf	??___fladd^0,c
  4387   00182A  5008               	movf	(___fladd@a+3)^0,w,c
  4388   00182C  0A80               	xorlw	128
  4389   00182E  5809               	subwfb	??___fladd^0,w,c
  4390   001830  B0D8               	btfsc	status,0,c
  4391   001832  EF1D  F00C         	goto	u2471
  4392   001836  EF1F  F00C         	goto	u2470
  4393   00183A                     u2471:
  4394   00183A  EF4A  F00C         	goto	l2657
  4395   00183E                     u2470:
  4396   00183E  5001               	movf	___fladd@b^0,w,c
  4397   001840  5C05               	subwf	___fladd@a^0,w,c
  4398   001842  6E09               	movwf	??___fladd^0,c
  4399   001844  5002               	movf	(___fladd@b+1)^0,w,c
  4400   001846  5806               	subwfb	(___fladd@a+1)^0,w,c
  4401   001848  6E0A               	movwf	(??___fladd+1)^0,c
  4402   00184A  5003               	movf	(___fladd@b+2)^0,w,c
  4403   00184C  5807               	subwfb	(___fladd@a+2)^0,w,c
  4404   00184E  6E0B               	movwf	(??___fladd+2)^0,c
  4405   001850  5004               	movf	(___fladd@b+3)^0,w,c
  4406   001852  5808               	subwfb	(___fladd@a+3)^0,w,c
  4407   001854  6E0C               	movwf	(??___fladd+3)^0,c
  4408   001856  0EFF               	movlw	255
  4409   001858  2409               	addwf	??___fladd^0,w,c
  4410   00185A  6E01               	movwf	___fladd@b^0,c
  4411   00185C  0EFF               	movlw	255
  4412   00185E  200A               	addwfc	(??___fladd+1)^0,w,c
  4413   001860  6E02               	movwf	(___fladd@b+1)^0,c
  4414   001862  0EFF               	movlw	255
  4415   001864  200B               	addwfc	(??___fladd+2)^0,w,c
  4416   001866  6E03               	movwf	(___fladd@b+2)^0,c
  4417   001868  0EFF               	movlw	255
  4418   00186A  200C               	addwfc	(??___fladd+3)^0,w,c
  4419   00186C  6E04               	movwf	(___fladd@b+3)^0,c
  4420   00186E  0E80               	movlw	128
  4421   001870  1A0D               	xorwf	___fladd@signs^0,f,c
  4422   001872  6C10               	negf	___fladd@grs^0,c
  4423   001874  5010               	movf	___fladd@grs^0,w,c
  4424   001876  A4D8               	btfss	status,2,c
  4425   001878  EF40  F00C         	goto	u2481
  4426   00187C  EF42  F00C         	goto	u2480
  4427   001880                     u2481:
  4428   001880  EF52  F00C         	goto	l638
  4429   001884                     u2480:
  4430   001884  0E01               	movlw	1
  4431   001886  2601               	addwf	___fladd@b^0,f,c
  4432   001888  0E00               	movlw	0
  4433   00188A  2202               	addwfc	(___fladd@b+1)^0,f,c
  4434   00188C  2203               	addwfc	(___fladd@b+2)^0,f,c
  4435   00188E  2204               	addwfc	(___fladd@b+3)^0,f,c
  4436   001890  EF52  F00C         	goto	l638
  4437   001894                     l2657:
  4438   001894  5005               	movf	___fladd@a^0,w,c
  4439   001896  5E01               	subwf	___fladd@b^0,f,c
  4440   001898  5006               	movf	(___fladd@a+1)^0,w,c
  4441   00189A  5A02               	subwfb	(___fladd@b+1)^0,f,c
  4442   00189C  5007               	movf	(___fladd@a+2)^0,w,c
  4443   00189E  5A03               	subwfb	(___fladd@b+2)^0,f,c
  4444   0018A0  5008               	movf	(___fladd@a+3)^0,w,c
  4445   0018A2  5A04               	subwfb	(___fladd@b+3)^0,f,c
  4446   0018A4                     l638:
  4447   0018A4  5001               	movf	___fladd@b^0,w,c
  4448   0018A6  1002               	iorwf	(___fladd@b+1)^0,w,c
  4449   0018A8  1003               	iorwf	(___fladd@b+2)^0,w,c
  4450   0018AA  1004               	iorwf	(___fladd@b+3)^0,w,c
  4451   0018AC  A4D8               	btfss	status,2,c
  4452   0018AE  EF5B  F00C         	goto	u2491
  4453   0018B2  EF5D  F00C         	goto	u2490
  4454   0018B6                     u2491:
  4455   0018B6  EF92  F00C         	goto	l2681
  4456   0018BA                     u2490:
  4457   0018BA  5010               	movf	___fladd@grs^0,w,c
  4458   0018BC  A4D8               	btfss	status,2,c
  4459   0018BE  EF63  F00C         	goto	u2501
  4460   0018C2  EF65  F00C         	goto	u2500
  4461   0018C6                     u2501:
  4462   0018C6  EF92  F00C         	goto	l2681
  4463   0018CA                     u2500:
  4464   0018CA  0E00               	movlw	0
  4465   0018CC  6E01               	movwf	?___fladd^0,c
  4466   0018CE  0E00               	movlw	0
  4467   0018D0  6E02               	movwf	(?___fladd+1)^0,c
  4468   0018D2  0E00               	movlw	0
  4469   0018D4  6E03               	movwf	(?___fladd+2)^0,c
  4470   0018D6  0E00               	movlw	0
  4471   0018D8  6E04               	movwf	(?___fladd+3)^0,c
  4472   0018DA  EF2D  F00D         	goto	l630
  4473   0018DE                     l2665:
  4474   0018DE  90D8               	bcf	status,0,c
  4475   0018E0  3601               	rlcf	___fladd@b^0,f,c
  4476   0018E2  3602               	rlcf	(___fladd@b+1)^0,f,c
  4477   0018E4  3603               	rlcf	(___fladd@b+2)^0,f,c
  4478   0018E6  3604               	rlcf	(___fladd@b+3)^0,f,c
  4479   0018E8  AE10               	btfss	___fladd@grs^0,7,c
  4480   0018EA  EF79  F00C         	goto	u2511
  4481   0018EE  EF7B  F00C         	goto	u2510
  4482   0018F2                     u2511:
  4483   0018F2  EF7C  F00C         	goto	l2671
  4484   0018F6                     u2510:
  4485   0018F6  8001               	bsf	___fladd@b^0,0,c
  4486   0018F8                     l2671:
  4487   0018F8  A010               	btfss	___fladd@grs^0,0,c
  4488   0018FA  EF81  F00C         	goto	u2521
  4489   0018FE  EF83  F00C         	goto	u2520
  4490   001902                     u2521:
  4491   001902  EF87  F00C         	goto	l2675
  4492   001906                     u2520:
  4493   001906  80D8               	bsf	status,0,c
  4494   001908  3610               	rlcf	___fladd@grs^0,f,c
  4495   00190A  EF89  F00C         	goto	l2677
  4496   00190E                     l2675:
  4497   00190E  90D8               	bcf	status,0,c
  4498   001910  3610               	rlcf	___fladd@grs^0,f,c
  4499   001912                     l2677:
  4500   001912  500F               	movf	___fladd@bexp^0,w,c
  4501   001914  B4D8               	btfsc	status,2,c
  4502   001916  EF8F  F00C         	goto	u2531
  4503   00191A  EF91  F00C         	goto	u2530
  4504   00191E                     u2531:
  4505   00191E  EF92  F00C         	goto	l2681
  4506   001922                     u2530:
  4507   001922  060F               	decf	___fladd@bexp^0,f,c
  4508   001924                     l2681:
  4509   001924  AE03               	btfss	(___fladd@b+2)^0,7,c
  4510   001926  EF97  F00C         	goto	u2541
  4511   00192A  EF99  F00C         	goto	u2540
  4512   00192E                     u2541:
  4513   00192E  EF6F  F00C         	goto	l2665
  4514   001932                     u2540:
  4515   001932                     l2683:
  4516   001932  0E00               	movlw	0
  4517   001934  6E0E               	movwf	___fladd@aexp^0,c
  4518   001936  AE10               	btfss	___fladd@grs^0,7,c
  4519   001938  EFA0  F00C         	goto	u2551
  4520   00193C  EFA2  F00C         	goto	u2550
  4521   001940                     u2551:
  4522   001940  EFBA  F00C         	goto	l647
  4523   001944                     u2550:
  4524   001944  C010  F009         	movff	___fladd@grs,??___fladd
  4525   001948  0E7F               	movlw	127
  4526   00194A  1609               	andwf	??___fladd^0,f,c
  4527   00194C  B4D8               	btfsc	status,2,c
  4528   00194E  EFAB  F00C         	goto	u2561
  4529   001952  EFAD  F00C         	goto	u2560
  4530   001956                     u2561:
  4531   001956  EFB1  F00C         	goto	l648
  4532   00195A                     u2560:
  4533   00195A                     l2689:
  4534   00195A  0E01               	movlw	1
  4535   00195C  6E0E               	movwf	___fladd@aexp^0,c
  4536   00195E  EFBA  F00C         	goto	l647
  4537   001962                     l648:
  4538   001962  A001               	btfss	___fladd@b^0,0,c
  4539   001964  EFB6  F00C         	goto	u2571
  4540   001968  EFB8  F00C         	goto	u2570
  4541   00196C                     u2571:
  4542   00196C  EFBA  F00C         	goto	l647
  4543   001970                     u2570:
  4544   001970  EFAD  F00C         	goto	l2689
  4545   001974                     l647:
  4546   001974  500E               	movf	___fladd@aexp^0,w,c
  4547   001976  B4D8               	btfsc	status,2,c
  4548   001978  EFC0  F00C         	goto	u2581
  4549   00197C  EFC2  F00C         	goto	u2580
  4550   001980                     u2581:
  4551   001980  EFED  F00C         	goto	l2701
  4552   001984                     u2580:
  4553   001984  0E01               	movlw	1
  4554   001986  2601               	addwf	___fladd@b^0,f,c
  4555   001988  0E00               	movlw	0
  4556   00198A  2202               	addwfc	(___fladd@b+1)^0,f,c
  4557   00198C  2203               	addwfc	(___fladd@b+2)^0,f,c
  4558   00198E  2204               	addwfc	(___fladd@b+3)^0,f,c
  4559   001990  A004               	btfss	(___fladd@b+3)^0,0,c
  4560   001992  EFCD  F00C         	goto	u2591
  4561   001996  EFCF  F00C         	goto	u2590
  4562   00199A                     u2591:
  4563   00199A  EFED  F00C         	goto	l2701
  4564   00199E                     u2590:
  4565   00199E  C001  F009         	movff	___fladd@b,??___fladd
  4566   0019A2  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  4567   0019A6  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  4568   0019AA  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  4569   0019AE  340C               	rlcf	(??___fladd+3)^0,w,c
  4570   0019B0  320C               	rrcf	(??___fladd+3)^0,f,c
  4571   0019B2  320B               	rrcf	(??___fladd+2)^0,f,c
  4572   0019B4  320A               	rrcf	(??___fladd+1)^0,f,c
  4573   0019B6  3209               	rrcf	??___fladd^0,f,c
  4574   0019B8  C009  F001         	movff	??___fladd,___fladd@b
  4575   0019BC  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  4576   0019C0  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  4577   0019C4  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  4578   0019C8  280F               	incf	___fladd@bexp^0,w,c
  4579   0019CA  B4D8               	btfsc	status,2,c
  4580   0019CC  EFEA  F00C         	goto	u2601
  4581   0019D0  EFEC  F00C         	goto	u2600
  4582   0019D4                     u2601:
  4583   0019D4  EFED  F00C         	goto	l2701
  4584   0019D8                     u2600:
  4585   0019D8  2A0F               	incf	___fladd@bexp^0,f,c
  4586   0019DA                     l2701:
  4587   0019DA  280F               	incf	___fladd@bexp^0,w,c
  4588   0019DC  B4D8               	btfsc	status,2,c
  4589   0019DE  EFF3  F00C         	goto	u2611
  4590   0019E2  EFF5  F00C         	goto	u2610
  4591   0019E6                     u2611:
  4592   0019E6  EFFD  F00C         	goto	l2705
  4593   0019EA                     u2610:
  4594   0019EA  500F               	movf	___fladd@bexp^0,w,c
  4595   0019EC  A4D8               	btfss	status,2,c
  4596   0019EE  EFFB  F00C         	goto	u2621
  4597   0019F2  EFFD  F00C         	goto	u2620
  4598   0019F6                     u2621:
  4599   0019F6  EF0F  F00D         	goto	l2709
  4600   0019FA                     u2620:
  4601   0019FA                     l2705:
  4602   0019FA  0E00               	movlw	0
  4603   0019FC  6E01               	movwf	___fladd@b^0,c
  4604   0019FE  0E00               	movlw	0
  4605   001A00  6E02               	movwf	(___fladd@b+1)^0,c
  4606   001A02  0E00               	movlw	0
  4607   001A04  6E03               	movwf	(___fladd@b+2)^0,c
  4608   001A06  0E00               	movlw	0
  4609   001A08  6E04               	movwf	(___fladd@b+3)^0,c
  4610   001A0A  500F               	movf	___fladd@bexp^0,w,c
  4611   001A0C  A4D8               	btfss	status,2,c
  4612   001A0E  EF0B  F00D         	goto	u2631
  4613   001A12  EF0D  F00D         	goto	u2630
  4614   001A16                     u2631:
  4615   001A16  EF0F  F00D         	goto	l2709
  4616   001A1A                     u2630:
  4617   001A1A  0E00               	movlw	0
  4618   001A1C  6E0D               	movwf	___fladd@signs^0,c
  4619   001A1E                     l2709:
  4620   001A1E  A00F               	btfss	___fladd@bexp^0,0,c
  4621   001A20  EF14  F00D         	goto	u2641
  4622   001A24  EF16  F00D         	goto	u2640
  4623   001A28                     u2641:
  4624   001A28  EF19  F00D         	goto	l2713
  4625   001A2C                     u2640:
  4626   001A2C  8E03               	bsf	(___fladd@b+2)^0,7,c
  4627   001A2E  EF1A  F00D         	goto	l2715
  4628   001A32                     l2713:
  4629   001A32  9E03               	bcf	(___fladd@b+2)^0,7,c
  4630   001A34                     l2715:
  4631   001A34  90D8               	bcf	status,0,c
  4632   001A36  300F               	rrcf	___fladd@bexp^0,w,c
  4633   001A38  6E04               	movwf	(___fladd@b+3)^0,c
  4634   001A3A  AE0D               	btfss	___fladd@signs^0,7,c
  4635   001A3C  EF22  F00D         	goto	u2651
  4636   001A40  EF24  F00D         	goto	u2650
  4637   001A44                     u2651:
  4638   001A44  EF25  F00D         	goto	l2721
  4639   001A48                     u2650:
  4640   001A48  8E04               	bsf	(___fladd@b+3)^0,7,c
  4641   001A4A                     l2721:
  4642   001A4A  C001  F001         	movff	___fladd@b,?___fladd
  4643   001A4E  C002  F002         	movff	___fladd@b+1,?___fladd+1
  4644   001A52  C003  F003         	movff	___fladd@b+2,?___fladd+2
  4645   001A56  C004  F004         	movff	___fladd@b+3,?___fladd+3
  4646   001A5A                     l630:
  4647   001A5A  0012               	return		;funcret
  4648   001A5C                     __end_of___fladd:
  4649                           	callstack 0
  4650                           
  4651 ;; *************** function ___flneg *****************
  4652 ;; Defined at:
  4653 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  4654 ;; Parameters:    Size  Location     Type
  4655 ;;  f1              4    0[COMRAM] unsigned char 
  4656 ;; Auto vars:     Size  Location     Type
  4657 ;;		None
  4658 ;; Return value:  Size  Location     Type
  4659 ;;                  4    0[COMRAM] unsigned char 
  4660 ;; Registers used:
  4661 ;;		wreg, status,2, status,0
  4662 ;; Tracked objects:
  4663 ;;		On entry : 0/0
  4664 ;;		On exit  : 0/0
  4665 ;;		Unchanged: 0/0
  4666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4667 ;;      Params:         4       0       0       0       0       0       0
  4668 ;;      Locals:         0       0       0       0       0       0       0
  4669 ;;      Temps:          0       0       0       0       0       0       0
  4670 ;;      Totals:         4       0       0       0       0       0       0
  4671 ;;Total ram usage:        4 bytes
  4672 ;; Hardware stack levels used: 1
  4673 ;; This function calls:
  4674 ;;		Nothing
  4675 ;; This function is called by:
  4676 ;;		_efgtoa
  4677 ;; This function uses a non-reentrant model
  4678 ;;
  4679                           
  4680                           	psect	text14
  4681   003578                     __ptext14:
  4682                           	callstack 0
  4683   003578                     ___flneg:
  4684                           	callstack 25
  4685   003578  5001               	movf	___flneg@f1^0,w,c
  4686   00357A  1002               	iorwf	(___flneg@f1+1)^0,w,c
  4687   00357C  1003               	iorwf	(___flneg@f1+2)^0,w,c
  4688   00357E  1004               	iorwf	(___flneg@f1+3)^0,w,c
  4689   003580  B4D8               	btfsc	status,2,c
  4690   003582  EFC5  F01A         	goto	u3301
  4691   003586  EFC7  F01A         	goto	u3300
  4692   00358A                     u3301:
  4693   00358A  EFCF  F01A         	goto	l3135
  4694   00358E                     u3300:
  4695   00358E  0E00               	movlw	0
  4696   003590  1A01               	xorwf	___flneg@f1^0,f,c
  4697   003592  0E00               	movlw	0
  4698   003594  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  4699   003596  0E00               	movlw	0
  4700   003598  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  4701   00359A  0E80               	movlw	128
  4702   00359C  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  4703   00359E                     l3135:
  4704   00359E  C001  F001         	movff	___flneg@f1,?___flneg
  4705   0035A2  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  4706   0035A6  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  4707   0035AA  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  4708   0035AE  0012               	return		;funcret
  4709   0035B0                     __end_of___flneg:
  4710                           	callstack 0
  4711                           
  4712 ;; *************** function ___flge *****************
  4713 ;; Defined at:
  4714 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  4715 ;; Parameters:    Size  Location     Type
  4716 ;;  ff1             4   39[COMRAM] unsigned char 
  4717 ;;  ff2             4   43[COMRAM] unsigned char 
  4718 ;; Auto vars:     Size  Location     Type
  4719 ;;		None
  4720 ;; Return value:  Size  Location     Type
  4721 ;;		None               void
  4722 ;; Registers used:
  4723 ;;		wreg, status,2, status,0
  4724 ;; Tracked objects:
  4725 ;;		On entry : 0/0
  4726 ;;		On exit  : 0/0
  4727 ;;		Unchanged: 0/0
  4728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4729 ;;      Params:         8       0       0       0       0       0       0
  4730 ;;      Locals:         0       0       0       0       0       0       0
  4731 ;;      Temps:          4       0       0       0       0       0       0
  4732 ;;      Totals:        12       0       0       0       0       0       0
  4733 ;;Total ram usage:       12 bytes
  4734 ;; Hardware stack levels used: 1
  4735 ;; This function calls:
  4736 ;;		Nothing
  4737 ;; This function is called by:
  4738 ;;		_efgtoa
  4739 ;; This function uses a non-reentrant model
  4740 ;;
  4741                           
  4742                           	psect	text15
  4743   002DD8                     __ptext15:
  4744                           	callstack 0
  4745   002DD8                     ___flge:
  4746                           	callstack 25
  4747   002DD8  0E00               	movlw	0
  4748   002DDA  1428               	andwf	___flge@ff1^0,w,c
  4749   002DDC  6E30               	movwf	??___flge^0,c
  4750   002DDE  0E00               	movlw	0
  4751   002DE0  1429               	andwf	(___flge@ff1+1)^0,w,c
  4752   002DE2  6E31               	movwf	(??___flge+1)^0,c
  4753   002DE4  0E80               	movlw	128
  4754   002DE6  142A               	andwf	(___flge@ff1+2)^0,w,c
  4755   002DE8  6E32               	movwf	(??___flge+2)^0,c
  4756   002DEA  0E7F               	movlw	127
  4757   002DEC  142B               	andwf	(___flge@ff1+3)^0,w,c
  4758   002DEE  6E33               	movwf	(??___flge+3)^0,c
  4759   002DF0  5030               	movf	??___flge^0,w,c
  4760   002DF2  1031               	iorwf	(??___flge+1)^0,w,c
  4761   002DF4  1032               	iorwf	(??___flge+2)^0,w,c
  4762   002DF6  1033               	iorwf	(??___flge+3)^0,w,c
  4763   002DF8  A4D8               	btfss	status,2,c
  4764   002DFA  EF01  F017         	goto	u3251
  4765   002DFE  EF03  F017         	goto	u3250
  4766   002E02                     u3251:
  4767   002E02  EF0B  F017         	goto	l3113
  4768   002E06                     u3250:
  4769   002E06  0E00               	movlw	0
  4770   002E08  6E28               	movwf	___flge@ff1^0,c
  4771   002E0A  0E00               	movlw	0
  4772   002E0C  6E29               	movwf	(___flge@ff1+1)^0,c
  4773   002E0E  0E00               	movlw	0
  4774   002E10  6E2A               	movwf	(___flge@ff1+2)^0,c
  4775   002E12  0E00               	movlw	0
  4776   002E14  6E2B               	movwf	(___flge@ff1+3)^0,c
  4777   002E16                     l3113:
  4778   002E16  0E00               	movlw	0
  4779   002E18  142C               	andwf	___flge@ff2^0,w,c
  4780   002E1A  6E30               	movwf	??___flge^0,c
  4781   002E1C  0E00               	movlw	0
  4782   002E1E  142D               	andwf	(___flge@ff2+1)^0,w,c
  4783   002E20  6E31               	movwf	(??___flge+1)^0,c
  4784   002E22  0E80               	movlw	128
  4785   002E24  142E               	andwf	(___flge@ff2+2)^0,w,c
  4786   002E26  6E32               	movwf	(??___flge+2)^0,c
  4787   002E28  0E7F               	movlw	127
  4788   002E2A  142F               	andwf	(___flge@ff2+3)^0,w,c
  4789   002E2C  6E33               	movwf	(??___flge+3)^0,c
  4790   002E2E  5030               	movf	??___flge^0,w,c
  4791   002E30  1031               	iorwf	(??___flge+1)^0,w,c
  4792   002E32  1032               	iorwf	(??___flge+2)^0,w,c
  4793   002E34  1033               	iorwf	(??___flge+3)^0,w,c
  4794   002E36  A4D8               	btfss	status,2,c
  4795   002E38  EF20  F017         	goto	u3261
  4796   002E3C  EF22  F017         	goto	u3260
  4797   002E40                     u3261:
  4798   002E40  EF2A  F017         	goto	l3117
  4799   002E44                     u3260:
  4800   002E44  0E00               	movlw	0
  4801   002E46  6E2C               	movwf	___flge@ff2^0,c
  4802   002E48  0E00               	movlw	0
  4803   002E4A  6E2D               	movwf	(___flge@ff2+1)^0,c
  4804   002E4C  0E00               	movlw	0
  4805   002E4E  6E2E               	movwf	(___flge@ff2+2)^0,c
  4806   002E50  0E00               	movlw	0
  4807   002E52  6E2F               	movwf	(___flge@ff2+3)^0,c
  4808   002E54                     l3117:
  4809   002E54  AE2B               	btfss	(___flge@ff1+3)^0,7,c
  4810   002E56  EF2F  F017         	goto	u3271
  4811   002E5A  EF31  F017         	goto	u3270
  4812   002E5E                     u3271:
  4813   002E5E  EF3A  F017         	goto	l3121
  4814   002E62                     u3270:
  4815   002E62  6C28               	negf	___flge@ff1^0,c
  4816   002E64  1E29               	comf	(___flge@ff1+1)^0,f,c
  4817   002E66  B0D8               	btfsc	status,0,c
  4818   002E68  2A29               	incf	(___flge@ff1+1)^0,f,c
  4819   002E6A  1E2A               	comf	(___flge@ff1+2)^0,f,c
  4820   002E6C  B0D8               	btfsc	status,0,c
  4821   002E6E  2A2A               	incf	(___flge@ff1+2)^0,f,c
  4822   002E70  0E80               	movlw	128
  4823   002E72  562B               	subfwb	(___flge@ff1+3)^0,f,c
  4824   002E74                     l3121:
  4825   002E74  AE2F               	btfss	(___flge@ff2+3)^0,7,c
  4826   002E76  EF3F  F017         	goto	u3281
  4827   002E7A  EF41  F017         	goto	u3280
  4828   002E7E                     u3281:
  4829   002E7E  EF4A  F017         	goto	l358
  4830   002E82                     u3280:
  4831   002E82  6C2C               	negf	___flge@ff2^0,c
  4832   002E84  1E2D               	comf	(___flge@ff2+1)^0,f,c
  4833   002E86  B0D8               	btfsc	status,0,c
  4834   002E88  2A2D               	incf	(___flge@ff2+1)^0,f,c
  4835   002E8A  1E2E               	comf	(___flge@ff2+2)^0,f,c
  4836   002E8C  B0D8               	btfsc	status,0,c
  4837   002E8E  2A2E               	incf	(___flge@ff2+2)^0,f,c
  4838   002E90  0E80               	movlw	128
  4839   002E92  562F               	subfwb	(___flge@ff2+3)^0,f,c
  4840   002E94                     l358:
  4841   002E94  0E00               	movlw	0
  4842   002E96  1A28               	xorwf	___flge@ff1^0,f,c
  4843   002E98  0E00               	movlw	0
  4844   002E9A  1A29               	xorwf	(___flge@ff1+1)^0,f,c
  4845   002E9C  0E00               	movlw	0
  4846   002E9E  1A2A               	xorwf	(___flge@ff1+2)^0,f,c
  4847   002EA0  0E80               	movlw	128
  4848   002EA2  1A2B               	xorwf	(___flge@ff1+3)^0,f,c
  4849   002EA4  0E00               	movlw	0
  4850   002EA6  1A2C               	xorwf	___flge@ff2^0,f,c
  4851   002EA8  0E00               	movlw	0
  4852   002EAA  1A2D               	xorwf	(___flge@ff2+1)^0,f,c
  4853   002EAC  0E00               	movlw	0
  4854   002EAE  1A2E               	xorwf	(___flge@ff2+2)^0,f,c
  4855   002EB0  0E80               	movlw	128
  4856   002EB2  1A2F               	xorwf	(___flge@ff2+3)^0,f,c
  4857   002EB4  502C               	movf	___flge@ff2^0,w,c
  4858   002EB6  5C28               	subwf	___flge@ff1^0,w,c
  4859   002EB8  502D               	movf	(___flge@ff2+1)^0,w,c
  4860   002EBA  5829               	subwfb	(___flge@ff1+1)^0,w,c
  4861   002EBC  502E               	movf	(___flge@ff2+2)^0,w,c
  4862   002EBE  582A               	subwfb	(___flge@ff1+2)^0,w,c
  4863   002EC0  502F               	movf	(___flge@ff2+3)^0,w,c
  4864   002EC2  582B               	subwfb	(___flge@ff1+3)^0,w,c
  4865   002EC4  B0D8               	btfsc	status,0,c
  4866   002EC6  EF67  F017         	goto	u3291
  4867   002ECA  EF69  F017         	goto	u3290
  4868   002ECE                     u3291:
  4869   002ECE  EF6C  F017         	goto	l3127
  4870   002ED2                     u3290:
  4871   002ED2  90D8               	bcf	status,0,c
  4872   002ED4  EF6D  F017         	goto	l363
  4873   002ED8                     l3127:
  4874   002ED8  80D8               	bsf	status,0,c
  4875   002EDA                     l363:
  4876   002EDA  0012               	return		;funcret
  4877   002EDC                     __end_of___flge:
  4878                           	callstack 0
  4879                           
  4880 ;; *************** function ___fleq *****************
  4881 ;; Defined at:
  4882 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
  4883 ;; Parameters:    Size  Location     Type
  4884 ;;  ff1             4    0[COMRAM] unsigned char 
  4885 ;;  ff2             4    4[COMRAM] unsigned char 
  4886 ;; Auto vars:     Size  Location     Type
  4887 ;;		None
  4888 ;; Return value:  Size  Location     Type
  4889 ;;		None               void
  4890 ;; Registers used:
  4891 ;;		wreg, status,2, status,0
  4892 ;; Tracked objects:
  4893 ;;		On entry : 0/0
  4894 ;;		On exit  : 0/0
  4895 ;;		Unchanged: 0/0
  4896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4897 ;;      Params:         8       0       0       0       0       0       0
  4898 ;;      Locals:         0       0       0       0       0       0       0
  4899 ;;      Temps:          4       0       0       0       0       0       0
  4900 ;;      Totals:        12       0       0       0       0       0       0
  4901 ;;Total ram usage:       12 bytes
  4902 ;; Hardware stack levels used: 1
  4903 ;; This function calls:
  4904 ;;		Nothing
  4905 ;; This function is called by:
  4906 ;;		_efgtoa
  4907 ;; This function uses a non-reentrant model
  4908 ;;
  4909                           
  4910                           	psect	text16
  4911   0030A4                     __ptext16:
  4912                           	callstack 0
  4913   0030A4                     ___fleq:
  4914                           	callstack 25
  4915   0030A4  0E00               	movlw	0
  4916   0030A6  1401               	andwf	___fleq@ff1^0,w,c
  4917   0030A8  6E09               	movwf	??___fleq^0,c
  4918   0030AA  0E00               	movlw	0
  4919   0030AC  1402               	andwf	(___fleq@ff1+1)^0,w,c
  4920   0030AE  6E0A               	movwf	(??___fleq+1)^0,c
  4921   0030B0  0E80               	movlw	128
  4922   0030B2  1403               	andwf	(___fleq@ff1+2)^0,w,c
  4923   0030B4  6E0B               	movwf	(??___fleq+2)^0,c
  4924   0030B6  0E7F               	movlw	127
  4925   0030B8  1404               	andwf	(___fleq@ff1+3)^0,w,c
  4926   0030BA  6E0C               	movwf	(??___fleq+3)^0,c
  4927   0030BC  5009               	movf	??___fleq^0,w,c
  4928   0030BE  100A               	iorwf	(??___fleq+1)^0,w,c
  4929   0030C0  100B               	iorwf	(??___fleq+2)^0,w,c
  4930   0030C2  100C               	iorwf	(??___fleq+3)^0,w,c
  4931   0030C4  A4D8               	btfss	status,2,c
  4932   0030C6  EF67  F018         	goto	u3221
  4933   0030CA  EF69  F018         	goto	u3220
  4934   0030CE                     u3221:
  4935   0030CE  EF71  F018         	goto	l3097
  4936   0030D2                     u3220:
  4937   0030D2  0E00               	movlw	0
  4938   0030D4  6E01               	movwf	___fleq@ff1^0,c
  4939   0030D6  0E00               	movlw	0
  4940   0030D8  6E02               	movwf	(___fleq@ff1+1)^0,c
  4941   0030DA  0E00               	movlw	0
  4942   0030DC  6E03               	movwf	(___fleq@ff1+2)^0,c
  4943   0030DE  0E00               	movlw	0
  4944   0030E0  6E04               	movwf	(___fleq@ff1+3)^0,c
  4945   0030E2                     l3097:
  4946   0030E2  0E00               	movlw	0
  4947   0030E4  1405               	andwf	___fleq@ff2^0,w,c
  4948   0030E6  6E09               	movwf	??___fleq^0,c
  4949   0030E8  0E00               	movlw	0
  4950   0030EA  1406               	andwf	(___fleq@ff2+1)^0,w,c
  4951   0030EC  6E0A               	movwf	(??___fleq+1)^0,c
  4952   0030EE  0E80               	movlw	128
  4953   0030F0  1407               	andwf	(___fleq@ff2+2)^0,w,c
  4954   0030F2  6E0B               	movwf	(??___fleq+2)^0,c
  4955   0030F4  0E7F               	movlw	127
  4956   0030F6  1408               	andwf	(___fleq@ff2+3)^0,w,c
  4957   0030F8  6E0C               	movwf	(??___fleq+3)^0,c
  4958   0030FA  5009               	movf	??___fleq^0,w,c
  4959   0030FC  100A               	iorwf	(??___fleq+1)^0,w,c
  4960   0030FE  100B               	iorwf	(??___fleq+2)^0,w,c
  4961   003100  100C               	iorwf	(??___fleq+3)^0,w,c
  4962   003102  A4D8               	btfss	status,2,c
  4963   003104  EF86  F018         	goto	u3231
  4964   003108  EF88  F018         	goto	u3230
  4965   00310C                     u3231:
  4966   00310C  EF90  F018         	goto	l3101
  4967   003110                     u3230:
  4968   003110  0E00               	movlw	0
  4969   003112  6E05               	movwf	___fleq@ff2^0,c
  4970   003114  0E00               	movlw	0
  4971   003116  6E06               	movwf	(___fleq@ff2+1)^0,c
  4972   003118  0E00               	movlw	0
  4973   00311A  6E07               	movwf	(___fleq@ff2+2)^0,c
  4974   00311C  0E00               	movlw	0
  4975   00311E  6E08               	movwf	(___fleq@ff2+3)^0,c
  4976   003120                     l3101:
  4977   003120  5005               	movf	___fleq@ff2^0,w,c
  4978   003122  1801               	xorwf	___fleq@ff1^0,w,c
  4979   003124  E10F               	bnz	u3240
  4980   003126  5006               	movf	(___fleq@ff2+1)^0,w,c
  4981   003128  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  4982   00312A  E10C               	bnz	u3240
  4983   00312C  5007               	movf	(___fleq@ff2+2)^0,w,c
  4984   00312E  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  4985   003130  E109               	bnz	u3240
  4986   003132  5008               	movf	(___fleq@ff2+3)^0,w,c
  4987   003134  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  4988   003136  B4D8               	btfsc	status,2,c
  4989   003138  EFA0  F018         	goto	u3241
  4990   00313C  EFA2  F018         	goto	u3240
  4991   003140                     u3241:
  4992   003140  EFA5  F018         	goto	l3105
  4993   003144                     u3240:
  4994   003144  90D8               	bcf	status,0,c
  4995   003146  EFA6  F018         	goto	l352
  4996   00314A                     l3105:
  4997   00314A  80D8               	bsf	status,0,c
  4998   00314C                     l352:
  4999   00314C  0012               	return		;funcret
  5000   00314E                     __end_of___fleq:
  5001                           	callstack 0
  5002                           
  5003 ;; *************** function ___fldiv *****************
  5004 ;; Defined at:
  5005 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  5006 ;; Parameters:    Size  Location     Type
  5007 ;;  b               4    0[COMRAM] unsigned char 
  5008 ;;  a               4    4[COMRAM] unsigned char 
  5009 ;; Auto vars:     Size  Location     Type
  5010 ;;  grs             4   19[COMRAM] unsigned long 
  5011 ;;  rem             4   12[COMRAM] unsigned long 
  5012 ;;  new_exp         2   17[COMRAM] short 
  5013 ;;  aexp            1   24[COMRAM] unsigned char 
  5014 ;;  bexp            1   23[COMRAM] unsigned char 
  5015 ;;  sign            1   16[COMRAM] unsigned char 
  5016 ;; Return value:  Size  Location     Type
  5017 ;;                  4    0[COMRAM] unsigned char 
  5018 ;; Registers used:
  5019 ;;		wreg, status,2, status,0
  5020 ;; Tracked objects:
  5021 ;;		On entry : 0/0
  5022 ;;		On exit  : 0/0
  5023 ;;		Unchanged: 0/0
  5024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5025 ;;      Params:         8       0       0       0       0       0       0
  5026 ;;      Locals:        13       0       0       0       0       0       0
  5027 ;;      Temps:          4       0       0       0       0       0       0
  5028 ;;      Totals:        25       0       0       0       0       0       0
  5029 ;;Total ram usage:       25 bytes
  5030 ;; Hardware stack levels used: 1
  5031 ;; This function calls:
  5032 ;;		Nothing
  5033 ;; This function is called by:
  5034 ;;		_efgtoa
  5035 ;; This function uses a non-reentrant model
  5036 ;;
  5037                           
  5038                           	psect	text17
  5039   001E86                     __ptext17:
  5040                           	callstack 0
  5041   001E86                     ___fldiv:
  5042                           	callstack 25
  5043   001E86  5004               	movf	(___fldiv@b+3)^0,w,c
  5044   001E88  0B80               	andlw	128
  5045   001E8A  6E11               	movwf	___fldiv@sign^0,c
  5046   001E8C  5004               	movf	(___fldiv@b+3)^0,w,c
  5047   001E8E  2404               	addwf	(___fldiv@b+3)^0,w,c
  5048   001E90  6E18               	movwf	___fldiv@bexp^0,c
  5049   001E92  AE03               	btfss	(___fldiv@b+2)^0,7,c
  5050   001E94  EF4E  F00F         	goto	u2801
  5051   001E98  EF50  F00F         	goto	u2800
  5052   001E9C                     u2801:
  5053   001E9C  EF51  F00F         	goto	l2825
  5054   001EA0                     u2800:
  5055   001EA0  8018               	bsf	___fldiv@bexp^0,0,c
  5056   001EA2                     l2825:
  5057   001EA2  5018               	movf	___fldiv@bexp^0,w,c
  5058   001EA4  B4D8               	btfsc	status,2,c
  5059   001EA6  EF57  F00F         	goto	u2811
  5060   001EAA  EF59  F00F         	goto	u2810
  5061   001EAE                     u2811:
  5062   001EAE  EF6E  F00F         	goto	l2835
  5063   001EB2                     u2810:
  5064   001EB2  2818               	incf	___fldiv@bexp^0,w,c
  5065   001EB4  A4D8               	btfss	status,2,c
  5066   001EB6  EF5F  F00F         	goto	u2821
  5067   001EBA  EF61  F00F         	goto	u2820
  5068   001EBE                     u2821:
  5069   001EBE  EF69  F00F         	goto	l2831
  5070   001EC2                     u2820:
  5071   001EC2  0E00               	movlw	0
  5072   001EC4  6E01               	movwf	___fldiv@b^0,c
  5073   001EC6  0E00               	movlw	0
  5074   001EC8  6E02               	movwf	(___fldiv@b+1)^0,c
  5075   001ECA  0E00               	movlw	0
  5076   001ECC  6E03               	movwf	(___fldiv@b+2)^0,c
  5077   001ECE  0E00               	movlw	0
  5078   001ED0  6E04               	movwf	(___fldiv@b+3)^0,c
  5079   001ED2                     l2831:
  5080   001ED2  8E03               	bsf	(___fldiv@b+2)^0,7,c
  5081   001ED4  0E00               	movlw	0
  5082   001ED6  6E04               	movwf	(___fldiv@b+3)^0,c
  5083   001ED8  EF76  F00F         	goto	l2837
  5084   001EDC                     l2835:
  5085   001EDC  0E00               	movlw	0
  5086   001EDE  6E01               	movwf	___fldiv@b^0,c
  5087   001EE0  0E00               	movlw	0
  5088   001EE2  6E02               	movwf	(___fldiv@b+1)^0,c
  5089   001EE4  0E00               	movlw	0
  5090   001EE6  6E03               	movwf	(___fldiv@b+2)^0,c
  5091   001EE8  0E00               	movlw	0
  5092   001EEA  6E04               	movwf	(___fldiv@b+3)^0,c
  5093   001EEC                     l2837:
  5094   001EEC  5008               	movf	(___fldiv@a+3)^0,w,c
  5095   001EEE  0B80               	andlw	128
  5096   001EF0  1A11               	xorwf	___fldiv@sign^0,f,c
  5097   001EF2  5008               	movf	(___fldiv@a+3)^0,w,c
  5098   001EF4  2408               	addwf	(___fldiv@a+3)^0,w,c
  5099   001EF6  6E19               	movwf	___fldiv@aexp^0,c
  5100   001EF8  AE07               	btfss	(___fldiv@a+2)^0,7,c
  5101   001EFA  EF81  F00F         	goto	u2831
  5102   001EFE  EF83  F00F         	goto	u2830
  5103   001F02                     u2831:
  5104   001F02  EF84  F00F         	goto	l2845
  5105   001F06                     u2830:
  5106   001F06  8019               	bsf	___fldiv@aexp^0,0,c
  5107   001F08                     l2845:
  5108   001F08  5019               	movf	___fldiv@aexp^0,w,c
  5109   001F0A  B4D8               	btfsc	status,2,c
  5110   001F0C  EF8A  F00F         	goto	u2841
  5111   001F10  EF8C  F00F         	goto	u2840
  5112   001F14                     u2841:
  5113   001F14  EFA1  F00F         	goto	l2855
  5114   001F18                     u2840:
  5115   001F18  2819               	incf	___fldiv@aexp^0,w,c
  5116   001F1A  A4D8               	btfss	status,2,c
  5117   001F1C  EF92  F00F         	goto	u2851
  5118   001F20  EF94  F00F         	goto	u2850
  5119   001F24                     u2851:
  5120   001F24  EF9C  F00F         	goto	l2851
  5121   001F28                     u2850:
  5122   001F28  0E00               	movlw	0
  5123   001F2A  6E05               	movwf	___fldiv@a^0,c
  5124   001F2C  0E00               	movlw	0
  5125   001F2E  6E06               	movwf	(___fldiv@a+1)^0,c
  5126   001F30  0E00               	movlw	0
  5127   001F32  6E07               	movwf	(___fldiv@a+2)^0,c
  5128   001F34  0E00               	movlw	0
  5129   001F36  6E08               	movwf	(___fldiv@a+3)^0,c
  5130   001F38                     l2851:
  5131   001F38  8E07               	bsf	(___fldiv@a+2)^0,7,c
  5132   001F3A  0E00               	movlw	0
  5133   001F3C  6E08               	movwf	(___fldiv@a+3)^0,c
  5134   001F3E  EFA9  F00F         	goto	l2857
  5135   001F42                     l2855:
  5136   001F42  0E00               	movlw	0
  5137   001F44  6E05               	movwf	___fldiv@a^0,c
  5138   001F46  0E00               	movlw	0
  5139   001F48  6E06               	movwf	(___fldiv@a+1)^0,c
  5140   001F4A  0E00               	movlw	0
  5141   001F4C  6E07               	movwf	(___fldiv@a+2)^0,c
  5142   001F4E  0E00               	movlw	0
  5143   001F50  6E08               	movwf	(___fldiv@a+3)^0,c
  5144   001F52                     l2857:
  5145   001F52  5005               	movf	___fldiv@a^0,w,c
  5146   001F54  1006               	iorwf	(___fldiv@a+1)^0,w,c
  5147   001F56  1007               	iorwf	(___fldiv@a+2)^0,w,c
  5148   001F58  1008               	iorwf	(___fldiv@a+3)^0,w,c
  5149   001F5A  A4D8               	btfss	status,2,c
  5150   001F5C  EFB2  F00F         	goto	u2861
  5151   001F60  EFB4  F00F         	goto	u2860
  5152   001F64                     u2861:
  5153   001F64  EFCC  F00F         	goto	l2869
  5154   001F68                     u2860:
  5155   001F68  0E00               	movlw	0
  5156   001F6A  6E01               	movwf	___fldiv@b^0,c
  5157   001F6C  0E00               	movlw	0
  5158   001F6E  6E02               	movwf	(___fldiv@b+1)^0,c
  5159   001F70  0E00               	movlw	0
  5160   001F72  6E03               	movwf	(___fldiv@b+2)^0,c
  5161   001F74  0E00               	movlw	0
  5162   001F76  6E04               	movwf	(___fldiv@b+3)^0,c
  5163   001F78  0E80               	movlw	128
  5164   001F7A  1203               	iorwf	(___fldiv@b+2)^0,f,c
  5165   001F7C  0E7F               	movlw	127
  5166   001F7E  1204               	iorwf	(___fldiv@b+3)^0,f,c
  5167   001F80                     l2863:
  5168   001F80  5011               	movf	___fldiv@sign^0,w,c
  5169   001F82  1204               	iorwf	(___fldiv@b+3)^0,f,c
  5170   001F84  C001  F001         	movff	___fldiv@b,?___fldiv
  5171   001F88  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  5172   001F8C  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  5173   001F90  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  5174   001F94  EF0F  F011         	goto	l675
  5175   001F98                     l2869:
  5176   001F98  5018               	movf	___fldiv@bexp^0,w,c
  5177   001F9A  A4D8               	btfss	status,2,c
  5178   001F9C  EFD2  F00F         	goto	u2871
  5179   001FA0  EFD4  F00F         	goto	u2870
  5180   001FA4                     u2871:
  5181   001FA4  EFDE  F00F         	goto	l2877
  5182   001FA8                     u2870:
  5183   001FA8  0E00               	movlw	0
  5184   001FAA  6E01               	movwf	?___fldiv^0,c
  5185   001FAC  0E00               	movlw	0
  5186   001FAE  6E02               	movwf	(?___fldiv+1)^0,c
  5187   001FB0  0E00               	movlw	0
  5188   001FB2  6E03               	movwf	(?___fldiv+2)^0,c
  5189   001FB4  0E00               	movlw	0
  5190   001FB6  6E04               	movwf	(?___fldiv+3)^0,c
  5191   001FB8  EF0F  F011         	goto	l675
  5192   001FBC                     l2877:
  5193   001FBC  5019               	movf	___fldiv@aexp^0,w,c
  5194   001FBE  C018  F009         	movff	___fldiv@bexp,??___fldiv
  5195   001FC2  6A0A               	clrf	(??___fldiv+1)^0,c
  5196   001FC4  5E09               	subwf	??___fldiv^0,f,c
  5197   001FC6  0E00               	movlw	0
  5198   001FC8  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  5199   001FCA  0E7F               	movlw	127
  5200   001FCC  2409               	addwf	??___fldiv^0,w,c
  5201   001FCE  6E12               	movwf	___fldiv@new_exp^0,c
  5202   001FD0  0E00               	movlw	0
  5203   001FD2  200A               	addwfc	(??___fldiv+1)^0,w,c
  5204   001FD4  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  5205   001FD6  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  5206   001FDA  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  5207   001FDE  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  5208   001FE2  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  5209   001FE6  0E00               	movlw	0
  5210   001FE8  6E01               	movwf	___fldiv@b^0,c
  5211   001FEA  0E00               	movlw	0
  5212   001FEC  6E02               	movwf	(___fldiv@b+1)^0,c
  5213   001FEE  0E00               	movlw	0
  5214   001FF0  6E03               	movwf	(___fldiv@b+2)^0,c
  5215   001FF2  0E00               	movlw	0
  5216   001FF4  6E04               	movwf	(___fldiv@b+3)^0,c
  5217   001FF6  0E00               	movlw	0
  5218   001FF8  6E14               	movwf	___fldiv@grs^0,c
  5219   001FFA  0E00               	movlw	0
  5220   001FFC  6E15               	movwf	(___fldiv@grs+1)^0,c
  5221   001FFE  0E00               	movlw	0
  5222   002000  6E16               	movwf	(___fldiv@grs+2)^0,c
  5223   002002  0E00               	movlw	0
  5224   002004  6E17               	movwf	(___fldiv@grs+3)^0,c
  5225   002006  0E00               	movlw	0
  5226   002008  6E19               	movwf	___fldiv@aexp^0,c
  5227   00200A  EF3F  F010         	goto	l677
  5228   00200E                     l2887:
  5229   00200E  5019               	movf	___fldiv@aexp^0,w,c
  5230   002010  B4D8               	btfsc	status,2,c
  5231   002012  EF0D  F010         	goto	u2881
  5232   002016  EF0F  F010         	goto	u2880
  5233   00201A                     u2881:
  5234   00201A  EF26  F010         	goto	l2895
  5235   00201E                     u2880:
  5236   00201E  90D8               	bcf	status,0,c
  5237   002020  360D               	rlcf	___fldiv@rem^0,f,c
  5238   002022  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  5239   002024  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  5240   002026  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  5241   002028  90D8               	bcf	status,0,c
  5242   00202A  3601               	rlcf	___fldiv@b^0,f,c
  5243   00202C  3602               	rlcf	(___fldiv@b+1)^0,f,c
  5244   00202E  3603               	rlcf	(___fldiv@b+2)^0,f,c
  5245   002030  3604               	rlcf	(___fldiv@b+3)^0,f,c
  5246   002032  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  5247   002034  EF1E  F010         	goto	u2891
  5248   002038  EF20  F010         	goto	u2890
  5249   00203C                     u2891:
  5250   00203C  EF21  F010         	goto	l680
  5251   002040                     u2890:
  5252   002040  8001               	bsf	___fldiv@b^0,0,c
  5253   002042                     l680:
  5254   002042  90D8               	bcf	status,0,c
  5255   002044  3614               	rlcf	___fldiv@grs^0,f,c
  5256   002046  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  5257   002048  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  5258   00204A  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  5259   00204C                     l2895:
  5260   00204C  5005               	movf	___fldiv@a^0,w,c
  5261   00204E  5C0D               	subwf	___fldiv@rem^0,w,c
  5262   002050  5006               	movf	(___fldiv@a+1)^0,w,c
  5263   002052  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  5264   002054  5007               	movf	(___fldiv@a+2)^0,w,c
  5265   002056  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  5266   002058  5008               	movf	(___fldiv@a+3)^0,w,c
  5267   00205A  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  5268   00205C  A0D8               	btfss	status,0,c
  5269   00205E  EF33  F010         	goto	u2901
  5270   002062  EF35  F010         	goto	u2900
  5271   002066                     u2901:
  5272   002066  EF3E  F010         	goto	l2901
  5273   00206A                     u2900:
  5274   00206A  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  5275   00206C  5005               	movf	___fldiv@a^0,w,c
  5276   00206E  5E0D               	subwf	___fldiv@rem^0,f,c
  5277   002070  5006               	movf	(___fldiv@a+1)^0,w,c
  5278   002072  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  5279   002074  5007               	movf	(___fldiv@a+2)^0,w,c
  5280   002076  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  5281   002078  5008               	movf	(___fldiv@a+3)^0,w,c
  5282   00207A  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  5283   00207C                     l2901:
  5284   00207C  2A19               	incf	___fldiv@aexp^0,f,c
  5285   00207E                     l677:
  5286   00207E  0E19               	movlw	25
  5287   002080  6419               	cpfsgt	___fldiv@aexp^0,c
  5288   002082  EF45  F010         	goto	u2911
  5289   002086  EF47  F010         	goto	u2910
  5290   00208A                     u2911:
  5291   00208A  EF07  F010         	goto	l2887
  5292   00208E                     u2910:
  5293   00208E  500D               	movf	___fldiv@rem^0,w,c
  5294   002090  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  5295   002092  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  5296   002094  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  5297   002096  B4D8               	btfsc	status,2,c
  5298   002098  EF50  F010         	goto	u2921
  5299   00209C  EF52  F010         	goto	u2920
  5300   0020A0                     u2921:
  5301   0020A0  EF6A  F010         	goto	l2913
  5302   0020A4                     u2920:
  5303   0020A4  8014               	bsf	___fldiv@grs^0,0,c
  5304   0020A6  EF6A  F010         	goto	l2913
  5305   0020AA                     l2907:
  5306   0020AA  90D8               	bcf	status,0,c
  5307   0020AC  3601               	rlcf	___fldiv@b^0,f,c
  5308   0020AE  3602               	rlcf	(___fldiv@b+1)^0,f,c
  5309   0020B0  3603               	rlcf	(___fldiv@b+2)^0,f,c
  5310   0020B2  3604               	rlcf	(___fldiv@b+3)^0,f,c
  5311   0020B4  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  5312   0020B6  EF5F  F010         	goto	u2931
  5313   0020BA  EF61  F010         	goto	u2930
  5314   0020BE                     u2931:
  5315   0020BE  EF62  F010         	goto	l686
  5316   0020C2                     u2930:
  5317   0020C2  8001               	bsf	___fldiv@b^0,0,c
  5318   0020C4                     l686:
  5319   0020C4  90D8               	bcf	status,0,c
  5320   0020C6  3614               	rlcf	___fldiv@grs^0,f,c
  5321   0020C8  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  5322   0020CA  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  5323   0020CC  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  5324   0020CE  0612               	decf	___fldiv@new_exp^0,f,c
  5325   0020D0  A0D8               	btfss	status,0,c
  5326   0020D2  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  5327   0020D4                     l2913:
  5328   0020D4  AE03               	btfss	(___fldiv@b+2)^0,7,c
  5329   0020D6  EF6F  F010         	goto	u2941
  5330   0020DA  EF71  F010         	goto	u2940
  5331   0020DE                     u2941:
  5332   0020DE  EF55  F010         	goto	l2907
  5333   0020E2                     u2940:
  5334   0020E2  0E00               	movlw	0
  5335   0020E4  6E19               	movwf	___fldiv@aexp^0,c
  5336   0020E6  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  5337   0020E8  EF78  F010         	goto	u2951
  5338   0020EC  EF7A  F010         	goto	u2950
  5339   0020F0                     u2951:
  5340   0020F0  EF9E  F010         	goto	l688
  5341   0020F4                     u2950:
  5342   0020F4  0EFF               	movlw	255
  5343   0020F6  1414               	andwf	___fldiv@grs^0,w,c
  5344   0020F8  6E09               	movwf	??___fldiv^0,c
  5345   0020FA  0EFF               	movlw	255
  5346   0020FC  1415               	andwf	(___fldiv@grs+1)^0,w,c
  5347   0020FE  6E0A               	movwf	(??___fldiv+1)^0,c
  5348   002100  0EFF               	movlw	255
  5349   002102  1416               	andwf	(___fldiv@grs+2)^0,w,c
  5350   002104  6E0B               	movwf	(??___fldiv+2)^0,c
  5351   002106  0E7F               	movlw	127
  5352   002108  1417               	andwf	(___fldiv@grs+3)^0,w,c
  5353   00210A  6E0C               	movwf	(??___fldiv+3)^0,c
  5354   00210C  5009               	movf	??___fldiv^0,w,c
  5355   00210E  100A               	iorwf	(??___fldiv+1)^0,w,c
  5356   002110  100B               	iorwf	(??___fldiv+2)^0,w,c
  5357   002112  100C               	iorwf	(??___fldiv+3)^0,w,c
  5358   002114  B4D8               	btfsc	status,2,c
  5359   002116  EF8F  F010         	goto	u2961
  5360   00211A  EF91  F010         	goto	u2960
  5361   00211E                     u2961:
  5362   00211E  EF95  F010         	goto	l689
  5363   002122                     u2960:
  5364   002122                     l2921:
  5365   002122  0E01               	movlw	1
  5366   002124  6E19               	movwf	___fldiv@aexp^0,c
  5367   002126  EF9E  F010         	goto	l688
  5368   00212A                     l689:
  5369   00212A  A001               	btfss	___fldiv@b^0,0,c
  5370   00212C  EF9A  F010         	goto	u2971
  5371   002130  EF9C  F010         	goto	u2970
  5372   002134                     u2971:
  5373   002134  EF9E  F010         	goto	l688
  5374   002138                     u2970:
  5375   002138  EF91  F010         	goto	l2921
  5376   00213C                     l688:
  5377   00213C  5019               	movf	___fldiv@aexp^0,w,c
  5378   00213E  B4D8               	btfsc	status,2,c
  5379   002140  EFA4  F010         	goto	u2981
  5380   002144  EFA6  F010         	goto	u2980
  5381   002148                     u2981:
  5382   002148  EFCA  F010         	goto	l2933
  5383   00214C                     u2980:
  5384   00214C  0E01               	movlw	1
  5385   00214E  2601               	addwf	___fldiv@b^0,f,c
  5386   002150  0E00               	movlw	0
  5387   002152  2202               	addwfc	(___fldiv@b+1)^0,f,c
  5388   002154  2203               	addwfc	(___fldiv@b+2)^0,f,c
  5389   002156  2204               	addwfc	(___fldiv@b+3)^0,f,c
  5390   002158  A004               	btfss	(___fldiv@b+3)^0,0,c
  5391   00215A  EFB1  F010         	goto	u2991
  5392   00215E  EFB3  F010         	goto	u2990
  5393   002162                     u2991:
  5394   002162  EFCA  F010         	goto	l2933
  5395   002166                     u2990:
  5396   002166  C001  F009         	movff	___fldiv@b,??___fldiv
  5397   00216A  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  5398   00216E  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  5399   002172  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  5400   002176  340C               	rlcf	(??___fldiv+3)^0,w,c
  5401   002178  320C               	rrcf	(??___fldiv+3)^0,f,c
  5402   00217A  320B               	rrcf	(??___fldiv+2)^0,f,c
  5403   00217C  320A               	rrcf	(??___fldiv+1)^0,f,c
  5404   00217E  3209               	rrcf	??___fldiv^0,f,c
  5405   002180  C009  F001         	movff	??___fldiv,___fldiv@b
  5406   002184  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  5407   002188  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  5408   00218C  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  5409   002190  4A12               	infsnz	___fldiv@new_exp^0,f,c
  5410   002192  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  5411   002194                     l2933:
  5412   002194  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5413   002196  EFD5  F010         	goto	u3001
  5414   00219A  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  5415   00219C  E108               	bnz	u3000
  5416   00219E  2812               	incf	___fldiv@new_exp^0,w,c
  5417   0021A0  A0D8               	btfss	status,0,c
  5418   0021A2  EFD5  F010         	goto	u3001
  5419   0021A6  EFD7  F010         	goto	u3000
  5420   0021AA                     u3001:
  5421   0021AA  EFE2  F010         	goto	l2937
  5422   0021AE                     u3000:
  5423   0021AE  0E00               	movlw	0
  5424   0021B0  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  5425   0021B2  6812               	setf	___fldiv@new_exp^0,c
  5426   0021B4  0E00               	movlw	0
  5427   0021B6  6E01               	movwf	___fldiv@b^0,c
  5428   0021B8  0E00               	movlw	0
  5429   0021BA  6E02               	movwf	(___fldiv@b+1)^0,c
  5430   0021BC  0E00               	movlw	0
  5431   0021BE  6E03               	movwf	(___fldiv@b+2)^0,c
  5432   0021C0  0E00               	movlw	0
  5433   0021C2  6E04               	movwf	(___fldiv@b+3)^0,c
  5434   0021C4                     l2937:
  5435   0021C4  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5436   0021C6  EFEF  F010         	goto	u3010
  5437   0021CA  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  5438   0021CC  E106               	bnz	u3011
  5439   0021CE  0412               	decf	___fldiv@new_exp^0,w,c
  5440   0021D0  B0D8               	btfsc	status,0,c
  5441   0021D2  EFED  F010         	goto	u3011
  5442   0021D6  EFEF  F010         	goto	u3010
  5443   0021DA                     u3011:
  5444   0021DA  EFFD  F010         	goto	l2941
  5445   0021DE                     u3010:
  5446   0021DE  0E00               	movlw	0
  5447   0021E0  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  5448   0021E2  0E00               	movlw	0
  5449   0021E4  6E12               	movwf	___fldiv@new_exp^0,c
  5450   0021E6  0E00               	movlw	0
  5451   0021E8  6E01               	movwf	___fldiv@b^0,c
  5452   0021EA  0E00               	movlw	0
  5453   0021EC  6E02               	movwf	(___fldiv@b+1)^0,c
  5454   0021EE  0E00               	movlw	0
  5455   0021F0  6E03               	movwf	(___fldiv@b+2)^0,c
  5456   0021F2  0E00               	movlw	0
  5457   0021F4  6E04               	movwf	(___fldiv@b+3)^0,c
  5458   0021F6  0E00               	movlw	0
  5459   0021F8  6E11               	movwf	___fldiv@sign^0,c
  5460   0021FA                     l2941:
  5461   0021FA  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  5462   0021FE  A018               	btfss	___fldiv@bexp^0,0,c
  5463   002200  EF04  F011         	goto	u3021
  5464   002204  EF06  F011         	goto	u3020
  5465   002208                     u3021:
  5466   002208  EF09  F011         	goto	l2947
  5467   00220C                     u3020:
  5468   00220C  8E03               	bsf	(___fldiv@b+2)^0,7,c
  5469   00220E  EF0A  F011         	goto	l2949
  5470   002212                     l2947:
  5471   002212  9E03               	bcf	(___fldiv@b+2)^0,7,c
  5472   002214                     l2949:
  5473   002214  90D8               	bcf	status,0,c
  5474   002216  3018               	rrcf	___fldiv@bexp^0,w,c
  5475   002218  6E04               	movwf	(___fldiv@b+3)^0,c
  5476   00221A  EFC0  F00F         	goto	l2863
  5477   00221E                     l675:
  5478   00221E  0012               	return		;funcret
  5479   002220                     __end_of___fldiv:
  5480                           	callstack 0
  5481                           
  5482 ;; *************** function _dtoa *****************
  5483 ;; Defined at:
  5484 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5485 ;; Parameters:    Size  Location     Type
  5486 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5487 ;;		 -> sprintf@f(11), 
  5488 ;;  d               8   29[COMRAM] long long 
  5489 ;; Auto vars:     Size  Location     Type
  5490 ;;  n               8   51[COMRAM] long long 
  5491 ;;  i               2   59[COMRAM] int 
  5492 ;;  w               2   49[COMRAM] int 
  5493 ;;  p               2   47[COMRAM] int 
  5494 ;;  s               1   61[COMRAM] unsigned char 
  5495 ;; Return value:  Size  Location     Type
  5496 ;;                  1    wreg      void 
  5497 ;; Registers used:
  5498 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5499 ;; Tracked objects:
  5500 ;;		On entry : 0/0
  5501 ;;		On exit  : 0/0
  5502 ;;		Unchanged: 0/0
  5503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5504 ;;      Params:        10       0       0       0       0       0       0
  5505 ;;      Locals:        17       0       0       0       0       0       0
  5506 ;;      Temps:          8       0       0       0       0       0       0
  5507 ;;      Totals:        35       0       0       0       0       0       0
  5508 ;;Total ram usage:       35 bytes
  5509 ;; Hardware stack levels used: 1
  5510 ;; Hardware stack levels required when called: 4
  5511 ;; This function calls:
  5512 ;;		___aodiv
  5513 ;;		___aomod
  5514 ;;		_abs
  5515 ;;		_pad
  5516 ;; This function is called by:
  5517 ;;		_vfpfcnvrt
  5518 ;; This function uses a non-reentrant model
  5519 ;;
  5520                           
  5521                           	psect	text18
  5522   002220                     __ptext18:
  5523                           	callstack 0
  5524   002220                     _dtoa:
  5525                           	callstack 22
  5526   002220                     
  5527                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  5528   002220  C01E  F034         	movff	dtoa@d,dtoa@n
  5529   002224  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  5530   002228  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  5531   00222C  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  5532   002230  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  5533   002234  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  5534   002238  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  5535   00223C  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  5536   002240                     
  5537                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  5538   002240  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  5539   002242  EF25  F011         	goto	u3671
  5540   002246  EF28  F011         	goto	u3670
  5541   00224A                     u3671:
  5542   00224A  0E01               	movlw	1
  5543   00224C  EF29  F011         	goto	u3680
  5544   002250                     u3670:
  5545   002250  0E00               	movlw	0
  5546   002252                     u3680:
  5547   002252  6E3E               	movwf	dtoa@s^0,c
  5548   002254                     
  5549                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  5550   002254  503E               	movf	dtoa@s^0,w,c
  5551   002256  B4D8               	btfsc	status,2,c
  5552   002258  EF30  F011         	goto	u3691
  5553   00225C  EF32  F011         	goto	u3690
  5554   002260                     u3691:
  5555   002260  EF42  F011         	goto	l3299
  5556   002264                     u3690:
  5557   002264                     
  5558                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  5559   002264  1E3B               	comf	(dtoa@n+7)^0,f,c
  5560   002266  1E3A               	comf	(dtoa@n+6)^0,f,c
  5561   002268  1E39               	comf	(dtoa@n+5)^0,f,c
  5562   00226A  1E38               	comf	(dtoa@n+4)^0,f,c
  5563   00226C  1E37               	comf	(dtoa@n+3)^0,f,c
  5564   00226E  1E36               	comf	(dtoa@n+2)^0,f,c
  5565   002270  1E35               	comf	(dtoa@n+1)^0,f,c
  5566   002272  6C34               	negf	dtoa@n^0,c
  5567   002274  0E00               	movlw	0
  5568   002276  2235               	addwfc	(dtoa@n+1)^0,f,c
  5569   002278  2236               	addwfc	(dtoa@n+2)^0,f,c
  5570   00227A  2237               	addwfc	(dtoa@n+3)^0,f,c
  5571   00227C  2238               	addwfc	(dtoa@n+4)^0,f,c
  5572   00227E  2239               	addwfc	(dtoa@n+5)^0,f,c
  5573   002280  223A               	addwfc	(dtoa@n+6)^0,f,c
  5574   002282  223B               	addwfc	(dtoa@n+7)^0,f,c
  5575   002284                     l3299:
  5576                           
  5577                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 458:     if (!(pr
      +                          ec < 0)) {
  5578   002284  0100               	movlb	0	; () banked
  5579   002286  BF8F               	btfsc	(_prec+1)& (0+255),7,b
  5580   002288  EF48  F011         	goto	u3701
  5581   00228C  EF4A  F011         	goto	u3700
  5582   002290                     u3701:
  5583   002290  EF4B  F011         	goto	l3303
  5584   002294                     u3700:
  5585   002294                     
  5586                           ; BSR set to: 0
  5587                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 459:         flag
      +                          s &= ~(1 << 1);
  5588   002294  927F               	bcf	_flags^0,1,c
  5589   002296                     l3303:
  5590                           
  5591                           ; BSR set to: 0
  5592                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  5593   002296  BF8F               	btfsc	(_prec+1)& (0+255),7,b
  5594   002298  EF58  F011         	goto	u3710
  5595   00229C  518F               	movf	(_prec+1)& (0+255),w,b
  5596   00229E  E106               	bnz	u3711
  5597   0022A0  058E               	decf	_prec& (0+255),w,b
  5598   0022A2  B0D8               	btfsc	status,0,c
  5599   0022A4  EF56  F011         	goto	u3711
  5600   0022A8  EF58  F011         	goto	u3710
  5601   0022AC                     u3711:
  5602   0022AC  EF5E  F011         	goto	l819
  5603   0022B0                     u3710:
  5604   0022B0                     
  5605                           ; BSR set to: 0
  5606   0022B0  0E00               	movlw	0
  5607   0022B2  6E31               	movwf	(dtoa@p+1)^0,c
  5608   0022B4  0E01               	movlw	1
  5609   0022B6  6E30               	movwf	dtoa@p^0,c
  5610   0022B8  EF62  F011         	goto	l821
  5611   0022BC                     l819:
  5612                           
  5613                           ; BSR set to: 0
  5614   0022BC  C08E  F030         	movff	_prec,dtoa@p
  5615   0022C0  C08F  F031         	movff	_prec+1,dtoa@p+1
  5616   0022C4                     l821:
  5617                           
  5618                           ; BSR set to: 0
  5619                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  5620   0022C4  C08C  F032         	movff	_width,dtoa@w
  5621   0022C8  C08D  F033         	movff	_width+1,dtoa@w+1
  5622   0022CC                     
  5623                           ; BSR set to: 0
  5624                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  5625   0022CC  503E               	movf	dtoa@s^0,w,c
  5626   0022CE  B4D8               	btfsc	status,2,c
  5627   0022D0  EF6C  F011         	goto	u3721
  5628   0022D4  EF6E  F011         	goto	u3720
  5629   0022D8                     u3721:
  5630   0022D8  EF85  F011         	goto	l822
  5631   0022DC                     u3720:
  5632   0022DC                     
  5633                           ; BSR set to: 0
  5634                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  5635   0022DC  0632               	decf	dtoa@w^0,f,c
  5636   0022DE  A0D8               	btfss	status,0,c
  5637   0022E0  0633               	decf	(dtoa@w+1)^0,f,c
  5638   0022E2                     
  5639                           ; BSR set to: 0
  5640                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  5641   0022E2  503E               	movf	dtoa@s^0,w,c
  5642   0022E4  A4D8               	btfss	status,2,c
  5643   0022E6  EF77  F011         	goto	u3731
  5644   0022EA  EF79  F011         	goto	u3730
  5645   0022EE                     u3731:
  5646   0022EE  EF7F  F011         	goto	l3315
  5647   0022F2                     u3730:
  5648   0022F2                     
  5649                           ; BSR set to: 0
  5650   0022F2  0E00               	movlw	0
  5651   0022F4  6E2F               	movwf	(_dtoa$885+1)^0,c
  5652   0022F6  0E2B               	movlw	43
  5653   0022F8  6E2E               	movwf	_dtoa$885^0,c
  5654   0022FA  EF83  F011         	goto	l3317
  5655   0022FE                     l3315:
  5656                           
  5657                           ; BSR set to: 0
  5658   0022FE  0E00               	movlw	0
  5659   002300  6E2F               	movwf	(_dtoa$885+1)^0,c
  5660   002302  0E2D               	movlw	45
  5661   002304  6E2E               	movwf	_dtoa$885^0,c
  5662   002306                     l3317:
  5663                           
  5664                           ; BSR set to: 0
  5665   002306  C02E  F03E         	movff	_dtoa$885,dtoa@s
  5666   00230A                     l822:
  5667                           
  5668                           ; BSR set to: 0
  5669                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  5670   00230A  0E00               	movlw	0
  5671   00230C  6E3D               	movwf	(dtoa@i+1)^0,c
  5672   00230E  0E4F               	movlw	79
  5673   002310  6E3C               	movwf	dtoa@i^0,c
  5674   002312                     
  5675                           ; BSR set to: 0
  5676                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  5677   002312  0E00               	movlw	0
  5678   002314  0101               	movlb	1	; () banked
  5679   002316  6F4F               	movwf	(_dbuf+79)& (0+255),b
  5680                           
  5681                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5682   002318  EF0A  F012         	goto	l3331
  5683   00231C                     l3321:
  5684                           
  5685                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  5686   00231C  063C               	decf	dtoa@i^0,f,c
  5687   00231E  A0D8               	btfss	status,0,c
  5688   002320  063D               	decf	(dtoa@i+1)^0,f,c
  5689   002322                     
  5690                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5691   002322  0E00               	movlw	low _dbuf
  5692   002324  243C               	addwf	dtoa@i^0,w,c
  5693   002326  6ED9               	movwf	fsr2l,c
  5694   002328  0E01               	movlw	high _dbuf
  5695   00232A  203D               	addwfc	(dtoa@i+1)^0,w,c
  5696   00232C  6EDA               	movwf	fsr2h,c
  5697   00232E  C034  F001         	movff	dtoa@n,___aomod@dividend
  5698   002332  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  5699   002336  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  5700   00233A  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  5701   00233E  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  5702   002342  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  5703   002346  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  5704   00234A  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  5705   00234E  0E0A               	movlw	10
  5706   002350  6E09               	movwf	___aomod@divisor^0,c
  5707   002352  0E00               	movlw	0
  5708   002354  6E0A               	movwf	(___aomod@divisor+1)^0,c
  5709   002356  0E00               	movlw	0
  5710   002358  6E0B               	movwf	(___aomod@divisor+2)^0,c
  5711   00235A  0E00               	movlw	0
  5712   00235C  6E0C               	movwf	(___aomod@divisor+3)^0,c
  5713   00235E  0E00               	movlw	0
  5714   002360  6E0D               	movwf	(___aomod@divisor+4)^0,c
  5715   002362  0E00               	movlw	0
  5716   002364  6E0E               	movwf	(___aomod@divisor+5)^0,c
  5717   002366  0E00               	movlw	0
  5718   002368  6E0F               	movwf	(___aomod@divisor+6)^0,c
  5719   00236A  0E00               	movlw	0
  5720   00236C  6E10               	movwf	(___aomod@divisor+7)^0,c
  5721   00236E  EC12  F015         	call	___aomod	;wreg free
  5722   002372  C001  F026         	movff	?___aomod,??_dtoa
  5723   002376  C002  F027         	movff	?___aomod+1,??_dtoa+1
  5724   00237A  C003  F028         	movff	?___aomod+2,??_dtoa+2
  5725   00237E  C004  F029         	movff	?___aomod+3,??_dtoa+3
  5726   002382  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  5727   002386  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  5728   00238A  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  5729   00238E  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  5730   002392  C026  F013         	movff	??_dtoa,abs@a
  5731   002396  C027  F014         	movff	??_dtoa+1,abs@a+1
  5732   00239A  EC9C  F01A         	call	_abs	;wreg free
  5733   00239E  5013               	movf	?_abs^0,w,c
  5734   0023A0  0F30               	addlw	48
  5735   0023A2  6EDF               	movwf	indf2,c
  5736   0023A4                     
  5737                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  5738   0023A4  0630               	decf	dtoa@p^0,f,c
  5739   0023A6  A0D8               	btfss	status,0,c
  5740   0023A8  0631               	decf	(dtoa@p+1)^0,f,c
  5741   0023AA                     
  5742                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  5743   0023AA  0632               	decf	dtoa@w^0,f,c
  5744   0023AC  A0D8               	btfss	status,0,c
  5745   0023AE  0633               	decf	(dtoa@w+1)^0,f,c
  5746   0023B0                     
  5747                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  5748   0023B0  C034  F001         	movff	dtoa@n,___aodiv@dividend
  5749   0023B4  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  5750   0023B8  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  5751   0023BC  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  5752   0023C0  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  5753   0023C4  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  5754   0023C8  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  5755   0023CC  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  5756   0023D0  0E0A               	movlw	10
  5757   0023D2  6E09               	movwf	___aodiv@divisor^0,c
  5758   0023D4  0E00               	movlw	0
  5759   0023D6  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  5760   0023D8  0E00               	movlw	0
  5761   0023DA  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  5762   0023DC  0E00               	movlw	0
  5763   0023DE  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  5764   0023E0  0E00               	movlw	0
  5765   0023E2  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  5766   0023E4  0E00               	movlw	0
  5767   0023E6  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  5768   0023E8  0E00               	movlw	0
  5769   0023EA  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  5770   0023EC  0E00               	movlw	0
  5771   0023EE  6E10               	movwf	(___aodiv@divisor+7)^0,c
  5772   0023F0  EC4E  F014         	call	___aodiv	;wreg free
  5773   0023F4  C001  F034         	movff	?___aodiv,dtoa@n
  5774   0023F8  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  5775   0023FC  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  5776   002400  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  5777   002404  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  5778   002408  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  5779   00240C  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  5780   002410  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  5781   002414                     l3331:
  5782                           
  5783                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5784   002414  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  5785   002416  EF15  F012         	goto	u3741
  5786   00241A  503D               	movf	(dtoa@i+1)^0,w,c
  5787   00241C  E108               	bnz	u3740
  5788   00241E  043C               	decf	dtoa@i^0,w,c
  5789   002420  A0D8               	btfss	status,0,c
  5790   002422  EF15  F012         	goto	u3741
  5791   002426  EF17  F012         	goto	u3740
  5792   00242A                     u3741:
  5793   00242A  EF47  F012         	goto	l3341
  5794   00242E                     u3740:
  5795   00242E  5034               	movf	dtoa@n^0,w,c
  5796   002430  1035               	iorwf	(dtoa@n+1)^0,w,c
  5797   002432  1036               	iorwf	(dtoa@n+2)^0,w,c
  5798   002434  1037               	iorwf	(dtoa@n+3)^0,w,c
  5799   002436  1038               	iorwf	(dtoa@n+4)^0,w,c
  5800   002438  1039               	iorwf	(dtoa@n+5)^0,w,c
  5801   00243A  103A               	iorwf	(dtoa@n+6)^0,w,c
  5802   00243C  103B               	iorwf	(dtoa@n+7)^0,w,c
  5803   00243E  A4D8               	btfss	status,2,c
  5804   002440  EF24  F012         	goto	u3751
  5805   002444  EF26  F012         	goto	u3750
  5806   002448                     u3751:
  5807   002448  EF8E  F011         	goto	l3321
  5808   00244C                     u3750:
  5809   00244C  BE31               	btfsc	(dtoa@p+1)^0,7,c
  5810   00244E  EF33  F012         	goto	u3760
  5811   002452  5031               	movf	(dtoa@p+1)^0,w,c
  5812   002454  E106               	bnz	u3761
  5813   002456  0430               	decf	dtoa@p^0,w,c
  5814   002458  B0D8               	btfsc	status,0,c
  5815   00245A  EF31  F012         	goto	u3761
  5816   00245E  EF33  F012         	goto	u3760
  5817   002462                     u3761:
  5818   002462  EF8E  F011         	goto	l3321
  5819   002466                     u3760:
  5820   002466  BE33               	btfsc	(dtoa@w+1)^0,7,c
  5821   002468  EF3E  F012         	goto	u3771
  5822   00246C  5033               	movf	(dtoa@w+1)^0,w,c
  5823   00246E  E108               	bnz	u3770
  5824   002470  0432               	decf	dtoa@w^0,w,c
  5825   002472  A0D8               	btfss	status,0,c
  5826   002474  EF3E  F012         	goto	u3771
  5827   002478  EF40  F012         	goto	u3770
  5828   00247C                     u3771:
  5829   00247C  EF47  F012         	goto	l3341
  5830   002480                     u3770:
  5831   002480  B27F               	btfsc	_flags^0,1,c
  5832   002482  EF45  F012         	goto	u3781
  5833   002486  EF47  F012         	goto	u3780
  5834   00248A                     u3781:
  5835   00248A  EF8E  F011         	goto	l3321
  5836   00248E                     u3780:
  5837   00248E                     l3341:
  5838                           
  5839                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  5840   00248E  503E               	movf	dtoa@s^0,w,c
  5841   002490  B4D8               	btfsc	status,2,c
  5842   002492  EF4D  F012         	goto	u3791
  5843   002496  EF4F  F012         	goto	u3790
  5844   00249A                     u3791:
  5845   00249A  EF5A  F012         	goto	l3347
  5846   00249E                     u3790:
  5847   00249E                     
  5848                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  5849   00249E  063C               	decf	dtoa@i^0,f,c
  5850   0024A0  A0D8               	btfss	status,0,c
  5851   0024A2  063D               	decf	(dtoa@i+1)^0,f,c
  5852   0024A4                     
  5853                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  5854   0024A4  0E00               	movlw	low _dbuf
  5855   0024A6  243C               	addwf	dtoa@i^0,w,c
  5856   0024A8  6ED9               	movwf	fsr2l,c
  5857   0024AA  0E01               	movlw	high _dbuf
  5858   0024AC  203D               	addwfc	(dtoa@i+1)^0,w,c
  5859   0024AE  6EDA               	movwf	fsr2h,c
  5860   0024B0  C03E  FFDF         	movff	dtoa@s,indf2
  5861   0024B4                     l3347:
  5862                           
  5863                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  5864   0024B4  C01C  F011         	movff	dtoa@fp,pad@fp
  5865   0024B8  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  5866   0024BC  0E00               	movlw	low _dbuf
  5867   0024BE  243C               	addwf	dtoa@i^0,w,c
  5868   0024C0  6E13               	movwf	pad@buf^0,c
  5869   0024C2  0E01               	movlw	high _dbuf
  5870   0024C4  203D               	addwfc	(dtoa@i+1)^0,w,c
  5871   0024C6  6E14               	movwf	(pad@buf+1)^0,c
  5872   0024C8  C032  F015         	movff	dtoa@w,pad@p
  5873   0024CC  C033  F016         	movff	dtoa@w+1,pad@p+1
  5874   0024D0  ECA7  F018         	call	_pad	;wreg free
  5875   0024D4  0012               	return		;funcret
  5876   0024D6                     __end_of_dtoa:
  5877                           	callstack 0
  5878                           
  5879 ;; *************** function _pad *****************
  5880 ;; Defined at:
  5881 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5882 ;; Parameters:    Size  Location     Type
  5883 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5884 ;;		 -> sprintf@f(11), 
  5885 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5886 ;;		 -> dbuf(80), 
  5887 ;;  p               2   20[COMRAM] int 
  5888 ;; Auto vars:     Size  Location     Type
  5889 ;;  w               2   25[COMRAM] int 
  5890 ;;  i               2   23[COMRAM] int 
  5891 ;; Return value:  Size  Location     Type
  5892 ;;                  1    wreg      void 
  5893 ;; Registers used:
  5894 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5895 ;; Tracked objects:
  5896 ;;		On entry : 0/0
  5897 ;;		On exit  : 0/0
  5898 ;;		Unchanged: 0/0
  5899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5900 ;;      Params:         6       0       0       0       0       0       0
  5901 ;;      Locals:         4       0       0       0       0       0       0
  5902 ;;      Temps:          1       0       0       0       0       0       0
  5903 ;;      Totals:        11       0       0       0       0       0       0
  5904 ;;Total ram usage:       11 bytes
  5905 ;; Hardware stack levels used: 1
  5906 ;; Hardware stack levels required when called: 3
  5907 ;; This function calls:
  5908 ;;		_fputc
  5909 ;;		_fputs
  5910 ;; This function is called by:
  5911 ;;		_dtoa
  5912 ;;		_efgtoa
  5913 ;; This function uses a non-reentrant model
  5914 ;;
  5915                           
  5916                           	psect	text19
  5917   00314E                     __ptext19:
  5918                           	callstack 0
  5919   00314E                     _pad:
  5920                           	callstack 22
  5921   00314E                     
  5922                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 139:     if (flags & (1 << 0)) {
  5923   00314E  A07F               	btfss	_flags^0,0,c
  5924   003150  EFAC  F018         	goto	u3381
  5925   003154  EFAE  F018         	goto	u3380
  5926   003158                     u3381:
  5927   003158  EFB8  F018         	goto	l3187
  5928   00315C                     u3380:
  5929   00315C                     
  5930                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 140:         fput
      +                          s((const char *)buf, fp);
  5931   00315C  C013  F00A         	movff	pad@buf,fputs@s
  5932   003160  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5933   003164  C011  F00C         	movff	pad@fp,fputs@fp
  5934   003168  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5935   00316C  EC5A  F01A         	call	_fputs	;wreg free
  5936   003170                     l3187:
  5937                           
  5938                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 145:     w = (p <
      +                           0) ? 0 : p;
  5939   003170  BE16               	btfsc	(pad@p+1)^0,7,c
  5940   003172  EFBD  F018         	goto	u3391
  5941   003176  EFBF  F018         	goto	u3390
  5942   00317A                     u3391:
  5943   00317A  EFC5  F018         	goto	l3191
  5944   00317E                     u3390:
  5945   00317E  C015  F01A         	movff	pad@p,pad@w
  5946   003182  C016  F01B         	movff	pad@p+1,pad@w+1
  5947   003186  EFC9  F018         	goto	l808
  5948   00318A                     l3191:
  5949   00318A  0E00               	movlw	0
  5950   00318C  6E1B               	movwf	(pad@w+1)^0,c
  5951   00318E  0E00               	movlw	0
  5952   003190  6E1A               	movwf	pad@w^0,c
  5953   003192                     l808:
  5954                           
  5955                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  5956   003192  0E00               	movlw	0
  5957   003194  6E19               	movwf	(pad@i+1)^0,c
  5958   003196  0E00               	movlw	0
  5959   003198  6E18               	movwf	pad@i^0,c
  5960                           
  5961                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5962   00319A  EFDB  F018         	goto	l3197
  5963   00319E                     l3193:
  5964                           
  5965                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  5966   00319E  0E00               	movlw	0
  5967   0031A0  6E02               	movwf	(fputc@c+1)^0,c
  5968   0031A2  0E20               	movlw	32
  5969   0031A4  6E01               	movwf	fputc@c^0,c
  5970   0031A6  C011  F003         	movff	pad@fp,fputc@fp
  5971   0031AA  C012  F004         	movff	pad@fp+1,fputc@fp+1
  5972   0031AE  ECED  F017         	call	_fputc	;wreg free
  5973   0031B2                     
  5974                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  5975   0031B2  4A18               	infsnz	pad@i^0,f,c
  5976   0031B4  2A19               	incf	(pad@i+1)^0,f,c
  5977   0031B6                     l3197:
  5978                           
  5979                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5980   0031B6  501A               	movf	pad@w^0,w,c
  5981   0031B8  5C18               	subwf	pad@i^0,w,c
  5982   0031BA  5019               	movf	(pad@i+1)^0,w,c
  5983   0031BC  0A80               	xorlw	128
  5984   0031BE  6E17               	movwf	??_pad^0,c
  5985   0031C0  501B               	movf	(pad@w+1)^0,w,c
  5986   0031C2  0A80               	xorlw	128
  5987   0031C4  5817               	subwfb	??_pad^0,w,c
  5988   0031C6  A0D8               	btfss	status,0,c
  5989   0031C8  EFE8  F018         	goto	u3401
  5990   0031CC  EFEA  F018         	goto	u3400
  5991   0031D0                     u3401:
  5992   0031D0  EFCF  F018         	goto	l3193
  5993   0031D4                     u3400:
  5994   0031D4                     
  5995                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 154:     if (!(fl
      +                          ags & (1 << 0))) {
  5996   0031D4  B07F               	btfsc	_flags^0,0,c
  5997   0031D6  EFEF  F018         	goto	u3411
  5998   0031DA  EFF1  F018         	goto	u3410
  5999   0031DE                     u3411:
  6000   0031DE  EFFB  F018         	goto	l813
  6001   0031E2                     u3410:
  6002   0031E2                     
  6003                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  6004   0031E2  C013  F00A         	movff	pad@buf,fputs@s
  6005   0031E6  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6006   0031EA  C011  F00C         	movff	pad@fp,fputs@fp
  6007   0031EE  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6008   0031F2  EC5A  F01A         	call	_fputs	;wreg free
  6009   0031F6                     l813:
  6010   0031F6  0012               	return		;funcret
  6011   0031F8                     __end_of_pad:
  6012                           	callstack 0
  6013                           
  6014 ;; *************** function _fputs *****************
  6015 ;; Defined at:
  6016 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  6017 ;; Parameters:    Size  Location     Type
  6018 ;;  s               2    9[COMRAM] PTR const unsigned char 
  6019 ;;		 -> dbuf(80), 
  6020 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  6021 ;;		 -> sprintf@f(11), 
  6022 ;; Auto vars:     Size  Location     Type
  6023 ;;  i               2   14[COMRAM] int 
  6024 ;;  c               1   13[COMRAM] unsigned char 
  6025 ;; Return value:  Size  Location     Type
  6026 ;;                  2    9[COMRAM] int 
  6027 ;; Registers used:
  6028 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6029 ;; Tracked objects:
  6030 ;;		On entry : 0/0
  6031 ;;		On exit  : 0/0
  6032 ;;		Unchanged: 0/0
  6033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6034 ;;      Params:         4       0       0       0       0       0       0
  6035 ;;      Locals:         3       0       0       0       0       0       0
  6036 ;;      Temps:          0       0       0       0       0       0       0
  6037 ;;      Totals:         7       0       0       0       0       0       0
  6038 ;;Total ram usage:        7 bytes
  6039 ;; Hardware stack levels used: 1
  6040 ;; Hardware stack levels required when called: 2
  6041 ;; This function calls:
  6042 ;;		_fputc
  6043 ;; This function is called by:
  6044 ;;		_pad
  6045 ;; This function uses a non-reentrant model
  6046 ;;
  6047                           
  6048                           	psect	text20
  6049   0034B4                     __ptext20:
  6050                           	callstack 0
  6051   0034B4                     _fputs:
  6052                           	callstack 22
  6053   0034B4  0E00               	movlw	0
  6054   0034B6  6E10               	movwf	(fputs@i+1)^0,c
  6055   0034B8  0E00               	movlw	0
  6056   0034BA  6E0F               	movwf	fputs@i^0,c
  6057   0034BC  EF6B  F01A         	goto	l2731
  6058   0034C0                     l2727:
  6059   0034C0  C00E  F001         	movff	fputs@c,fputc@c
  6060   0034C4  6A02               	clrf	(fputc@c+1)^0,c
  6061   0034C6  C00C  F003         	movff	fputs@fp,fputc@fp
  6062   0034CA  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  6063   0034CE  ECED  F017         	call	_fputc	;wreg free
  6064   0034D2  4A0F               	infsnz	fputs@i^0,f,c
  6065   0034D4  2A10               	incf	(fputs@i+1)^0,f,c
  6066   0034D6                     l2731:
  6067   0034D6  500F               	movf	fputs@i^0,w,c
  6068   0034D8  240A               	addwf	fputs@s^0,w,c
  6069   0034DA  6ED9               	movwf	fsr2l,c
  6070   0034DC  5010               	movf	(fputs@i+1)^0,w,c
  6071   0034DE  200B               	addwfc	(fputs@s+1)^0,w,c
  6072   0034E0  6EDA               	movwf	fsr2h,c
  6073   0034E2  50DF               	movf	indf2,w,c
  6074   0034E4  6E0E               	movwf	fputs@c^0,c
  6075   0034E6  500E               	movf	fputs@c^0,w,c
  6076   0034E8  A4D8               	btfss	status,2,c
  6077   0034EA  EF79  F01A         	goto	u2661
  6078   0034EE  EF7B  F01A         	goto	u2660
  6079   0034F2                     u2661:
  6080   0034F2  EF60  F01A         	goto	l2727
  6081   0034F6                     u2660:
  6082   0034F6  0012               	return		;funcret
  6083   0034F8                     __end_of_fputs:
  6084                           	callstack 0
  6085                           
  6086 ;; *************** function _fputc *****************
  6087 ;; Defined at:
  6088 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  6089 ;; Parameters:    Size  Location     Type
  6090 ;;  c               2    0[COMRAM] int 
  6091 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  6092 ;;		 -> sprintf@f(11), 
  6093 ;; Auto vars:     Size  Location     Type
  6094 ;;		None
  6095 ;; Return value:  Size  Location     Type
  6096 ;;                  2    0[COMRAM] int 
  6097 ;; Registers used:
  6098 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6099 ;; Tracked objects:
  6100 ;;		On entry : 0/0
  6101 ;;		On exit  : 0/0
  6102 ;;		Unchanged: 0/0
  6103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6104 ;;      Params:         4       0       0       0       0       0       0
  6105 ;;      Locals:         0       0       0       0       0       0       0
  6106 ;;      Temps:          5       0       0       0       0       0       0
  6107 ;;      Totals:         9       0       0       0       0       0       0
  6108 ;;Total ram usage:        9 bytes
  6109 ;; Hardware stack levels used: 1
  6110 ;; Hardware stack levels required when called: 1
  6111 ;; This function calls:
  6112 ;;		_putch
  6113 ;; This function is called by:
  6114 ;;		_pad
  6115 ;;		_vfpfcnvrt
  6116 ;;		_fputs
  6117 ;; This function uses a non-reentrant model
  6118 ;;
  6119                           
  6120                           	psect	text21
  6121   002FDA                     __ptext21:
  6122                           	callstack 0
  6123   002FDA                     _fputc:
  6124                           	callstack 25
  6125   002FDA  5003               	movf	fputc@fp^0,w,c
  6126   002FDC  1004               	iorwf	(fputc@fp+1)^0,w,c
  6127   002FDE  B4D8               	btfsc	status,2,c
  6128   002FE0  EFF4  F017         	goto	u2231
  6129   002FE4  EFF6  F017         	goto	u2230
  6130   002FE8                     u2231:
  6131   002FE8  EFFF  F017         	goto	l2513
  6132   002FEC                     u2230:
  6133   002FEC  5003               	movf	fputc@fp^0,w,c
  6134   002FEE  1004               	iorwf	(fputc@fp+1)^0,w,c
  6135   002FF0  A4D8               	btfss	status,2,c
  6136   002FF2  EFFD  F017         	goto	u2241
  6137   002FF6  EFFF  F017         	goto	u2240
  6138   002FFA                     u2241:
  6139   002FFA  EF04  F018         	goto	l2515
  6140   002FFE                     u2240:
  6141   002FFE                     l2513:
  6142   002FFE  5001               	movf	fputc@c^0,w,c
  6143   003000  EC59  F01B         	call	_putch
  6144   003004  EF51  F018         	goto	l1040
  6145   003008                     l2515:
  6146   003008  EE20 F009          	lfsr	2,9
  6147   00300C  5003               	movf	fputc@fp^0,w,c
  6148   00300E  26D9               	addwf	fsr2l,f,c
  6149   003010  5004               	movf	(fputc@fp+1)^0,w,c
  6150   003012  22DA               	addwfc	fsr2h,f,c
  6151   003014  50DE               	movf	postinc2,w,c
  6152   003016  10DE               	iorwf	postinc2,w,c
  6153   003018  B4D8               	btfsc	status,2,c
  6154   00301A  EF11  F018         	goto	u2251
  6155   00301E  EF13  F018         	goto	u2250
  6156   003022                     u2251:
  6157   003022  EF2E  F018         	goto	l2519
  6158   003026                     u2250:
  6159   003026  EE20 F009          	lfsr	2,9
  6160   00302A  5003               	movf	fputc@fp^0,w,c
  6161   00302C  26D9               	addwf	fsr2l,f,c
  6162   00302E  5004               	movf	(fputc@fp+1)^0,w,c
  6163   003030  22DA               	addwfc	fsr2h,f,c
  6164   003032  EE10 F003          	lfsr	1,3
  6165   003036  5003               	movf	fputc@fp^0,w,c
  6166   003038  26E1               	addwf	fsr1l,f,c
  6167   00303A  5004               	movf	(fputc@fp+1)^0,w,c
  6168   00303C  22E2               	addwfc	fsr1h,f,c
  6169   00303E  50DE               	movf	postinc2,w,c
  6170   003040  5CE6               	subwf	postinc1,w,c
  6171   003042  50E6               	movf	postinc1,w,c
  6172   003044  0A80               	xorlw	128
  6173   003046  6E09               	movwf	(??_fputc+4)^0,c
  6174   003048  50DE               	movf	postinc2,w,c
  6175   00304A  0A80               	xorlw	128
  6176   00304C  5809               	subwfb	(??_fputc+4)^0,w,c
  6177   00304E  B0D8               	btfsc	status,0,c
  6178   003050  EF2C  F018         	goto	u2261
  6179   003054  EF2E  F018         	goto	u2260
  6180   003058                     u2261:
  6181   003058  EF51  F018         	goto	l1040
  6182   00305C                     u2260:
  6183   00305C                     l2519:
  6184   00305C  EE20 F003          	lfsr	2,3
  6185   003060  5003               	movf	fputc@fp^0,w,c
  6186   003062  26D9               	addwf	fsr2l,f,c
  6187   003064  5004               	movf	(fputc@fp+1)^0,w,c
  6188   003066  22DA               	addwfc	fsr2h,f,c
  6189   003068  CFDE F005          	movff	postinc2,??_fputc
  6190   00306C  CFDD F006          	movff	postdec2,??_fputc+1
  6191   003070  C003  FFD9         	movff	fputc@fp,fsr2l
  6192   003074  C004  FFDA         	movff	fputc@fp+1,fsr2h
  6193   003078  CFDE F007          	movff	postinc2,??_fputc+2
  6194   00307C  CFDD F008          	movff	postdec2,??_fputc+3
  6195   003080  5005               	movf	??_fputc^0,w,c
  6196   003082  2407               	addwf	(??_fputc+2)^0,w,c
  6197   003084  6ED9               	movwf	fsr2l,c
  6198   003086  5006               	movf	(??_fputc+1)^0,w,c
  6199   003088  2008               	addwfc	(??_fputc+3)^0,w,c
  6200   00308A  6EDA               	movwf	fsr2h,c
  6201   00308C  C001  FFDF         	movff	fputc@c,indf2
  6202   003090  EE20 F003          	lfsr	2,3
  6203   003094  5003               	movf	fputc@fp^0,w,c
  6204   003096  26D9               	addwf	fsr2l,f,c
  6205   003098  5004               	movf	(fputc@fp+1)^0,w,c
  6206   00309A  22DA               	addwfc	fsr2h,f,c
  6207   00309C  2ADE               	incf	postinc2,f,c
  6208   00309E  0E00               	movlw	0
  6209   0030A0  22DD               	addwfc	postdec2,f,c
  6210   0030A2                     l1040:
  6211   0030A2  0012               	return		;funcret
  6212   0030A4                     __end_of_fputc:
  6213                           	callstack 0
  6214                           
  6215 ;; *************** function _putch *****************
  6216 ;; Defined at:
  6217 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  6218 ;; Parameters:    Size  Location     Type
  6219 ;;  c               1    wreg     unsigned char 
  6220 ;; Auto vars:     Size  Location     Type
  6221 ;;  c               1    0[COMRAM] unsigned char 
  6222 ;; Return value:  Size  Location     Type
  6223 ;;                  1    wreg      void 
  6224 ;; Registers used:
  6225 ;;		wreg
  6226 ;; Tracked objects:
  6227 ;;		On entry : 0/0
  6228 ;;		On exit  : 0/0
  6229 ;;		Unchanged: 0/0
  6230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6231 ;;      Params:         0       0       0       0       0       0       0
  6232 ;;      Locals:         0       0       0       0       0       0       0
  6233 ;;      Temps:          0       0       0       0       0       0       0
  6234 ;;      Totals:         0       0       0       0       0       0       0
  6235 ;;Total ram usage:        0 bytes
  6236 ;; Hardware stack levels used: 1
  6237 ;; This function calls:
  6238 ;;		Nothing
  6239 ;; This function is called by:
  6240 ;;		_fputc
  6241 ;; This function uses a non-reentrant model
  6242 ;;
  6243                           
  6244                           	psect	text22
  6245   0036B2                     __ptext22:
  6246                           	callstack 0
  6247   0036B2                     _putch:
  6248                           	callstack 25
  6249   0036B2  0012               	return		;funcret
  6250   0036B4                     __end_of_putch:
  6251                           	callstack 0
  6252                           
  6253 ;; *************** function _abs *****************
  6254 ;; Defined at:
  6255 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  6256 ;; Parameters:    Size  Location     Type
  6257 ;;  a               2   18[COMRAM] int 
  6258 ;; Auto vars:     Size  Location     Type
  6259 ;;		None
  6260 ;; Return value:  Size  Location     Type
  6261 ;;                  2   18[COMRAM] int 
  6262 ;; Registers used:
  6263 ;;		wreg, status,2, status,0
  6264 ;; Tracked objects:
  6265 ;;		On entry : 0/0
  6266 ;;		On exit  : 0/0
  6267 ;;		Unchanged: 0/0
  6268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6269 ;;      Params:         2       0       0       0       0       0       0
  6270 ;;      Locals:         0       0       0       0       0       0       0
  6271 ;;      Temps:          2       0       0       0       0       0       0
  6272 ;;      Totals:         4       0       0       0       0       0       0
  6273 ;;Total ram usage:        4 bytes
  6274 ;; Hardware stack levels used: 1
  6275 ;; This function calls:
  6276 ;;		Nothing
  6277 ;; This function is called by:
  6278 ;;		_dtoa
  6279 ;; This function uses a non-reentrant model
  6280 ;;
  6281                           
  6282                           	psect	text23
  6283   003538                     __ptext23:
  6284                           	callstack 0
  6285   003538                     _abs:
  6286                           	callstack 25
  6287   003538  BE14               	btfsc	(abs@a+1)^0,7,c
  6288   00353A  EFA9  F01A         	goto	u3420
  6289   00353E  5014               	movf	(abs@a+1)^0,w,c
  6290   003540  E106               	bnz	u3421
  6291   003542  0413               	decf	abs@a^0,w,c
  6292   003544  B0D8               	btfsc	status,0,c
  6293   003546  EFA7  F01A         	goto	u3421
  6294   00354A  EFA9  F01A         	goto	u3420
  6295   00354E                     u3421:
  6296   00354E  EFB7  F01A         	goto	l960
  6297   003552                     u3420:
  6298   003552  C013  F015         	movff	abs@a,??_abs
  6299   003556  C014  F016         	movff	abs@a+1,??_abs+1
  6300   00355A  1E15               	comf	??_abs^0,f,c
  6301   00355C  1E16               	comf	(??_abs+1)^0,f,c
  6302   00355E  4A15               	infsnz	??_abs^0,f,c
  6303   003560  2A16               	incf	(??_abs+1)^0,f,c
  6304   003562  C015  F013         	movff	??_abs,?_abs
  6305   003566  C016  F014         	movff	??_abs+1,?_abs+1
  6306   00356A  EFBB  F01A         	goto	l963
  6307   00356E                     l960:
  6308   00356E  C013  F013         	movff	abs@a,?_abs
  6309   003572  C014  F014         	movff	abs@a+1,?_abs+1
  6310   003576                     l963:
  6311   003576  0012               	return		;funcret
  6312   003578                     __end_of_abs:
  6313                           	callstack 0
  6314                           
  6315 ;; *************** function ___aomod *****************
  6316 ;; Defined at:
  6317 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  6318 ;; Parameters:    Size  Location     Type
  6319 ;;  dividend        8    0[COMRAM] long long 
  6320 ;;  divisor         8    8[COMRAM] long long 
  6321 ;; Auto vars:     Size  Location     Type
  6322 ;;  sign            1   17[COMRAM] unsigned char 
  6323 ;;  counter         1   16[COMRAM] unsigned char 
  6324 ;; Return value:  Size  Location     Type
  6325 ;;                  8    0[COMRAM] long long 
  6326 ;; Registers used:
  6327 ;;		wreg, status,2, status,0
  6328 ;; Tracked objects:
  6329 ;;		On entry : 0/0
  6330 ;;		On exit  : 0/0
  6331 ;;		Unchanged: 0/0
  6332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6333 ;;      Params:        16       0       0       0       0       0       0
  6334 ;;      Locals:         2       0       0       0       0       0       0
  6335 ;;      Temps:          0       0       0       0       0       0       0
  6336 ;;      Totals:        18       0       0       0       0       0       0
  6337 ;;Total ram usage:       18 bytes
  6338 ;; Hardware stack levels used: 1
  6339 ;; This function calls:
  6340 ;;		Nothing
  6341 ;; This function is called by:
  6342 ;;		_dtoa
  6343 ;; This function uses a non-reentrant model
  6344 ;;
  6345                           
  6346                           	psect	text24
  6347   002A24                     __ptext24:
  6348                           	callstack 0
  6349   002A24                     ___aomod:
  6350                           	callstack 25
  6351   002A24  0E00               	movlw	0
  6352   002A26  6E12               	movwf	___aomod@sign^0,c
  6353   002A28  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  6354   002A2A  EF1B  F015         	goto	u2740
  6355   002A2E  EF19  F015         	goto	u2741
  6356   002A32                     u2741:
  6357   002A32  EF2D  F015         	goto	l2791
  6358   002A36                     u2740:
  6359   002A36  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6360   002A38  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6361   002A3A  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6362   002A3C  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6363   002A3E  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6364   002A40  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6365   002A42  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6366   002A44  6C01               	negf	___aomod@dividend^0,c
  6367   002A46  0E00               	movlw	0
  6368   002A48  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6369   002A4A  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6370   002A4C  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6371   002A4E  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6372   002A50  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6373   002A52  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6374   002A54  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6375   002A56  0E01               	movlw	1
  6376   002A58  6E12               	movwf	___aomod@sign^0,c
  6377   002A5A                     l2791:
  6378   002A5A  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  6379   002A5C  EF34  F015         	goto	u2750
  6380   002A60  EF32  F015         	goto	u2751
  6381   002A64                     u2751:
  6382   002A64  EF44  F015         	goto	l2795
  6383   002A68                     u2750:
  6384   002A68  1E10               	comf	(___aomod@divisor+7)^0,f,c
  6385   002A6A  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  6386   002A6C  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  6387   002A6E  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  6388   002A70  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  6389   002A72  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  6390   002A74  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  6391   002A76  6C09               	negf	___aomod@divisor^0,c
  6392   002A78  0E00               	movlw	0
  6393   002A7A  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  6394   002A7C  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  6395   002A7E  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  6396   002A80  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  6397   002A82  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  6398   002A84  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  6399   002A86  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  6400   002A88                     l2795:
  6401   002A88  5009               	movf	___aomod@divisor^0,w,c
  6402   002A8A  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  6403   002A8C  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  6404   002A8E  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  6405   002A90  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  6406   002A92  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  6407   002A94  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  6408   002A96  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  6409   002A98  B4D8               	btfsc	status,2,c
  6410   002A9A  EF51  F015         	goto	u2761
  6411   002A9E  EF53  F015         	goto	u2760
  6412   002AA2                     u2761:
  6413   002AA2  EF9B  F015         	goto	l2811
  6414   002AA6                     u2760:
  6415   002AA6  0E01               	movlw	1
  6416   002AA8  6E11               	movwf	___aomod@counter^0,c
  6417   002AAA  EF61  F015         	goto	l2801
  6418   002AAE                     l2799:
  6419   002AAE  90D8               	bcf	status,0,c
  6420   002AB0  3609               	rlcf	___aomod@divisor^0,f,c
  6421   002AB2  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  6422   002AB4  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  6423   002AB6  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  6424   002AB8  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  6425   002ABA  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  6426   002ABC  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  6427   002ABE  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  6428   002AC0  2A11               	incf	___aomod@counter^0,f,c
  6429   002AC2                     l2801:
  6430   002AC2  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  6431   002AC4  EF66  F015         	goto	u2771
  6432   002AC8  EF68  F015         	goto	u2770
  6433   002ACC                     u2771:
  6434   002ACC  EF57  F015         	goto	l2799
  6435   002AD0                     u2770:
  6436   002AD0                     l2803:
  6437   002AD0  5009               	movf	___aomod@divisor^0,w,c
  6438   002AD2  5C01               	subwf	___aomod@dividend^0,w,c
  6439   002AD4  500A               	movf	(___aomod@divisor+1)^0,w,c
  6440   002AD6  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  6441   002AD8  500B               	movf	(___aomod@divisor+2)^0,w,c
  6442   002ADA  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  6443   002ADC  500C               	movf	(___aomod@divisor+3)^0,w,c
  6444   002ADE  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  6445   002AE0  500D               	movf	(___aomod@divisor+4)^0,w,c
  6446   002AE2  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  6447   002AE4  500E               	movf	(___aomod@divisor+5)^0,w,c
  6448   002AE6  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  6449   002AE8  500F               	movf	(___aomod@divisor+6)^0,w,c
  6450   002AEA  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  6451   002AEC  5010               	movf	(___aomod@divisor+7)^0,w,c
  6452   002AEE  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  6453   002AF0  A0D8               	btfss	status,0,c
  6454   002AF2  EF7D  F015         	goto	u2781
  6455   002AF6  EF7F  F015         	goto	u2780
  6456   002AFA                     u2781:
  6457   002AFA  EF8F  F015         	goto	l2807
  6458   002AFE                     u2780:
  6459   002AFE  5009               	movf	___aomod@divisor^0,w,c
  6460   002B00  5E01               	subwf	___aomod@dividend^0,f,c
  6461   002B02  500A               	movf	(___aomod@divisor+1)^0,w,c
  6462   002B04  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  6463   002B06  500B               	movf	(___aomod@divisor+2)^0,w,c
  6464   002B08  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  6465   002B0A  500C               	movf	(___aomod@divisor+3)^0,w,c
  6466   002B0C  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  6467   002B0E  500D               	movf	(___aomod@divisor+4)^0,w,c
  6468   002B10  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  6469   002B12  500E               	movf	(___aomod@divisor+5)^0,w,c
  6470   002B14  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  6471   002B16  500F               	movf	(___aomod@divisor+6)^0,w,c
  6472   002B18  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  6473   002B1A  5010               	movf	(___aomod@divisor+7)^0,w,c
  6474   002B1C  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  6475   002B1E                     l2807:
  6476   002B1E  90D8               	bcf	status,0,c
  6477   002B20  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  6478   002B22  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  6479   002B24  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  6480   002B26  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  6481   002B28  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  6482   002B2A  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  6483   002B2C  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  6484   002B2E  3209               	rrcf	___aomod@divisor^0,f,c
  6485   002B30  2E11               	decfsz	___aomod@counter^0,f,c
  6486   002B32  EF68  F015         	goto	l2803
  6487   002B36                     l2811:
  6488   002B36  5012               	movf	___aomod@sign^0,w,c
  6489   002B38  B4D8               	btfsc	status,2,c
  6490   002B3A  EFA1  F015         	goto	u2791
  6491   002B3E  EFA3  F015         	goto	u2790
  6492   002B42                     u2791:
  6493   002B42  EFB3  F015         	goto	l2815
  6494   002B46                     u2790:
  6495   002B46  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6496   002B48  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6497   002B4A  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6498   002B4C  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6499   002B4E  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6500   002B50  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6501   002B52  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6502   002B54  6C01               	negf	___aomod@dividend^0,c
  6503   002B56  0E00               	movlw	0
  6504   002B58  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6505   002B5A  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6506   002B5C  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6507   002B5E  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6508   002B60  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6509   002B62  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6510   002B64  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6511   002B66                     l2815:
  6512   002B66  C001  F001         	movff	___aomod@dividend,?___aomod
  6513   002B6A  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  6514   002B6E  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  6515   002B72  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  6516   002B76  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  6517   002B7A  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  6518   002B7E  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  6519   002B82  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  6520   002B86  0012               	return		;funcret
  6521   002B88                     __end_of___aomod:
  6522                           	callstack 0
  6523                           
  6524 ;; *************** function ___aodiv *****************
  6525 ;; Defined at:
  6526 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  6527 ;; Parameters:    Size  Location     Type
  6528 ;;  dividend        8    0[COMRAM] long long 
  6529 ;;  divisor         8    8[COMRAM] long long 
  6530 ;; Auto vars:     Size  Location     Type
  6531 ;;  quotient        8   18[COMRAM] long long 
  6532 ;;  sign            1   17[COMRAM] unsigned char 
  6533 ;;  counter         1   16[COMRAM] unsigned char 
  6534 ;; Return value:  Size  Location     Type
  6535 ;;                  8    0[COMRAM] long long 
  6536 ;; Registers used:
  6537 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6538 ;; Tracked objects:
  6539 ;;		On entry : 0/0
  6540 ;;		On exit  : 0/0
  6541 ;;		Unchanged: 0/0
  6542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6543 ;;      Params:        16       0       0       0       0       0       0
  6544 ;;      Locals:        10       0       0       0       0       0       0
  6545 ;;      Temps:          0       0       0       0       0       0       0
  6546 ;;      Totals:        26       0       0       0       0       0       0
  6547 ;;Total ram usage:       26 bytes
  6548 ;; Hardware stack levels used: 1
  6549 ;; This function calls:
  6550 ;;		Nothing
  6551 ;; This function is called by:
  6552 ;;		_dtoa
  6553 ;; This function uses a non-reentrant model
  6554 ;;
  6555                           
  6556                           	psect	text25
  6557   00289C                     __ptext25:
  6558                           	callstack 0
  6559   00289C                     ___aodiv:
  6560                           	callstack 25
  6561   00289C  0E00               	movlw	0
  6562   00289E  6E12               	movwf	___aodiv@sign^0,c
  6563   0028A0  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  6564   0028A2  EF57  F014         	goto	u2670
  6565   0028A6  EF55  F014         	goto	u2671
  6566   0028AA                     u2671:
  6567   0028AA  EF69  F014         	goto	l2747
  6568   0028AE                     u2670:
  6569   0028AE  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  6570   0028B0  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  6571   0028B2  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  6572   0028B4  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  6573   0028B6  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  6574   0028B8  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  6575   0028BA  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  6576   0028BC  6C09               	negf	___aodiv@divisor^0,c
  6577   0028BE  0E00               	movlw	0
  6578   0028C0  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  6579   0028C2  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  6580   0028C4  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  6581   0028C6  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  6582   0028C8  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  6583   0028CA  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  6584   0028CC  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  6585   0028CE  0E01               	movlw	1
  6586   0028D0  6E12               	movwf	___aodiv@sign^0,c
  6587   0028D2                     l2747:
  6588   0028D2  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  6589   0028D4  EF70  F014         	goto	u2680
  6590   0028D8  EF6E  F014         	goto	u2681
  6591   0028DC                     u2681:
  6592   0028DC  EF82  F014         	goto	l2753
  6593   0028E0                     u2680:
  6594   0028E0  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  6595   0028E2  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  6596   0028E4  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  6597   0028E6  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  6598   0028E8  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  6599   0028EA  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  6600   0028EC  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  6601   0028EE  6C01               	negf	___aodiv@dividend^0,c
  6602   0028F0  0E00               	movlw	0
  6603   0028F2  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  6604   0028F4  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  6605   0028F6  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  6606   0028F8  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  6607   0028FA  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  6608   0028FC  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  6609   0028FE  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  6610   002900  0E01               	movlw	1
  6611   002902  1A12               	xorwf	___aodiv@sign^0,f,c
  6612   002904                     l2753:
  6613   002904  EE20  F013         	lfsr	2,___aodiv@quotient
  6614   002908  0E07               	movlw	7
  6615   00290A                     u2691:
  6616   00290A  6ADE               	clrf	postinc2,c
  6617   00290C  06E8               	decf	wreg,f,c
  6618   00290E  E2FD               	bc	u2691
  6619   002910  5009               	movf	___aodiv@divisor^0,w,c
  6620   002912  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  6621   002914  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  6622   002916  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  6623   002918  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  6624   00291A  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  6625   00291C  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  6626   00291E  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  6627   002920  B4D8               	btfsc	status,2,c
  6628   002922  EF95  F014         	goto	u2701
  6629   002926  EF97  F014         	goto	u2700
  6630   00292A                     u2701:
  6631   00292A  EFE9  F014         	goto	l2775
  6632   00292E                     u2700:
  6633   00292E  0E01               	movlw	1
  6634   002930  6E11               	movwf	___aodiv@counter^0,c
  6635   002932  EFA5  F014         	goto	l2761
  6636   002936                     l2759:
  6637   002936  90D8               	bcf	status,0,c
  6638   002938  3609               	rlcf	___aodiv@divisor^0,f,c
  6639   00293A  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  6640   00293C  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  6641   00293E  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  6642   002940  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  6643   002942  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  6644   002944  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  6645   002946  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  6646   002948  2A11               	incf	___aodiv@counter^0,f,c
  6647   00294A                     l2761:
  6648   00294A  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  6649   00294C  EFAA  F014         	goto	u2711
  6650   002950  EFAC  F014         	goto	u2710
  6651   002954                     u2711:
  6652   002954  EF9B  F014         	goto	l2759
  6653   002958                     u2710:
  6654   002958                     l2763:
  6655   002958  90D8               	bcf	status,0,c
  6656   00295A  3613               	rlcf	___aodiv@quotient^0,f,c
  6657   00295C  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  6658   00295E  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  6659   002960  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  6660   002962  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  6661   002964  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  6662   002966  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  6663   002968  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  6664   00296A  5009               	movf	___aodiv@divisor^0,w,c
  6665   00296C  5C01               	subwf	___aodiv@dividend^0,w,c
  6666   00296E  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6667   002970  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  6668   002972  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6669   002974  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  6670   002976  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6671   002978  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  6672   00297A  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6673   00297C  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  6674   00297E  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6675   002980  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  6676   002982  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6677   002984  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  6678   002986  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6679   002988  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  6680   00298A  A0D8               	btfss	status,0,c
  6681   00298C  EFCA  F014         	goto	u2721
  6682   002990  EFCC  F014         	goto	u2720
  6683   002994                     u2721:
  6684   002994  EFDD  F014         	goto	l2771
  6685   002998                     u2720:
  6686   002998  5009               	movf	___aodiv@divisor^0,w,c
  6687   00299A  5E01               	subwf	___aodiv@dividend^0,f,c
  6688   00299C  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6689   00299E  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  6690   0029A0  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6691   0029A2  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  6692   0029A4  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6693   0029A6  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  6694   0029A8  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6695   0029AA  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  6696   0029AC  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6697   0029AE  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  6698   0029B0  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6699   0029B2  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  6700   0029B4  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6701   0029B6  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  6702   0029B8  8013               	bsf	___aodiv@quotient^0,0,c
  6703   0029BA                     l2771:
  6704   0029BA  90D8               	bcf	status,0,c
  6705   0029BC  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  6706   0029BE  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  6707   0029C0  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  6708   0029C2  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  6709   0029C4  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  6710   0029C6  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  6711   0029C8  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  6712   0029CA  3209               	rrcf	___aodiv@divisor^0,f,c
  6713   0029CC  2E11               	decfsz	___aodiv@counter^0,f,c
  6714   0029CE  EFAC  F014         	goto	l2763
  6715   0029D2                     l2775:
  6716   0029D2  5012               	movf	___aodiv@sign^0,w,c
  6717   0029D4  B4D8               	btfsc	status,2,c
  6718   0029D6  EFEF  F014         	goto	u2731
  6719   0029DA  EFF1  F014         	goto	u2730
  6720   0029DE                     u2731:
  6721   0029DE  EF01  F015         	goto	l2779
  6722   0029E2                     u2730:
  6723   0029E2  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  6724   0029E4  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  6725   0029E6  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  6726   0029E8  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  6727   0029EA  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  6728   0029EC  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  6729   0029EE  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  6730   0029F0  6C13               	negf	___aodiv@quotient^0,c
  6731   0029F2  0E00               	movlw	0
  6732   0029F4  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  6733   0029F6  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  6734   0029F8  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  6735   0029FA  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  6736   0029FC  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  6737   0029FE  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  6738   002A00  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  6739   002A02                     l2779:
  6740   002A02  C013  F001         	movff	___aodiv@quotient,?___aodiv
  6741   002A06  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  6742   002A0A  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  6743   002A0E  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  6744   002A12  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  6745   002A16  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  6746   002A1A  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  6747   002A1E  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  6748   002A22  0012               	return		;funcret
  6749   002A24                     __end_of___aodiv:
  6750                           	callstack 0
  6751                           
  6752 ;; *************** function _atoi *****************
  6753 ;; Defined at:
  6754 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
  6755 ;; Parameters:    Size  Location     Type
  6756 ;;  s               2    6[COMRAM] PTR const unsigned char 
  6757 ;;		 -> STR_1(31), 
  6758 ;; Auto vars:     Size  Location     Type
  6759 ;;  n               2   13[COMRAM] int 
  6760 ;;  neg             2   11[COMRAM] int 
  6761 ;; Return value:  Size  Location     Type
  6762 ;;                  2    6[COMRAM] int 
  6763 ;; Registers used:
  6764 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6765 ;; Tracked objects:
  6766 ;;		On entry : 0/0
  6767 ;;		On exit  : 0/0
  6768 ;;		Unchanged: 0/0
  6769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6770 ;;      Params:         2       0       0       0       0       0       0
  6771 ;;      Locals:         4       0       0       0       0       0       0
  6772 ;;      Temps:          3       0       0       0       0       0       0
  6773 ;;      Totals:         9       0       0       0       0       0       0
  6774 ;;Total ram usage:        9 bytes
  6775 ;; Hardware stack levels used: 1
  6776 ;; Hardware stack levels required when called: 1
  6777 ;; This function calls:
  6778 ;;		___wmul
  6779 ;;		_isdigit
  6780 ;;		_isspace
  6781 ;; This function is called by:
  6782 ;;		_vfpfcnvrt
  6783 ;; This function uses a non-reentrant model
  6784 ;;
  6785                           
  6786                           	psect	text26
  6787   002B88                     __ptext26:
  6788                           	callstack 0
  6789   002B88                     _atoi:
  6790                           	callstack 25
  6791   002B88  0E00               	movlw	0
  6792   002B8A  6E0F               	movwf	(atoi@n+1)^0,c
  6793   002B8C  0E00               	movlw	0
  6794   002B8E  6E0E               	movwf	atoi@n^0,c
  6795   002B90  0E00               	movlw	0
  6796   002B92  6E0D               	movwf	(atoi@neg+1)^0,c
  6797   002B94  0E00               	movlw	0
  6798   002B96  6E0C               	movwf	atoi@neg^0,c
  6799   002B98  EFD0  F015         	goto	l3591
  6800   002B9C                     l3587:
  6801   002B9C  4A07               	infsnz	atoi@s^0,f,c
  6802   002B9E  2A08               	incf	(atoi@s+1)^0,f,c
  6803   002BA0                     l3591:
  6804   002BA0  C007  FFF6         	movff	atoi@s,tblptrl
  6805   002BA4  C008  FFF7         	movff	atoi@s+1,tblptrh
  6806   002BA8                     	if	0	;tblptru may be non-zero
  6807   002BA8                     	endif
  6808   002BA8                     	if	0	;tblptru may be non-zero
  6809   002BA8                     	endif
  6810   002BA8  0008               	tblrd		*
  6811   002BAA  50F5               	movf	tablat,w,c
  6812   002BAC  0A20               	xorlw	32
  6813   002BAE  B4D8               	btfsc	status,2,c
  6814   002BB0  EFDC  F015         	goto	u4151
  6815   002BB4  EFDE  F015         	goto	u4150
  6816   002BB8                     u4151:
  6817   002BB8  EFCE  F015         	goto	l3587
  6818   002BBC                     u4150:
  6819   002BBC  C007  FFF6         	movff	atoi@s,tblptrl
  6820   002BC0  C008  FFF7         	movff	atoi@s+1,tblptrh
  6821   002BC4                     	if	0	;tblptru may be non-zero
  6822   002BC4                     	endif
  6823   002BC4                     	if	0	;tblptru may be non-zero
  6824   002BC4                     	endif
  6825   002BC4  0008               	tblrd		*
  6826   002BC6  CFF5 F009          	movff	tablat,??_atoi
  6827   002BCA  0EF7               	movlw	247
  6828   002BCC  2409               	addwf	??_atoi^0,w,c
  6829   002BCE  6E0A               	movwf	(??_atoi+1)^0,c
  6830   002BD0  6A0B               	clrf	(??_atoi+2)^0,c
  6831   002BD2  0EFF               	movlw	255
  6832   002BD4  220B               	addwfc	(??_atoi+2)^0,f,c
  6833   002BD6  500B               	movf	(??_atoi+2)^0,w,c
  6834   002BD8  E109               	bnz	u4160
  6835   002BDA  0E05               	movlw	5
  6836   002BDC  5C0A               	subwf	(??_atoi+1)^0,w,c
  6837   002BDE  A0D8               	btfss	status,0,c
  6838   002BE0  EFF4  F015         	goto	u4161
  6839   002BE4  EFF6  F015         	goto	u4160
  6840   002BE8                     u4161:
  6841   002BE8  EFCE  F015         	goto	l3587
  6842   002BEC                     u4160:
  6843   002BEC  EF00  F016         	goto	l3599
  6844   002BF0                     l3595:
  6845   002BF0  0E00               	movlw	0
  6846   002BF2  6E0D               	movwf	(atoi@neg+1)^0,c
  6847   002BF4  0E01               	movlw	1
  6848   002BF6  6E0C               	movwf	atoi@neg^0,c
  6849   002BF8                     l3597:
  6850   002BF8  4A07               	infsnz	atoi@s^0,f,c
  6851   002BFA  2A08               	incf	(atoi@s+1)^0,f,c
  6852   002BFC  EF35  F016         	goto	l3607
  6853   002C00                     l3599:
  6854   002C00  C007  FFF6         	movff	atoi@s,tblptrl
  6855   002C04  C008  FFF7         	movff	atoi@s+1,tblptrh
  6856   002C08                     	if	0	;tblptru may be non-zero
  6857   002C08                     	endif
  6858   002C08                     	if	0	;tblptru may be non-zero
  6859   002C08                     	endif
  6860   002C08  0008               	tblrd		*
  6861   002C0A  50F5               	movf	tablat,w,c
  6862   002C0C  6E09               	movwf	??_atoi^0,c
  6863   002C0E  6A0A               	clrf	(??_atoi+1)^0,c
  6864                           
  6865                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6866                           ; Switch size 1, requested type "simple"
  6867                           ; Number of cases is 1, Range of values is 0 to 0
  6868                           ; switch strategies available:
  6869                           ; Name         Instructions Cycles
  6870                           ; simple_byte            4     3 (average)
  6871                           ;	Chosen strategy is simple_byte
  6872   002C10  500A               	movf	(??_atoi+1)^0,w,c
  6873   002C12  0A00               	xorlw	0	; case 0
  6874   002C14  B4D8               	btfsc	status,2,c
  6875   002C16  EF0F  F016         	goto	l3953
  6876   002C1A  EF35  F016         	goto	l3607
  6877   002C1E                     l3953:
  6878                           
  6879                           ; Switch size 1, requested type "simple"
  6880                           ; Number of cases is 2, Range of values is 43 to 45
  6881                           ; switch strategies available:
  6882                           ; Name         Instructions Cycles
  6883                           ; simple_byte            7     4 (average)
  6884                           ;	Chosen strategy is simple_byte
  6885   002C1E  5009               	movf	??_atoi^0,w,c
  6886   002C20  0A2B               	xorlw	43	; case 43
  6887   002C22  B4D8               	btfsc	status,2,c
  6888   002C24  EFFC  F015         	goto	l3597
  6889   002C28  0A06               	xorlw	6	; case 45
  6890   002C2A  B4D8               	btfsc	status,2,c
  6891   002C2C  EFF8  F015         	goto	l3595
  6892   002C30  EF35  F016         	goto	l3607
  6893   002C34                     l3601:
  6894   002C34  C00E  F001         	movff	atoi@n,___wmul@multiplier
  6895   002C38  C00F  F002         	movff	atoi@n+1,___wmul@multiplier+1
  6896   002C3C  0E00               	movlw	0
  6897   002C3E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6898   002C40  0E0A               	movlw	10
  6899   002C42  6E03               	movwf	___wmul@multiplicand^0,c
  6900   002C44  EC06  F01B         	call	___wmul	;wreg free
  6901   002C48  C007  FFF6         	movff	atoi@s,tblptrl
  6902   002C4C  C008  FFF7         	movff	atoi@s+1,tblptrh
  6903   002C50                     	if	0	;tblptru may be non-zero
  6904   002C50                     	endif
  6905   002C50                     	if	0	;tblptru may be non-zero
  6906   002C50                     	endif
  6907   002C50  0008               	tblrd		*
  6908   002C52  50F5               	movf	tablat,w,c
  6909   002C54  5E01               	subwf	?___wmul^0,f,c
  6910   002C56  0E00               	movlw	0
  6911   002C58  5A02               	subwfb	(?___wmul+1)^0,f,c
  6912   002C5A  0E30               	movlw	48
  6913   002C5C  2401               	addwf	?___wmul^0,w,c
  6914   002C5E  6E0E               	movwf	atoi@n^0,c
  6915   002C60  0E00               	movlw	0
  6916   002C62  2002               	addwfc	(?___wmul+1)^0,w,c
  6917   002C64  6E0F               	movwf	(atoi@n+1)^0,c
  6918   002C66  EFFC  F015         	goto	l3597
  6919   002C6A                     l3607:
  6920   002C6A  C007  FFF6         	movff	atoi@s,tblptrl
  6921   002C6E  C008  FFF7         	movff	atoi@s+1,tblptrh
  6922   002C72                     	if	0	;tblptru may be non-zero
  6923   002C72                     	endif
  6924   002C72                     	if	0	;tblptru may be non-zero
  6925   002C72                     	endif
  6926   002C72  0008               	tblrd		*
  6927   002C74  CFF5 F009          	movff	tablat,??_atoi
  6928   002C78  0ED0               	movlw	208
  6929   002C7A  2409               	addwf	??_atoi^0,w,c
  6930   002C7C  6E0A               	movwf	(??_atoi+1)^0,c
  6931   002C7E  6A0B               	clrf	(??_atoi+2)^0,c
  6932   002C80  0EFF               	movlw	255
  6933   002C82  220B               	addwfc	(??_atoi+2)^0,f,c
  6934   002C84  500B               	movf	(??_atoi+2)^0,w,c
  6935   002C86  E109               	bnz	u4170
  6936   002C88  0E0A               	movlw	10
  6937   002C8A  5C0A               	subwf	(??_atoi+1)^0,w,c
  6938   002C8C  A0D8               	btfss	status,0,c
  6939   002C8E  EF4B  F016         	goto	u4171
  6940   002C92  EF4D  F016         	goto	u4170
  6941   002C96                     u4171:
  6942   002C96  EF1A  F016         	goto	l3601
  6943   002C9A                     u4170:
  6944   002C9A  500C               	movf	atoi@neg^0,w,c
  6945   002C9C  100D               	iorwf	(atoi@neg+1)^0,w,c
  6946   002C9E  A4D8               	btfss	status,2,c
  6947   002CA0  EF54  F016         	goto	u4181
  6948   002CA4  EF56  F016         	goto	u4180
  6949   002CA8                     u4181:
  6950   002CA8  EF64  F016         	goto	l985
  6951   002CAC                     u4180:
  6952   002CAC  C00E  F009         	movff	atoi@n,??_atoi
  6953   002CB0  C00F  F00A         	movff	atoi@n+1,??_atoi+1
  6954   002CB4  1E09               	comf	??_atoi^0,f,c
  6955   002CB6  1E0A               	comf	(??_atoi+1)^0,f,c
  6956   002CB8  4A09               	infsnz	??_atoi^0,f,c
  6957   002CBA  2A0A               	incf	(??_atoi+1)^0,f,c
  6958   002CBC  C009  F007         	movff	??_atoi,?_atoi
  6959   002CC0  C00A  F008         	movff	??_atoi+1,?_atoi+1
  6960   002CC4  EF68  F016         	goto	l988
  6961   002CC8                     l985:
  6962   002CC8  C00E  F007         	movff	atoi@n,?_atoi
  6963   002CCC  C00F  F008         	movff	atoi@n+1,?_atoi+1
  6964   002CD0                     l988:
  6965   002CD0  0012               	return		;funcret
  6966   002CD2                     __end_of_atoi:
  6967                           	callstack 0
  6968                           
  6969 ;; *************** function _isspace *****************
  6970 ;; Defined at:
  6971 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  6972 ;; Parameters:    Size  Location     Type
  6973 ;;  c               2    0[COMRAM] int 
  6974 ;; Auto vars:     Size  Location     Type
  6975 ;;		None
  6976 ;; Return value:  Size  Location     Type
  6977 ;;                  2    0[COMRAM] int 
  6978 ;; Registers used:
  6979 ;;		wreg, status,2, status,0
  6980 ;; Tracked objects:
  6981 ;;		On entry : 0/0
  6982 ;;		On exit  : 0/0
  6983 ;;		Unchanged: 0/0
  6984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6985 ;;      Params:         2       0       0       0       0       0       0
  6986 ;;      Locals:         1       0       0       0       0       0       0
  6987 ;;      Temps:          2       0       0       0       0       0       0
  6988 ;;      Totals:         5       0       0       0       0       0       0
  6989 ;;Total ram usage:        5 bytes
  6990 ;; Hardware stack levels used: 1
  6991 ;; This function calls:
  6992 ;;		Nothing
  6993 ;; This function is called by:
  6994 ;;		_atoi
  6995 ;; This function uses a non-reentrant model
  6996 ;;
  6997                           
  6998                           	psect	text27
  6999   00346E                     __ptext27:
  7000                           	callstack 0
  7001   00346E                     _isspace:
  7002                           	callstack 25
  7003   00346E  0E01               	movlw	1
  7004   003470  6E05               	movwf	_isspace$996^0,c
  7005   003472  0E20               	movlw	32
  7006   003474  1801               	xorwf	isspace@c^0,w,c
  7007   003476  1002               	iorwf	(isspace@c+1)^0,w,c
  7008   003478  B4D8               	btfsc	status,2,c
  7009   00347A  EF41  F01A         	goto	u3651
  7010   00347E  EF43  F01A         	goto	u3650
  7011   003482                     u3651:
  7012   003482  EF56  F01A         	goto	l3287
  7013   003486                     u3650:
  7014   003486  0EF7               	movlw	247
  7015   003488  2401               	addwf	isspace@c^0,w,c
  7016   00348A  6E03               	movwf	??_isspace^0,c
  7017   00348C  0EFF               	movlw	255
  7018   00348E  2002               	addwfc	(isspace@c+1)^0,w,c
  7019   003490  6E04               	movwf	(??_isspace+1)^0,c
  7020   003492  5004               	movf	(??_isspace+1)^0,w,c
  7021   003494  E109               	bnz	u3660
  7022   003496  0E05               	movlw	5
  7023   003498  5C03               	subwf	??_isspace^0,w,c
  7024   00349A  A0D8               	btfss	status,0,c
  7025   00349C  EF52  F01A         	goto	u3661
  7026   0034A0  EF54  F01A         	goto	u3660
  7027   0034A4                     u3661:
  7028   0034A4  EF56  F01A         	goto	l3287
  7029   0034A8                     u3660:
  7030   0034A8  0E00               	movlw	0
  7031   0034AA  6E05               	movwf	_isspace$996^0,c
  7032   0034AC                     l3287:
  7033   0034AC  C005  F001         	movff	_isspace$996,?_isspace
  7034   0034B0  6A02               	clrf	(?_isspace+1)^0,c
  7035   0034B2  0012               	return		;funcret
  7036   0034B4                     __end_of_isspace:
  7037                           	callstack 0
  7038                           
  7039 ;; *************** function _isdigit *****************
  7040 ;; Defined at:
  7041 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  7042 ;; Parameters:    Size  Location     Type
  7043 ;;  c               2    0[COMRAM] int 
  7044 ;; Auto vars:     Size  Location     Type
  7045 ;;		None
  7046 ;; Return value:  Size  Location     Type
  7047 ;;                  2    0[COMRAM] int 
  7048 ;; Registers used:
  7049 ;;		wreg, status,2, status,0
  7050 ;; Tracked objects:
  7051 ;;		On entry : 0/0
  7052 ;;		On exit  : 0/0
  7053 ;;		Unchanged: 0/0
  7054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7055 ;;      Params:         2       0       0       0       0       0       0
  7056 ;;      Locals:         0       0       0       0       0       0       0
  7057 ;;      Temps:          2       0       0       0       0       0       0
  7058 ;;      Totals:         4       0       0       0       0       0       0
  7059 ;;Total ram usage:        4 bytes
  7060 ;; Hardware stack levels used: 1
  7061 ;; This function calls:
  7062 ;;		Nothing
  7063 ;; This function is called by:
  7064 ;;		_vfpfcnvrt
  7065 ;;		_atoi
  7066 ;; This function uses a non-reentrant model
  7067 ;;
  7068                           
  7069                           	psect	text28
  7070   0035E0                     __ptext28:
  7071                           	callstack 0
  7072   0035E0                     _isdigit:
  7073                           	callstack 26
  7074   0035E0  0ED0               	movlw	208
  7075   0035E2  2401               	addwf	isdigit@c^0,w,c
  7076   0035E4  6E03               	movwf	??_isdigit^0,c
  7077   0035E6  0EFF               	movlw	255
  7078   0035E8  2002               	addwfc	(isdigit@c+1)^0,w,c
  7079   0035EA  6E04               	movwf	(??_isdigit+1)^0,c
  7080   0035EC  5004               	movf	(??_isdigit+1)^0,w,c
  7081   0035EE  E10A               	bnz	u3630
  7082   0035F0  0E0A               	movlw	10
  7083   0035F2  5C03               	subwf	??_isdigit^0,w,c
  7084   0035F4  A0D8               	btfss	status,0,c
  7085   0035F6  EFFF  F01A         	goto	u3631
  7086   0035FA  EF02  F01B         	goto	u3630
  7087   0035FE                     u3631:
  7088   0035FE  0E01               	movlw	1
  7089   003600  EF03  F01B         	goto	u3640
  7090   003604                     u3630:
  7091   003604  0E00               	movlw	0
  7092   003606                     u3640:
  7093   003606  6E01               	movwf	?_isdigit^0,c
  7094   003608  6A02               	clrf	(?_isdigit+1)^0,c
  7095   00360A  0012               	return		;funcret
  7096   00360C                     __end_of_isdigit:
  7097                           	callstack 0
  7098                           
  7099 ;; *************** function ___wmul *****************
  7100 ;; Defined at:
  7101 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  7102 ;; Parameters:    Size  Location     Type
  7103 ;;  multiplier      2    0[COMRAM] unsigned int 
  7104 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7105 ;; Auto vars:     Size  Location     Type
  7106 ;;  product         2    4[COMRAM] unsigned int 
  7107 ;; Return value:  Size  Location     Type
  7108 ;;                  2    0[COMRAM] unsigned int 
  7109 ;; Registers used:
  7110 ;;		wreg, status,2, status,0, prodl, prodh
  7111 ;; Tracked objects:
  7112 ;;		On entry : 0/0
  7113 ;;		On exit  : 0/0
  7114 ;;		Unchanged: 0/0
  7115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7116 ;;      Params:         4       0       0       0       0       0       0
  7117 ;;      Locals:         2       0       0       0       0       0       0
  7118 ;;      Temps:          0       0       0       0       0       0       0
  7119 ;;      Totals:         6       0       0       0       0       0       0
  7120 ;;Total ram usage:        6 bytes
  7121 ;; Hardware stack levels used: 1
  7122 ;; This function calls:
  7123 ;;		Nothing
  7124 ;; This function is called by:
  7125 ;;		_atoi
  7126 ;; This function uses a non-reentrant model
  7127 ;;
  7128                           
  7129                           	psect	text29
  7130   00360C                     __ptext29:
  7131                           	callstack 0
  7132   00360C                     ___wmul:
  7133                           	callstack 25
  7134   00360C  5001               	movf	___wmul@multiplier^0,w,c
  7135   00360E  0203               	mulwf	___wmul@multiplicand^0,c
  7136   003610  CFF3 F005          	movff	prodl,___wmul@product
  7137   003614  CFF4 F006          	movff	prodh,___wmul@product+1
  7138   003618  5001               	movf	___wmul@multiplier^0,w,c
  7139   00361A  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  7140   00361C  50F3               	movf	243,w,c
  7141   00361E  2606               	addwf	(___wmul@product+1)^0,f,c
  7142   003620  5002               	movf	(___wmul@multiplier+1)^0,w,c
  7143   003622  0203               	mulwf	___wmul@multiplicand^0,c
  7144   003624  50F3               	movf	243,w,c
  7145   003626  2606               	addwf	(___wmul@product+1)^0,f,c
  7146   003628  C005  F001         	movff	___wmul@product,?___wmul
  7147   00362C  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7148   003630  0012               	return		;funcret
  7149   003632                     __end_of___wmul:
  7150                           	callstack 0
  7151                           
  7152 ;; *************** function _eusart_string *****************
  7153 ;; Defined at:
  7154 ;;		line 23 in file "eusart.c"
  7155 ;; Parameters:    Size  Location     Type
  7156 ;;  str             2    1[COMRAM] PTR unsigned char 
  7157 ;;		 -> BufferSERIAL(64), 
  7158 ;; Auto vars:     Size  Location     Type
  7159 ;;		None
  7160 ;; Return value:  Size  Location     Type
  7161 ;;                  1    wreg      void 
  7162 ;; Registers used:
  7163 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7164 ;; Tracked objects:
  7165 ;;		On entry : 0/0
  7166 ;;		On exit  : 0/0
  7167 ;;		Unchanged: 0/0
  7168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7169 ;;      Params:         2       0       0       0       0       0       0
  7170 ;;      Locals:         0       0       0       0       0       0       0
  7171 ;;      Temps:          0       0       0       0       0       0       0
  7172 ;;      Totals:         2       0       0       0       0       0       0
  7173 ;;Total ram usage:        2 bytes
  7174 ;; Hardware stack levels used: 1
  7175 ;; Hardware stack levels required when called: 1
  7176 ;; This function calls:
  7177 ;;		_eusart_write
  7178 ;; This function is called by:
  7179 ;;		_transmiter_DATA
  7180 ;; This function uses a non-reentrant model
  7181 ;;
  7182                           
  7183                           	psect	text30
  7184   0035B0                     __ptext30:
  7185                           	callstack 0
  7186   0035B0                     _eusart_string:
  7187                           	callstack 28
  7188   0035B0                     
  7189                           ;eusart.c: 23: void eusart_string(char *str);eusart.c: 24: {;eusart.c: 25:     while(*st
      +                          r!='\0')
  7190   0035B0  EFE3  F01A         	goto	l3765
  7191   0035B4                     l3761:
  7192                           
  7193                           ;eusart.c: 26:     {;eusart.c: 27:         eusart_write(*str);
  7194   0035B4  C002  FFD9         	movff	eusart_string@str,fsr2l
  7195   0035B8  C003  FFDA         	movff	eusart_string@str+1,fsr2h
  7196   0035BC  50DF               	movf	indf2,w,c
  7197   0035BE  EC39  F01B         	call	_eusart_write
  7198   0035C2                     
  7199                           ;eusart.c: 28:         str++;
  7200   0035C2  4A02               	infsnz	eusart_string@str^0,f,c
  7201   0035C4  2A03               	incf	(eusart_string@str+1)^0,f,c
  7202   0035C6                     l3765:
  7203                           
  7204                           ;eusart.c: 25:     while(*str!='\0')
  7205   0035C6  C002  FFD9         	movff	eusart_string@str,fsr2l
  7206   0035CA  C003  FFDA         	movff	eusart_string@str+1,fsr2h
  7207   0035CE  50DF               	movf	indf2,w,c
  7208   0035D0  A4D8               	btfss	status,2,c
  7209   0035D2  EFED  F01A         	goto	u4321
  7210   0035D6  EFEF  F01A         	goto	u4320
  7211   0035DA                     u4321:
  7212   0035DA  EFDA  F01A         	goto	l3761
  7213   0035DE                     u4320:
  7214   0035DE  0012               	return		;funcret
  7215   0035E0                     __end_of_eusart_string:
  7216                           	callstack 0
  7217                           
  7218 ;; *************** function _eusart_write *****************
  7219 ;; Defined at:
  7220 ;;		line 16 in file "eusart.c"
  7221 ;; Parameters:    Size  Location     Type
  7222 ;;  c               1    wreg     unsigned char 
  7223 ;; Auto vars:     Size  Location     Type
  7224 ;;  c               1    0[COMRAM] unsigned char 
  7225 ;; Return value:  Size  Location     Type
  7226 ;;                  1    wreg      void 
  7227 ;; Registers used:
  7228 ;;		wreg
  7229 ;; Tracked objects:
  7230 ;;		On entry : 0/0
  7231 ;;		On exit  : 0/0
  7232 ;;		Unchanged: 0/0
  7233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7234 ;;      Params:         0       0       0       0       0       0       0
  7235 ;;      Locals:         1       0       0       0       0       0       0
  7236 ;;      Temps:          0       0       0       0       0       0       0
  7237 ;;      Totals:         1       0       0       0       0       0       0
  7238 ;;Total ram usage:        1 bytes
  7239 ;; Hardware stack levels used: 1
  7240 ;; This function calls:
  7241 ;;		Nothing
  7242 ;; This function is called by:
  7243 ;;		_eusart_string
  7244 ;; This function uses a non-reentrant model
  7245 ;;
  7246                           
  7247                           	psect	text31
  7248   003672                     __ptext31:
  7249                           	callstack 0
  7250   003672                     _eusart_write:
  7251                           	callstack 28
  7252                           
  7253                           ;incstack = 0
  7254                           ;eusart_write@c stored from wreg
  7255   003672  6E01               	movwf	eusart_write@c^0,c
  7256   003674                     l22:
  7257   003674  A2AC               	btfss	4012,1,c	;volatile
  7258   003676  EF3F  F01B         	goto	u4301
  7259   00367A  EF41  F01B         	goto	u4300
  7260   00367E                     u4301:
  7261   00367E  EF3A  F01B         	goto	l22
  7262   003682                     u4300:
  7263   003682                     
  7264                           ;eusart.c: 19:     TXREG = c;
  7265   003682  C001  FFAD         	movff	eusart_write@c,4013	;volatile
  7266   003686  0012               	return		;funcret
  7267   003688                     __end_of_eusart_write:
  7268                           	callstack 0
  7269                           
  7270 ;; *************** function _eusart_init *****************
  7271 ;; Defined at:
  7272 ;;		line 4 in file "eusart.c"
  7273 ;; Parameters:    Size  Location     Type
  7274 ;;		None
  7275 ;; Auto vars:     Size  Location     Type
  7276 ;;		None
  7277 ;; Return value:  Size  Location     Type
  7278 ;;                  1    wreg      void 
  7279 ;; Registers used:
  7280 ;;		wreg, status,2
  7281 ;; Tracked objects:
  7282 ;;		On entry : 0/0
  7283 ;;		On exit  : 0/0
  7284 ;;		Unchanged: 0/0
  7285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7286 ;;      Params:         0       0       0       0       0       0       0
  7287 ;;      Locals:         0       0       0       0       0       0       0
  7288 ;;      Temps:          0       0       0       0       0       0       0
  7289 ;;      Totals:         0       0       0       0       0       0       0
  7290 ;;Total ram usage:        0 bytes
  7291 ;; Hardware stack levels used: 1
  7292 ;; This function calls:
  7293 ;;		Nothing
  7294 ;; This function is called by:
  7295 ;;		_main
  7296 ;; This function uses a non-reentrant model
  7297 ;;
  7298                           
  7299                           	psect	text32
  7300   003688                     __ptext32:
  7301                           	callstack 0
  7302   003688                     _eusart_init:
  7303                           	callstack 30
  7304   003688                     
  7305                           ;eusart.c: 6:     TXSTAbits.TXEN = 1;
  7306   003688  8AAC               	bsf	172,5,c	;volatile
  7307                           
  7308                           ;eusart.c: 7:     RCSTAbits.CREN = 1;
  7309   00368A  88AB               	bsf	171,4,c	;volatile
  7310                           
  7311                           ;eusart.c: 8:     TXSTAbits.SYNC = 0;
  7312   00368C  98AC               	bcf	172,4,c	;volatile
  7313                           
  7314                           ;eusart.c: 9:     RCSTAbits.SPEN = 1;
  7315   00368E  8EAB               	bsf	171,7,c	;volatile
  7316                           
  7317                           ;eusart.c: 10:     TXSTAbits.BRGH = 0;
  7318   003690  94AC               	bcf	172,2,c	;volatile
  7319                           
  7320                           ;eusart.c: 11:     BAUDCTLbits.BRG16 = 0;
  7321   003692  96B8               	bcf	184,3,c	;volatile
  7322   003694                     
  7323                           ;eusart.c: 12:     SPBRG = 12;
  7324   003694  0E0C               	movlw	12
  7325   003696  6EAF               	movwf	175,c	;volatile
  7326   003698  0012               	return		;funcret
  7327   00369A                     __end_of_eusart_init:
  7328                           	callstack 0
  7329                           
  7330 ;; *************** function _conv_AN0 *****************
  7331 ;; Defined at:
  7332 ;;		line 86 in file "Program_main.c"
  7333 ;; Parameters:    Size  Location     Type
  7334 ;;		None
  7335 ;; Auto vars:     Size  Location     Type
  7336 ;;		None
  7337 ;; Return value:  Size  Location     Type
  7338 ;;                  1    wreg      void 
  7339 ;; Registers used:
  7340 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7341 ;; Tracked objects:
  7342 ;;		On entry : 0/0
  7343 ;;		On exit  : 0/0
  7344 ;;		Unchanged: 0/0
  7345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7346 ;;      Params:         0       0       0       0       0       0       0
  7347 ;;      Locals:         0       0       0       0       0       0       0
  7348 ;;      Temps:          2       0       0       0       0       0       0
  7349 ;;      Totals:         2       0       0       0       0       0       0
  7350 ;;Total ram usage:        2 bytes
  7351 ;; Hardware stack levels used: 1
  7352 ;; Hardware stack levels required when called: 1
  7353 ;; This function calls:
  7354 ;;		___flmul
  7355 ;;		___xxtofl
  7356 ;; This function is called by:
  7357 ;;		_main
  7358 ;; This function uses a non-reentrant model
  7359 ;;
  7360                           
  7361                           	psect	text33
  7362   0031F8                     __ptext33:
  7363                           	callstack 0
  7364   0031F8                     _conv_AN0:
  7365                           	callstack 29
  7366   0031F8                     
  7367                           ;Program_main.c: 88:     _delay((unsigned long)((200)*(8000000/4000.0)));
  7368   0031F8  0E03               	movlw	3
  7369   0031FA  6E29               	movwf	(??_conv_AN0+1)^0,c
  7370   0031FC  0E08               	movlw	8
  7371   0031FE  6E28               	movwf	??_conv_AN0^0,c
  7372   003200  0E77               	movlw	119
  7373   003202                     u4457:
  7374   003202  2EE8               	decfsz	wreg,f,c
  7375   003204  D7FE               	bra	u4457
  7376   003206  2E28               	decfsz	??_conv_AN0^0,f,c
  7377   003208  D7FC               	bra	u4457
  7378   00320A  2E29               	decfsz	(??_conv_AN0+1)^0,f,c
  7379   00320C  D7FA               	bra	u4457
  7380   00320E  F000               	nop	
  7381   003210                     
  7382                           ;Program_main.c: 89:     ADCON0bits.GO = 1;
  7383   003210  82C2               	bsf	194,1,c	;volatile
  7384   003212                     l76:
  7385   003212  B2C2               	btfsc	194,1,c	;volatile
  7386   003214  EF0E  F019         	goto	u4431
  7387   003218  EF10  F019         	goto	u4430
  7388   00321C                     u4431:
  7389   00321C  EF09  F019         	goto	l76
  7390   003220                     u4430:
  7391   003220                     
  7392                           ;Program_main.c: 91:     VdigADC = ADRESH;
  7393   003220  CFC4 F090          	movff	4036,_VdigADC	;volatile
  7394   003224  0100               	movlb	0	; () banked
  7395   003226  6B91               	clrf	(_VdigADC+1)& (0+255),b
  7396   003228                     
  7397                           ; BSR set to: 0
  7398                           ;Program_main.c: 92:     VdigADC = (VdigADC << 8) + ADRESL;
  7399   003228  5190               	movf	_VdigADC& (0+255),w,b
  7400   00322A  6E28               	movwf	??_conv_AN0^0,c
  7401   00322C  50C3               	movf	195,w,c	;volatile
  7402   00322E  6F90               	movwf	_VdigADC& (0+255),b
  7403   003230  C028  F091         	movff	??_conv_AN0,_VdigADC+1
  7404   003234                     
  7405                           ; BSR set to: 0
  7406                           ;Program_main.c: 93:     VoltageADC = VdigADC * 4.89e-3;
  7407   003234  C090  F001         	movff	_VdigADC,___xxtofl@val
  7408   003238  C091  F002         	movff	_VdigADC+1,___xxtofl@val+1
  7409   00323C  6A03               	clrf	(___xxtofl@val+2)^0,c
  7410   00323E  6A04               	clrf	(___xxtofl@val+3)^0,c
  7411   003240  0E00               	movlw	0
  7412   003242  EC74  F013         	call	___xxtofl
  7413   003246  C001  F00F         	movff	?___xxtofl,___flmul@b
  7414   00324A  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  7415   00324E  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  7416   003252  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  7417   003256  0E4B               	movlw	75
  7418   003258  6E13               	movwf	___flmul@a^0,c
  7419   00325A  0E3C               	movlw	60
  7420   00325C  6E14               	movwf	(___flmul@a+1)^0,c
  7421   00325E  0EA0               	movlw	160
  7422   003260  6E15               	movwf	(___flmul@a+2)^0,c
  7423   003262  0E3B               	movlw	59
  7424   003264  6E16               	movwf	(___flmul@a+3)^0,c
  7425   003266  EC2E  F00D         	call	___flmul	;wreg free
  7426   00326A  C00F  F088         	movff	?___flmul,_VoltageADC
  7427   00326E  C010  F089         	movff	?___flmul+1,_VoltageADC+1
  7428   003272  C011  F08A         	movff	?___flmul+2,_VoltageADC+2
  7429   003276  C012  F08B         	movff	?___flmul+3,_VoltageADC+3
  7430   00327A  0012               	return		;funcret
  7431   00327C                     __end_of_conv_AN0:
  7432                           	callstack 0
  7433                           
  7434 ;; *************** function ___xxtofl *****************
  7435 ;; Defined at:
  7436 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  7437 ;; Parameters:    Size  Location     Type
  7438 ;;  sign            1    wreg     unsigned char 
  7439 ;;  val             4    0[COMRAM] long 
  7440 ;; Auto vars:     Size  Location     Type
  7441 ;;  sign            1    8[COMRAM] unsigned char 
  7442 ;;  arg             4   10[COMRAM] unsigned long 
  7443 ;;  exp             1    9[COMRAM] unsigned char 
  7444 ;; Return value:  Size  Location     Type
  7445 ;;                  4    0[COMRAM] unsigned char 
  7446 ;; Registers used:
  7447 ;;		wreg, status,2, status,0
  7448 ;; Tracked objects:
  7449 ;;		On entry : 0/0
  7450 ;;		On exit  : 0/0
  7451 ;;		Unchanged: 0/0
  7452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7453 ;;      Params:         4       0       0       0       0       0       0
  7454 ;;      Locals:         6       0       0       0       0       0       0
  7455 ;;      Temps:          4       0       0       0       0       0       0
  7456 ;;      Totals:        14       0       0       0       0       0       0
  7457 ;;Total ram usage:       14 bytes
  7458 ;; Hardware stack levels used: 1
  7459 ;; This function calls:
  7460 ;;		Nothing
  7461 ;; This function is called by:
  7462 ;;		_conv_AN0
  7463 ;; This function uses a non-reentrant model
  7464 ;;
  7465                           
  7466                           	psect	text34
  7467   0026E8                     __ptext34:
  7468                           	callstack 0
  7469   0026E8                     ___xxtofl:
  7470                           	callstack 29
  7471                           
  7472                           ;incstack = 0
  7473                           ;___xxtofl@sign stored from wreg
  7474   0026E8  6E09               	movwf	___xxtofl@sign^0,c
  7475   0026EA  5009               	movf	___xxtofl@sign^0,w,c
  7476   0026EC  B4D8               	btfsc	status,2,c
  7477   0026EE  EF7B  F013         	goto	u4331
  7478   0026F2  EF7D  F013         	goto	u4330
  7479   0026F6                     u4331:
  7480   0026F6  EF9F  F013         	goto	l748
  7481   0026FA                     u4330:
  7482   0026FA  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7483   0026FC  EF84  F013         	goto	u4340
  7484   002700  EF82  F013         	goto	u4341
  7485   002704                     u4341:
  7486   002704  EF9F  F013         	goto	l748
  7487   002708                     u4340:
  7488   002708  C001  F005         	movff	___xxtofl@val,??___xxtofl
  7489   00270C  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  7490   002710  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  7491   002714  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  7492   002718  1E05               	comf	??___xxtofl^0,f,c
  7493   00271A  1E06               	comf	(??___xxtofl+1)^0,f,c
  7494   00271C  1E07               	comf	(??___xxtofl+2)^0,f,c
  7495   00271E  1E08               	comf	(??___xxtofl+3)^0,f,c
  7496   002720  2A05               	incf	??___xxtofl^0,f,c
  7497   002722  0E00               	movlw	0
  7498   002724  2206               	addwfc	(??___xxtofl+1)^0,f,c
  7499   002726  2207               	addwfc	(??___xxtofl+2)^0,f,c
  7500   002728  2208               	addwfc	(??___xxtofl+3)^0,f,c
  7501   00272A  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  7502   00272E  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  7503   002732  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  7504   002736  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  7505   00273A  EFA7  F013         	goto	l3785
  7506   00273E                     l748:
  7507   00273E  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  7508   002742  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7509   002746  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7510   00274A  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7511   00274E                     l3785:
  7512   00274E  5001               	movf	___xxtofl@val^0,w,c
  7513   002750  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  7514   002752  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  7515   002754  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  7516   002756  A4D8               	btfss	status,2,c
  7517   002758  EFB0  F013         	goto	u4351
  7518   00275C  EFB2  F013         	goto	u4350
  7519   002760                     u4351:
  7520   002760  EFBC  F013         	goto	l3791
  7521   002764                     u4350:
  7522   002764  0E00               	movlw	0
  7523   002766  6E01               	movwf	?___xxtofl^0,c
  7524   002768  0E00               	movlw	0
  7525   00276A  6E02               	movwf	(?___xxtofl+1)^0,c
  7526   00276C  0E00               	movlw	0
  7527   00276E  6E03               	movwf	(?___xxtofl+2)^0,c
  7528   002770  0E00               	movlw	0
  7529   002772  6E04               	movwf	(?___xxtofl+3)^0,c
  7530   002774  EF4D  F014         	goto	l751
  7531   002778                     l3791:
  7532   002778  0E96               	movlw	150
  7533   00277A  6E0A               	movwf	___xxtofl@exp^0,c
  7534   00277C  EFC6  F013         	goto	l3795
  7535   002780                     l3793:
  7536   002780  2A0A               	incf	___xxtofl@exp^0,f,c
  7537   002782  90D8               	bcf	status,0,c
  7538   002784  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7539   002786  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7540   002788  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7541   00278A  320B               	rrcf	___xxtofl@arg^0,f,c
  7542   00278C                     l3795:
  7543   00278C  0E00               	movlw	0
  7544   00278E  140B               	andwf	___xxtofl@arg^0,w,c
  7545   002790  6E05               	movwf	??___xxtofl^0,c
  7546   002792  0E00               	movlw	0
  7547   002794  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7548   002796  6E06               	movwf	(??___xxtofl+1)^0,c
  7549   002798  0E00               	movlw	0
  7550   00279A  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7551   00279C  6E07               	movwf	(??___xxtofl+2)^0,c
  7552   00279E  0EFE               	movlw	254
  7553   0027A0  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7554   0027A2  6E08               	movwf	(??___xxtofl+3)^0,c
  7555   0027A4  5005               	movf	??___xxtofl^0,w,c
  7556   0027A6  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7557   0027A8  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7558   0027AA  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7559   0027AC  A4D8               	btfss	status,2,c
  7560   0027AE  EFDB  F013         	goto	u4361
  7561   0027B2  EFDD  F013         	goto	u4360
  7562   0027B6                     u4361:
  7563   0027B6  EFC0  F013         	goto	l3793
  7564   0027BA                     u4360:
  7565   0027BA  EFEB  F013         	goto	l755
  7566   0027BE                     l3797:
  7567   0027BE  2A0A               	incf	___xxtofl@exp^0,f,c
  7568   0027C0  0E01               	movlw	1
  7569   0027C2  260B               	addwf	___xxtofl@arg^0,f,c
  7570   0027C4  0E00               	movlw	0
  7571   0027C6  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  7572   0027C8  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  7573   0027CA  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  7574   0027CC  90D8               	bcf	status,0,c
  7575   0027CE  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7576   0027D0  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7577   0027D2  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7578   0027D4  320B               	rrcf	___xxtofl@arg^0,f,c
  7579   0027D6                     l755:
  7580   0027D6  0E00               	movlw	0
  7581   0027D8  140B               	andwf	___xxtofl@arg^0,w,c
  7582   0027DA  6E05               	movwf	??___xxtofl^0,c
  7583   0027DC  0E00               	movlw	0
  7584   0027DE  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7585   0027E0  6E06               	movwf	(??___xxtofl+1)^0,c
  7586   0027E2  0E00               	movlw	0
  7587   0027E4  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7588   0027E6  6E07               	movwf	(??___xxtofl+2)^0,c
  7589   0027E8  0EFF               	movlw	255
  7590   0027EA  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7591   0027EC  6E08               	movwf	(??___xxtofl+3)^0,c
  7592   0027EE  5005               	movf	??___xxtofl^0,w,c
  7593   0027F0  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7594   0027F2  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7595   0027F4  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7596   0027F6  A4D8               	btfss	status,2,c
  7597   0027F8  EF00  F014         	goto	u4371
  7598   0027FC  EF02  F014         	goto	u4370
  7599   002800                     u4371:
  7600   002800  EFDF  F013         	goto	l3797
  7601   002804                     u4370:
  7602   002804  EF0A  F014         	goto	l3805
  7603   002808                     l3803:
  7604   002808  060A               	decf	___xxtofl@exp^0,f,c
  7605   00280A  90D8               	bcf	status,0,c
  7606   00280C  360B               	rlcf	___xxtofl@arg^0,f,c
  7607   00280E  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  7608   002810  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  7609   002812  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  7610   002814                     l3805:
  7611   002814  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  7612   002816  EF0F  F014         	goto	u4381
  7613   00281A  EF11  F014         	goto	u4380
  7614   00281E                     u4381:
  7615   00281E  EF19  F014         	goto	l762
  7616   002822                     u4380:
  7617   002822  0E02               	movlw	2
  7618   002824  600A               	cpfslt	___xxtofl@exp^0,c
  7619   002826  EF17  F014         	goto	u4391
  7620   00282A  EF19  F014         	goto	u4390
  7621   00282E                     u4391:
  7622   00282E  EF04  F014         	goto	l3803
  7623   002832                     u4390:
  7624   002832                     l762:
  7625   002832  B00A               	btfsc	___xxtofl@exp^0,0,c
  7626   002834  EF1E  F014         	goto	u4401
  7627   002838  EF20  F014         	goto	u4400
  7628   00283C                     u4401:
  7629   00283C  EF21  F014         	goto	l3811
  7630   002840                     u4400:
  7631   002840  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  7632   002842                     l3811:
  7633   002842  90D8               	bcf	status,0,c
  7634   002844  320A               	rrcf	___xxtofl@exp^0,f,c
  7635   002846  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  7636   00284A  6A06               	clrf	(??___xxtofl+1)^0,c
  7637   00284C  6A07               	clrf	(??___xxtofl+2)^0,c
  7638   00284E  6A08               	clrf	(??___xxtofl+3)^0,c
  7639   002850  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  7640   002854  6A07               	clrf	(??___xxtofl+2)^0,c
  7641   002856  6A06               	clrf	(??___xxtofl+1)^0,c
  7642   002858  6A05               	clrf	??___xxtofl^0,c
  7643   00285A  5005               	movf	??___xxtofl^0,w,c
  7644   00285C  120B               	iorwf	___xxtofl@arg^0,f,c
  7645   00285E  5006               	movf	(??___xxtofl+1)^0,w,c
  7646   002860  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  7647   002862  5007               	movf	(??___xxtofl+2)^0,w,c
  7648   002864  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  7649   002866  5008               	movf	(??___xxtofl+3)^0,w,c
  7650   002868  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  7651   00286A  5009               	movf	___xxtofl@sign^0,w,c
  7652   00286C  B4D8               	btfsc	status,2,c
  7653   00286E  EF3B  F014         	goto	u4411
  7654   002872  EF3D  F014         	goto	u4410
  7655   002876                     u4411:
  7656   002876  EF45  F014         	goto	l3821
  7657   00287A                     u4410:
  7658   00287A  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7659   00287C  EF44  F014         	goto	u4420
  7660   002880  EF42  F014         	goto	u4421
  7661   002884                     u4421:
  7662   002884  EF45  F014         	goto	l3821
  7663   002888                     u4420:
  7664   002888  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  7665   00288A                     l3821:
  7666   00288A  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  7667   00288E  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  7668   002892  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  7669   002896  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  7670   00289A                     l751:
  7671   00289A  0012               	return		;funcret
  7672   00289C                     __end_of___xxtofl:
  7673                           	callstack 0
  7674                           
  7675 ;; *************** function ___flmul *****************
  7676 ;; Defined at:
  7677 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  7678 ;; Parameters:    Size  Location     Type
  7679 ;;  b               4   14[COMRAM] unsigned char 
  7680 ;;  a               4   18[COMRAM] unsigned char 
  7681 ;; Auto vars:     Size  Location     Type
  7682 ;;  prod            4   33[COMRAM] struct .
  7683 ;;  grs             4   27[COMRAM] unsigned long 
  7684 ;;  temp            2   37[COMRAM] struct .
  7685 ;;  bexp            1   32[COMRAM] unsigned char 
  7686 ;;  aexp            1   31[COMRAM] unsigned char 
  7687 ;;  sign            1   26[COMRAM] unsigned char 
  7688 ;; Return value:  Size  Location     Type
  7689 ;;                  4   14[COMRAM] unsigned char 
  7690 ;; Registers used:
  7691 ;;		wreg, status,2, status,0, prodl, prodh
  7692 ;; Tracked objects:
  7693 ;;		On entry : 0/0
  7694 ;;		On exit  : 0/0
  7695 ;;		Unchanged: 0/0
  7696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7697 ;;      Params:         8       0       0       0       0       0       0
  7698 ;;      Locals:        13       0       0       0       0       0       0
  7699 ;;      Temps:          4       0       0       0       0       0       0
  7700 ;;      Totals:        25       0       0       0       0       0       0
  7701 ;;Total ram usage:       25 bytes
  7702 ;; Hardware stack levels used: 1
  7703 ;; This function calls:
  7704 ;;		Nothing
  7705 ;; This function is called by:
  7706 ;;		_conv_AN0
  7707 ;;		_efgtoa
  7708 ;; This function uses a non-reentrant model
  7709 ;;
  7710                           
  7711                           	psect	text35
  7712   001A5C                     __ptext35:
  7713                           	callstack 0
  7714   001A5C                     ___flmul:
  7715                           	callstack 25
  7716   001A5C  5012               	movf	(___flmul@b+3)^0,w,c
  7717   001A5E  0B80               	andlw	128
  7718   001A60  6E1B               	movwf	___flmul@sign^0,c
  7719   001A62  5012               	movf	(___flmul@b+3)^0,w,c
  7720   001A64  2412               	addwf	(___flmul@b+3)^0,w,c
  7721   001A66  6E21               	movwf	___flmul@bexp^0,c
  7722   001A68  AE11               	btfss	(___flmul@b+2)^0,7,c
  7723   001A6A  EF39  F00D         	goto	u3031
  7724   001A6E  EF3B  F00D         	goto	u3030
  7725   001A72                     u3031:
  7726   001A72  EF3C  F00D         	goto	l2963
  7727   001A76                     u3030:
  7728   001A76  8021               	bsf	___flmul@bexp^0,0,c
  7729   001A78                     l2963:
  7730   001A78  5021               	movf	___flmul@bexp^0,w,c
  7731   001A7A  B4D8               	btfsc	status,2,c
  7732   001A7C  EF42  F00D         	goto	u3041
  7733   001A80  EF44  F00D         	goto	u3040
  7734   001A84                     u3041:
  7735   001A84  EF57  F00D         	goto	l2971
  7736   001A88                     u3040:
  7737   001A88  2821               	incf	___flmul@bexp^0,w,c
  7738   001A8A  A4D8               	btfss	status,2,c
  7739   001A8C  EF4A  F00D         	goto	u3051
  7740   001A90  EF4C  F00D         	goto	u3050
  7741   001A94                     u3051:
  7742   001A94  EF54  F00D         	goto	l2969
  7743   001A98                     u3050:
  7744   001A98  0E00               	movlw	0
  7745   001A9A  6E0F               	movwf	___flmul@b^0,c
  7746   001A9C  0E00               	movlw	0
  7747   001A9E  6E10               	movwf	(___flmul@b+1)^0,c
  7748   001AA0  0E00               	movlw	0
  7749   001AA2  6E11               	movwf	(___flmul@b+2)^0,c
  7750   001AA4  0E00               	movlw	0
  7751   001AA6  6E12               	movwf	(___flmul@b+3)^0,c
  7752   001AA8                     l2969:
  7753   001AA8  8E11               	bsf	(___flmul@b+2)^0,7,c
  7754   001AAA  EF5F  F00D         	goto	l2973
  7755   001AAE                     l2971:
  7756   001AAE  0E00               	movlw	0
  7757   001AB0  6E0F               	movwf	___flmul@b^0,c
  7758   001AB2  0E00               	movlw	0
  7759   001AB4  6E10               	movwf	(___flmul@b+1)^0,c
  7760   001AB6  0E00               	movlw	0
  7761   001AB8  6E11               	movwf	(___flmul@b+2)^0,c
  7762   001ABA  0E00               	movlw	0
  7763   001ABC  6E12               	movwf	(___flmul@b+3)^0,c
  7764   001ABE                     l2973:
  7765   001ABE  5016               	movf	(___flmul@a+3)^0,w,c
  7766   001AC0  0B80               	andlw	128
  7767   001AC2  1A1B               	xorwf	___flmul@sign^0,f,c
  7768   001AC4  5016               	movf	(___flmul@a+3)^0,w,c
  7769   001AC6  2416               	addwf	(___flmul@a+3)^0,w,c
  7770   001AC8  6E20               	movwf	___flmul@aexp^0,c
  7771   001ACA  AE15               	btfss	(___flmul@a+2)^0,7,c
  7772   001ACC  EF6A  F00D         	goto	u3061
  7773   001AD0  EF6C  F00D         	goto	u3060
  7774   001AD4                     u3061:
  7775   001AD4  EF6D  F00D         	goto	l2981
  7776   001AD8                     u3060:
  7777   001AD8  8020               	bsf	___flmul@aexp^0,0,c
  7778   001ADA                     l2981:
  7779   001ADA  5020               	movf	___flmul@aexp^0,w,c
  7780   001ADC  B4D8               	btfsc	status,2,c
  7781   001ADE  EF73  F00D         	goto	u3071
  7782   001AE2  EF75  F00D         	goto	u3070
  7783   001AE6                     u3071:
  7784   001AE6  EF88  F00D         	goto	l2989
  7785   001AEA                     u3070:
  7786   001AEA  2820               	incf	___flmul@aexp^0,w,c
  7787   001AEC  A4D8               	btfss	status,2,c
  7788   001AEE  EF7B  F00D         	goto	u3081
  7789   001AF2  EF7D  F00D         	goto	u3080
  7790   001AF6                     u3081:
  7791   001AF6  EF85  F00D         	goto	l2987
  7792   001AFA                     u3080:
  7793   001AFA  0E00               	movlw	0
  7794   001AFC  6E13               	movwf	___flmul@a^0,c
  7795   001AFE  0E00               	movlw	0
  7796   001B00  6E14               	movwf	(___flmul@a+1)^0,c
  7797   001B02  0E00               	movlw	0
  7798   001B04  6E15               	movwf	(___flmul@a+2)^0,c
  7799   001B06  0E00               	movlw	0
  7800   001B08  6E16               	movwf	(___flmul@a+3)^0,c
  7801   001B0A                     l2987:
  7802   001B0A  8E15               	bsf	(___flmul@a+2)^0,7,c
  7803   001B0C  EF90  F00D         	goto	l707
  7804   001B10                     l2989:
  7805   001B10  0E00               	movlw	0
  7806   001B12  6E13               	movwf	___flmul@a^0,c
  7807   001B14  0E00               	movlw	0
  7808   001B16  6E14               	movwf	(___flmul@a+1)^0,c
  7809   001B18  0E00               	movlw	0
  7810   001B1A  6E15               	movwf	(___flmul@a+2)^0,c
  7811   001B1C  0E00               	movlw	0
  7812   001B1E  6E16               	movwf	(___flmul@a+3)^0,c
  7813   001B20                     l707:
  7814   001B20  5020               	movf	___flmul@aexp^0,w,c
  7815   001B22  B4D8               	btfsc	status,2,c
  7816   001B24  EF96  F00D         	goto	u3091
  7817   001B28  EF98  F00D         	goto	u3090
  7818   001B2C                     u3091:
  7819   001B2C  EFA0  F00D         	goto	l2993
  7820   001B30                     u3090:
  7821   001B30  5021               	movf	___flmul@bexp^0,w,c
  7822   001B32  A4D8               	btfss	status,2,c
  7823   001B34  EF9E  F00D         	goto	u3101
  7824   001B38  EFA0  F00D         	goto	u3100
  7825   001B3C                     u3101:
  7826   001B3C  EFAA  F00D         	goto	l2997
  7827   001B40                     u3100:
  7828   001B40                     l2993:
  7829   001B40  0E00               	movlw	0
  7830   001B42  6E0F               	movwf	?___flmul^0,c
  7831   001B44  0E00               	movlw	0
  7832   001B46  6E10               	movwf	(?___flmul+1)^0,c
  7833   001B48  0E00               	movlw	0
  7834   001B4A  6E11               	movwf	(?___flmul+2)^0,c
  7835   001B4C  0E00               	movlw	0
  7836   001B4E  6E12               	movwf	(?___flmul+3)^0,c
  7837   001B50  EF42  F00F         	goto	l711
  7838   001B54                     l2997:
  7839   001B54  5015               	movf	(___flmul@a+2)^0,w,c
  7840   001B56  020F               	mulwf	___flmul@b^0,c
  7841   001B58  CFF3 F026          	movff	prodl,___flmul@temp
  7842   001B5C  CFF4 F027          	movff	prodh,___flmul@temp+1
  7843   001B60  5026               	movf	___flmul@temp^0,w,c
  7844   001B62  6E1C               	movwf	___flmul@grs^0,c
  7845   001B64  6A1D               	clrf	(___flmul@grs+1)^0,c
  7846   001B66  6A1E               	clrf	(___flmul@grs+2)^0,c
  7847   001B68  6A1F               	clrf	(___flmul@grs+3)^0,c
  7848   001B6A  5027               	movf	(___flmul@temp+1)^0,w,c
  7849   001B6C  6E22               	movwf	___flmul@prod^0,c
  7850   001B6E  6A23               	clrf	(___flmul@prod+1)^0,c
  7851   001B70  6A24               	clrf	(___flmul@prod+2)^0,c
  7852   001B72  6A25               	clrf	(___flmul@prod+3)^0,c
  7853   001B74  5014               	movf	(___flmul@a+1)^0,w,c
  7854   001B76  0210               	mulwf	(___flmul@b+1)^0,c
  7855   001B78  CFF3 F026          	movff	prodl,___flmul@temp
  7856   001B7C  CFF4 F027          	movff	prodh,___flmul@temp+1
  7857   001B80  5026               	movf	___flmul@temp^0,w,c
  7858   001B82  261C               	addwf	___flmul@grs^0,f,c
  7859   001B84  0E00               	movlw	0
  7860   001B86  221D               	addwfc	(___flmul@grs+1)^0,f,c
  7861   001B88  221E               	addwfc	(___flmul@grs+2)^0,f,c
  7862   001B8A  221F               	addwfc	(___flmul@grs+3)^0,f,c
  7863   001B8C  5027               	movf	(___flmul@temp+1)^0,w,c
  7864   001B8E  2622               	addwf	___flmul@prod^0,f,c
  7865   001B90  0E00               	movlw	0
  7866   001B92  2223               	addwfc	(___flmul@prod+1)^0,f,c
  7867   001B94  2224               	addwfc	(___flmul@prod+2)^0,f,c
  7868   001B96  2225               	addwfc	(___flmul@prod+3)^0,f,c
  7869   001B98  5013               	movf	___flmul@a^0,w,c
  7870   001B9A  0211               	mulwf	(___flmul@b+2)^0,c
  7871   001B9C  CFF3 F026          	movff	prodl,___flmul@temp
  7872   001BA0  CFF4 F027          	movff	prodh,___flmul@temp+1
  7873   001BA4  5026               	movf	___flmul@temp^0,w,c
  7874   001BA6  261C               	addwf	___flmul@grs^0,f,c
  7875   001BA8  0E00               	movlw	0
  7876   001BAA  221D               	addwfc	(___flmul@grs+1)^0,f,c
  7877   001BAC  221E               	addwfc	(___flmul@grs+2)^0,f,c
  7878   001BAE  221F               	addwfc	(___flmul@grs+3)^0,f,c
  7879   001BB0  5027               	movf	(___flmul@temp+1)^0,w,c
  7880   001BB2  2622               	addwf	___flmul@prod^0,f,c
  7881   001BB4  0E00               	movlw	0
  7882   001BB6  2223               	addwfc	(___flmul@prod+1)^0,f,c
  7883   001BB8  2224               	addwfc	(___flmul@prod+2)^0,f,c
  7884   001BBA  2225               	addwfc	(___flmul@prod+3)^0,f,c
  7885   001BBC  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  7886   001BC0  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  7887   001BC4  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  7888   001BC8  6A1C               	clrf	___flmul@grs^0,c
  7889   001BCA  5013               	movf	___flmul@a^0,w,c
  7890   001BCC  0210               	mulwf	(___flmul@b+1)^0,c
  7891   001BCE  CFF3 F026          	movff	prodl,___flmul@temp
  7892   001BD2  CFF4 F027          	movff	prodh,___flmul@temp+1
  7893   001BD6  5026               	movf	___flmul@temp^0,w,c
  7894   001BD8  261C               	addwf	___flmul@grs^0,f,c
  7895   001BDA  5027               	movf	(___flmul@temp+1)^0,w,c
  7896   001BDC  221D               	addwfc	(___flmul@grs+1)^0,f,c
  7897   001BDE  0E00               	movlw	0
  7898   001BE0  221E               	addwfc	(___flmul@grs+2)^0,f,c
  7899   001BE2  0E00               	movlw	0
  7900   001BE4  221F               	addwfc	(___flmul@grs+3)^0,f,c
  7901   001BE6  5014               	movf	(___flmul@a+1)^0,w,c
  7902   001BE8  020F               	mulwf	___flmul@b^0,c
  7903   001BEA  CFF3 F026          	movff	prodl,___flmul@temp
  7904   001BEE  CFF4 F027          	movff	prodh,___flmul@temp+1
  7905   001BF2  5026               	movf	___flmul@temp^0,w,c
  7906   001BF4  261C               	addwf	___flmul@grs^0,f,c
  7907   001BF6  5027               	movf	(___flmul@temp+1)^0,w,c
  7908   001BF8  221D               	addwfc	(___flmul@grs+1)^0,f,c
  7909   001BFA  0E00               	movlw	0
  7910   001BFC  221E               	addwfc	(___flmul@grs+2)^0,f,c
  7911   001BFE  0E00               	movlw	0
  7912   001C00  221F               	addwfc	(___flmul@grs+3)^0,f,c
  7913   001C02  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  7914   001C06  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  7915   001C0A  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  7916   001C0E  6A1C               	clrf	___flmul@grs^0,c
  7917   001C10  5013               	movf	___flmul@a^0,w,c
  7918   001C12  020F               	mulwf	___flmul@b^0,c
  7919   001C14  CFF3 F026          	movff	prodl,___flmul@temp
  7920   001C18  CFF4 F027          	movff	prodh,___flmul@temp+1
  7921   001C1C  5026               	movf	___flmul@temp^0,w,c
  7922   001C1E  261C               	addwf	___flmul@grs^0,f,c
  7923   001C20  5027               	movf	(___flmul@temp+1)^0,w,c
  7924   001C22  221D               	addwfc	(___flmul@grs+1)^0,f,c
  7925   001C24  0E00               	movlw	0
  7926   001C26  221E               	addwfc	(___flmul@grs+2)^0,f,c
  7927   001C28  0E00               	movlw	0
  7928   001C2A  221F               	addwfc	(___flmul@grs+3)^0,f,c
  7929   001C2C  5015               	movf	(___flmul@a+2)^0,w,c
  7930   001C2E  0210               	mulwf	(___flmul@b+1)^0,c
  7931   001C30  CFF3 F026          	movff	prodl,___flmul@temp
  7932   001C34  CFF4 F027          	movff	prodh,___flmul@temp+1
  7933   001C38  5026               	movf	___flmul@temp^0,w,c
  7934   001C3A  2622               	addwf	___flmul@prod^0,f,c
  7935   001C3C  5027               	movf	(___flmul@temp+1)^0,w,c
  7936   001C3E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  7937   001C40  0E00               	movlw	0
  7938   001C42  2224               	addwfc	(___flmul@prod+2)^0,f,c
  7939   001C44  0E00               	movlw	0
  7940   001C46  2225               	addwfc	(___flmul@prod+3)^0,f,c
  7941   001C48  5014               	movf	(___flmul@a+1)^0,w,c
  7942   001C4A  0211               	mulwf	(___flmul@b+2)^0,c
  7943   001C4C  CFF3 F026          	movff	prodl,___flmul@temp
  7944   001C50  CFF4 F027          	movff	prodh,___flmul@temp+1
  7945   001C54  5026               	movf	___flmul@temp^0,w,c
  7946   001C56  2622               	addwf	___flmul@prod^0,f,c
  7947   001C58  5027               	movf	(___flmul@temp+1)^0,w,c
  7948   001C5A  2223               	addwfc	(___flmul@prod+1)^0,f,c
  7949   001C5C  0E00               	movlw	0
  7950   001C5E  2224               	addwfc	(___flmul@prod+2)^0,f,c
  7951   001C60  0E00               	movlw	0
  7952   001C62  2225               	addwfc	(___flmul@prod+3)^0,f,c
  7953   001C64  5015               	movf	(___flmul@a+2)^0,w,c
  7954   001C66  0211               	mulwf	(___flmul@b+2)^0,c
  7955   001C68  CFF3 F026          	movff	prodl,___flmul@temp
  7956   001C6C  CFF4 F027          	movff	prodh,___flmul@temp+1
  7957   001C70  5026               	movf	___flmul@temp^0,w,c
  7958   001C72  6E17               	movwf	??___flmul^0,c
  7959   001C74  5027               	movf	(___flmul@temp+1)^0,w,c
  7960   001C76  6E18               	movwf	(??___flmul+1)^0,c
  7961   001C78  6A19               	clrf	(??___flmul+2)^0,c
  7962   001C7A  6A1A               	clrf	(??___flmul+3)^0,c
  7963   001C7C  C019  F01A         	movff	??___flmul+2,??___flmul+3
  7964   001C80  C018  F019         	movff	??___flmul+1,??___flmul+2
  7965   001C84  C017  F018         	movff	??___flmul,??___flmul+1
  7966   001C88  6A17               	clrf	??___flmul^0,c
  7967   001C8A  5017               	movf	??___flmul^0,w,c
  7968   001C8C  2622               	addwf	___flmul@prod^0,f,c
  7969   001C8E  5018               	movf	(??___flmul+1)^0,w,c
  7970   001C90  2223               	addwfc	(___flmul@prod+1)^0,f,c
  7971   001C92  5019               	movf	(??___flmul+2)^0,w,c
  7972   001C94  2224               	addwfc	(___flmul@prod+2)^0,f,c
  7973   001C96  501A               	movf	(??___flmul+3)^0,w,c
  7974   001C98  2225               	addwfc	(___flmul@prod+3)^0,f,c
  7975   001C9A  C01C  F017         	movff	___flmul@grs,??___flmul
  7976   001C9E  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  7977   001CA2  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  7978   001CA6  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  7979   001CAA  0E19               	movlw	25
  7980   001CAC  EF5D  F00E         	goto	u3110
  7981   001CB0                     u3115:
  7982   001CB0  90D8               	bcf	status,0,c
  7983   001CB2  321A               	rrcf	(??___flmul+3)^0,f,c
  7984   001CB4  3219               	rrcf	(??___flmul+2)^0,f,c
  7985   001CB6  3218               	rrcf	(??___flmul+1)^0,f,c
  7986   001CB8  3217               	rrcf	??___flmul^0,f,c
  7987   001CBA                     u3110:
  7988   001CBA  2EE8               	decfsz	wreg,f,c
  7989   001CBC  EF58  F00E         	goto	u3115
  7990   001CC0  5017               	movf	??___flmul^0,w,c
  7991   001CC2  2622               	addwf	___flmul@prod^0,f,c
  7992   001CC4  5018               	movf	(??___flmul+1)^0,w,c
  7993   001CC6  2223               	addwfc	(___flmul@prod+1)^0,f,c
  7994   001CC8  5019               	movf	(??___flmul+2)^0,w,c
  7995   001CCA  2224               	addwfc	(___flmul@prod+2)^0,f,c
  7996   001CCC  501A               	movf	(??___flmul+3)^0,w,c
  7997   001CCE  2225               	addwfc	(___flmul@prod+3)^0,f,c
  7998   001CD0  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  7999   001CD4  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  8000   001CD8  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  8001   001CDC  6A1C               	clrf	___flmul@grs^0,c
  8002   001CDE  5020               	movf	___flmul@aexp^0,w,c
  8003   001CE0  C021  F017         	movff	___flmul@bexp,??___flmul
  8004   001CE4  6A18               	clrf	(??___flmul+1)^0,c
  8005   001CE6  2617               	addwf	??___flmul^0,f,c
  8006   001CE8  0E00               	movlw	0
  8007   001CEA  2218               	addwfc	(??___flmul+1)^0,f,c
  8008   001CEC  0E82               	movlw	130
  8009   001CEE  2417               	addwf	??___flmul^0,w,c
  8010   001CF0  6E26               	movwf	___flmul@temp^0,c
  8011   001CF2  0EFF               	movlw	255
  8012   001CF4  2018               	addwfc	(??___flmul+1)^0,w,c
  8013   001CF6  6E27               	movwf	(___flmul@temp+1)^0,c
  8014   001CF8  EF93  F00E         	goto	l3045
  8015   001CFC                     l3039:
  8016   001CFC  90D8               	bcf	status,0,c
  8017   001CFE  3622               	rlcf	___flmul@prod^0,f,c
  8018   001D00  3623               	rlcf	(___flmul@prod+1)^0,f,c
  8019   001D02  3624               	rlcf	(___flmul@prod+2)^0,f,c
  8020   001D04  3625               	rlcf	(___flmul@prod+3)^0,f,c
  8021   001D06  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  8022   001D08  EF88  F00E         	goto	u3121
  8023   001D0C  EF8A  F00E         	goto	u3120
  8024   001D10                     u3121:
  8025   001D10  EF8B  F00E         	goto	l714
  8026   001D14                     u3120:
  8027   001D14  8022               	bsf	___flmul@prod^0,0,c
  8028   001D16                     l714:
  8029   001D16  90D8               	bcf	status,0,c
  8030   001D18  361C               	rlcf	___flmul@grs^0,f,c
  8031   001D1A  361D               	rlcf	(___flmul@grs+1)^0,f,c
  8032   001D1C  361E               	rlcf	(___flmul@grs+2)^0,f,c
  8033   001D1E  361F               	rlcf	(___flmul@grs+3)^0,f,c
  8034   001D20  0626               	decf	___flmul@temp^0,f,c
  8035   001D22  A0D8               	btfss	status,0,c
  8036   001D24  0627               	decf	(___flmul@temp+1)^0,f,c
  8037   001D26                     l3045:
  8038   001D26  AE24               	btfss	(___flmul@prod+2)^0,7,c
  8039   001D28  EF98  F00E         	goto	u3131
  8040   001D2C  EF9A  F00E         	goto	u3130
  8041   001D30                     u3131:
  8042   001D30  EF7E  F00E         	goto	l3039
  8043   001D34                     u3130:
  8044   001D34  0E00               	movlw	0
  8045   001D36  6E20               	movwf	___flmul@aexp^0,c
  8046   001D38  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  8047   001D3A  EFA1  F00E         	goto	u3141
  8048   001D3E  EFA3  F00E         	goto	u3140
  8049   001D42                     u3141:
  8050   001D42  EFC7  F00E         	goto	l716
  8051   001D46                     u3140:
  8052   001D46  0EFF               	movlw	255
  8053   001D48  141C               	andwf	___flmul@grs^0,w,c
  8054   001D4A  6E17               	movwf	??___flmul^0,c
  8055   001D4C  0EFF               	movlw	255
  8056   001D4E  141D               	andwf	(___flmul@grs+1)^0,w,c
  8057   001D50  6E18               	movwf	(??___flmul+1)^0,c
  8058   001D52  0EFF               	movlw	255
  8059   001D54  141E               	andwf	(___flmul@grs+2)^0,w,c
  8060   001D56  6E19               	movwf	(??___flmul+2)^0,c
  8061   001D58  0E7F               	movlw	127
  8062   001D5A  141F               	andwf	(___flmul@grs+3)^0,w,c
  8063   001D5C  6E1A               	movwf	(??___flmul+3)^0,c
  8064   001D5E  5017               	movf	??___flmul^0,w,c
  8065   001D60  1018               	iorwf	(??___flmul+1)^0,w,c
  8066   001D62  1019               	iorwf	(??___flmul+2)^0,w,c
  8067   001D64  101A               	iorwf	(??___flmul+3)^0,w,c
  8068   001D66  B4D8               	btfsc	status,2,c
  8069   001D68  EFB8  F00E         	goto	u3151
  8070   001D6C  EFBA  F00E         	goto	u3150
  8071   001D70                     u3151:
  8072   001D70  EFBE  F00E         	goto	l717
  8073   001D74                     u3150:
  8074   001D74                     l3053:
  8075   001D74  0E01               	movlw	1
  8076   001D76  6E20               	movwf	___flmul@aexp^0,c
  8077   001D78  EFC7  F00E         	goto	l716
  8078   001D7C                     l717:
  8079   001D7C  A022               	btfss	___flmul@prod^0,0,c
  8080   001D7E  EFC3  F00E         	goto	u3161
  8081   001D82  EFC5  F00E         	goto	u3160
  8082   001D86                     u3161:
  8083   001D86  EFC7  F00E         	goto	l716
  8084   001D8A                     u3160:
  8085   001D8A  EFBA  F00E         	goto	l3053
  8086   001D8E                     l716:
  8087   001D8E  5020               	movf	___flmul@aexp^0,w,c
  8088   001D90  B4D8               	btfsc	status,2,c
  8089   001D92  EFCD  F00E         	goto	u3171
  8090   001D96  EFCF  F00E         	goto	u3170
  8091   001D9A                     u3171:
  8092   001D9A  EFF3  F00E         	goto	l3065
  8093   001D9E                     u3170:
  8094   001D9E  0E01               	movlw	1
  8095   001DA0  2622               	addwf	___flmul@prod^0,f,c
  8096   001DA2  0E00               	movlw	0
  8097   001DA4  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8098   001DA6  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8099   001DA8  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8100   001DAA  A025               	btfss	(___flmul@prod+3)^0,0,c
  8101   001DAC  EFDA  F00E         	goto	u3181
  8102   001DB0  EFDC  F00E         	goto	u3180
  8103   001DB4                     u3181:
  8104   001DB4  EFF3  F00E         	goto	l3065
  8105   001DB8                     u3180:
  8106   001DB8  C022  F017         	movff	___flmul@prod,??___flmul
  8107   001DBC  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  8108   001DC0  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  8109   001DC4  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  8110   001DC8  341A               	rlcf	(??___flmul+3)^0,w,c
  8111   001DCA  321A               	rrcf	(??___flmul+3)^0,f,c
  8112   001DCC  3219               	rrcf	(??___flmul+2)^0,f,c
  8113   001DCE  3218               	rrcf	(??___flmul+1)^0,f,c
  8114   001DD0  3217               	rrcf	??___flmul^0,f,c
  8115   001DD2  C017  F022         	movff	??___flmul,___flmul@prod
  8116   001DD6  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  8117   001DDA  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  8118   001DDE  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  8119   001DE2  4A26               	infsnz	___flmul@temp^0,f,c
  8120   001DE4  2A27               	incf	(___flmul@temp+1)^0,f,c
  8121   001DE6                     l3065:
  8122   001DE6  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  8123   001DE8  EFFE  F00E         	goto	u3191
  8124   001DEC  5027               	movf	(___flmul@temp+1)^0,w,c
  8125   001DEE  E108               	bnz	u3190
  8126   001DF0  2826               	incf	___flmul@temp^0,w,c
  8127   001DF2  A0D8               	btfss	status,0,c
  8128   001DF4  EFFE  F00E         	goto	u3191
  8129   001DF8  EF00  F00F         	goto	u3190
  8130   001DFC                     u3191:
  8131   001DFC  EF0A  F00F         	goto	l3069
  8132   001E00                     u3190:
  8133   001E00  0E00               	movlw	0
  8134   001E02  6E22               	movwf	___flmul@prod^0,c
  8135   001E04  0E00               	movlw	0
  8136   001E06  6E23               	movwf	(___flmul@prod+1)^0,c
  8137   001E08  0E80               	movlw	128
  8138   001E0A  6E24               	movwf	(___flmul@prod+2)^0,c
  8139   001E0C  0E7F               	movlw	127
  8140   001E0E  6E25               	movwf	(___flmul@prod+3)^0,c
  8141   001E10  EF38  F00F         	goto	l3081
  8142   001E14                     l3069:
  8143   001E14  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  8144   001E16  EF17  F00F         	goto	u3200
  8145   001E1A  5027               	movf	(___flmul@temp+1)^0,w,c
  8146   001E1C  E106               	bnz	u3201
  8147   001E1E  0426               	decf	___flmul@temp^0,w,c
  8148   001E20  B0D8               	btfsc	status,0,c
  8149   001E22  EF15  F00F         	goto	u3201
  8150   001E26  EF17  F00F         	goto	u3200
  8151   001E2A                     u3201:
  8152   001E2A  EF23  F00F         	goto	l724
  8153   001E2E                     u3200:
  8154   001E2E  0E00               	movlw	0
  8155   001E30  6E22               	movwf	___flmul@prod^0,c
  8156   001E32  0E00               	movlw	0
  8157   001E34  6E23               	movwf	(___flmul@prod+1)^0,c
  8158   001E36  0E00               	movlw	0
  8159   001E38  6E24               	movwf	(___flmul@prod+2)^0,c
  8160   001E3A  0E00               	movlw	0
  8161   001E3C  6E25               	movwf	(___flmul@prod+3)^0,c
  8162   001E3E  0E00               	movlw	0
  8163   001E40  6E1B               	movwf	___flmul@sign^0,c
  8164   001E42  EF38  F00F         	goto	l3081
  8165   001E46                     l724:
  8166   001E46  C026  F021         	movff	___flmul@temp,___flmul@bexp
  8167   001E4A  0EFF               	movlw	255
  8168   001E4C  1622               	andwf	___flmul@prod^0,f,c
  8169   001E4E  0EFF               	movlw	255
  8170   001E50  1623               	andwf	(___flmul@prod+1)^0,f,c
  8171   001E52  0E7F               	movlw	127
  8172   001E54  1624               	andwf	(___flmul@prod+2)^0,f,c
  8173   001E56  0E00               	movlw	0
  8174   001E58  1625               	andwf	(___flmul@prod+3)^0,f,c
  8175   001E5A  A021               	btfss	___flmul@bexp^0,0,c
  8176   001E5C  EF32  F00F         	goto	u3211
  8177   001E60  EF34  F00F         	goto	u3210
  8178   001E64                     u3211:
  8179   001E64  EF35  F00F         	goto	l3079
  8180   001E68                     u3210:
  8181   001E68  8E24               	bsf	(___flmul@prod+2)^0,7,c
  8182   001E6A                     l3079:
  8183   001E6A  90D8               	bcf	status,0,c
  8184   001E6C  3021               	rrcf	___flmul@bexp^0,w,c
  8185   001E6E  6E25               	movwf	(___flmul@prod+3)^0,c
  8186   001E70                     l3081:
  8187   001E70  501B               	movf	___flmul@sign^0,w,c
  8188   001E72  1225               	iorwf	(___flmul@prod+3)^0,f,c
  8189   001E74  C022  F00F         	movff	___flmul@prod,?___flmul
  8190   001E78  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  8191   001E7C  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  8192   001E80  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  8193   001E84                     l711:
  8194   001E84  0012               	return		;funcret
  8195   001E86                     __end_of___flmul:
  8196                           	callstack 0
  8197                           
  8198 ;; *************** function _config_FOSC *****************
  8199 ;; Defined at:
  8200 ;;		line 81 in file "Program_main.c"
  8201 ;; Parameters:    Size  Location     Type
  8202 ;;		None
  8203 ;; Auto vars:     Size  Location     Type
  8204 ;;		None
  8205 ;; Return value:  Size  Location     Type
  8206 ;;                  1    wreg      void 
  8207 ;; Registers used:
  8208 ;;		wreg, status,2
  8209 ;; Tracked objects:
  8210 ;;		On entry : 0/0
  8211 ;;		On exit  : 0/0
  8212 ;;		Unchanged: 0/0
  8213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8214 ;;      Params:         0       0       0       0       0       0       0
  8215 ;;      Locals:         0       0       0       0       0       0       0
  8216 ;;      Temps:          0       0       0       0       0       0       0
  8217 ;;      Totals:         0       0       0       0       0       0       0
  8218 ;;Total ram usage:        0 bytes
  8219 ;; Hardware stack levels used: 1
  8220 ;; This function calls:
  8221 ;;		Nothing
  8222 ;; This function is called by:
  8223 ;;		_main
  8224 ;; This function uses a non-reentrant model
  8225 ;;
  8226                           
  8227                           	psect	text36
  8228   0036A8                     __ptext36:
  8229                           	callstack 0
  8230   0036A8                     _config_FOSC:
  8231                           	callstack 30
  8232   0036A8                     
  8233                           ;Program_main.c: 83:     OSCCON = 0X00;
  8234   0036A8  0E00               	movlw	0
  8235   0036AA  6ED3               	movwf	211,c	;volatile
  8236                           
  8237                           ;Program_main.c: 84:     OSCTUNE = 0X00;
  8238   0036AC  0E00               	movlw	0
  8239   0036AE  6E9B               	movwf	155,c	;volatile
  8240   0036B0  0012               	return		;funcret
  8241   0036B2                     __end_of_config_FOSC:
  8242                           	callstack 0
  8243                           
  8244 ;; *************** function _config_ADC *****************
  8245 ;; Defined at:
  8246 ;;		line 75 in file "Program_main.c"
  8247 ;; Parameters:    Size  Location     Type
  8248 ;;		None
  8249 ;; Auto vars:     Size  Location     Type
  8250 ;;		None
  8251 ;; Return value:  Size  Location     Type
  8252 ;;                  1    wreg      void 
  8253 ;; Registers used:
  8254 ;;		wreg, status,2
  8255 ;; Tracked objects:
  8256 ;;		On entry : 0/0
  8257 ;;		On exit  : 0/0
  8258 ;;		Unchanged: 0/0
  8259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8260 ;;      Params:         0       0       0       0       0       0       0
  8261 ;;      Locals:         0       0       0       0       0       0       0
  8262 ;;      Temps:          0       0       0       0       0       0       0
  8263 ;;      Totals:         0       0       0       0       0       0       0
  8264 ;;Total ram usage:        0 bytes
  8265 ;; Hardware stack levels used: 1
  8266 ;; This function calls:
  8267 ;;		Nothing
  8268 ;; This function is called by:
  8269 ;;		_main
  8270 ;; This function uses a non-reentrant model
  8271 ;;
  8272                           
  8273                           	psect	text37
  8274   00369A                     __ptext37:
  8275                           	callstack 0
  8276   00369A                     _config_ADC:
  8277                           	callstack 30
  8278   00369A                     
  8279                           ;Program_main.c: 77:     ADCON0 = 0X01;
  8280   00369A  0E01               	movlw	1
  8281   00369C  6EC2               	movwf	194,c	;volatile
  8282                           
  8283                           ;Program_main.c: 78:     ADCON1 = 0X0E;
  8284   00369E  0E0E               	movlw	14
  8285   0036A0  6EC1               	movwf	193,c	;volatile
  8286                           
  8287                           ;Program_main.c: 79:     ADCON2 = 0X87;
  8288   0036A2  0E87               	movlw	135
  8289   0036A4  6EC0               	movwf	192,c	;volatile
  8290   0036A6  0012               	return		;funcret
  8291   0036A8                     __end_of_config_ADC:
  8292                           	callstack 0
  8293                           
  8294                           	psect	rparam
  8295   000000                     
  8296                           	psect	idloc
  8297                           
  8298                           ;Config register IDLOC0 @ 0x200000
  8299                           ;	unspecified, using default values
  8300   200000                     	org	2097152
  8301   200000  FF                 	db	255
  8302                           
  8303                           ;Config register IDLOC1 @ 0x200001
  8304                           ;	unspecified, using default values
  8305   200001                     	org	2097153
  8306   200001  FF                 	db	255
  8307                           
  8308                           ;Config register IDLOC2 @ 0x200002
  8309                           ;	unspecified, using default values
  8310   200002                     	org	2097154
  8311   200002  FF                 	db	255
  8312                           
  8313                           ;Config register IDLOC3 @ 0x200003
  8314                           ;	unspecified, using default values
  8315   200003                     	org	2097155
  8316   200003  FF                 	db	255
  8317                           
  8318                           ;Config register IDLOC4 @ 0x200004
  8319                           ;	unspecified, using default values
  8320   200004                     	org	2097156
  8321   200004  FF                 	db	255
  8322                           
  8323                           ;Config register IDLOC5 @ 0x200005
  8324                           ;	unspecified, using default values
  8325   200005                     	org	2097157
  8326   200005  FF                 	db	255
  8327                           
  8328                           ;Config register IDLOC6 @ 0x200006
  8329                           ;	unspecified, using default values
  8330   200006                     	org	2097158
  8331   200006  FF                 	db	255
  8332                           
  8333                           ;Config register IDLOC7 @ 0x200007
  8334                           ;	unspecified, using default values
  8335   200007                     	org	2097159
  8336   200007  FF                 	db	255
  8337                           
  8338                           	psect	config
  8339                           
  8340                           ; Padding undefined space
  8341   300000                     	org	3145728
  8342   300000  FF                 	db	255
  8343                           
  8344                           ;Config register CONFIG1H @ 0x300001
  8345                           ;	Oscillator Selection bits
  8346                           ;	OSC = HS, HS oscillator
  8347                           ;	Fail-Safe Clock Monitor Enable bit
  8348                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8349                           ;	Internal/External Oscillator Switchover bit
  8350                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8351   300001                     	org	3145729
  8352   300001  02                 	db	2
  8353                           
  8354                           ;Config register CONFIG2L @ 0x300002
  8355                           ;	Power-up Timer Enable bit
  8356                           ;	PWRT = OFF, PWRT disabled
  8357                           ;	Brown-out Reset Enable bits
  8358                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  8359                           ;	Brown Out Reset Voltage bits
  8360                           ;	BORV = 3, Minimum setting
  8361   300002                     	org	3145730
  8362   300002  1F                 	db	31
  8363                           
  8364                           ;Config register CONFIG2H @ 0x300003
  8365                           ;	Watchdog Timer Enable bit
  8366                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8367                           ;	Watchdog Timer Postscale Select bits
  8368                           ;	WDTPS = 32768, 1:32768
  8369   300003                     	org	3145731
  8370   300003  1E                 	db	30
  8371                           
  8372                           ; Padding undefined space
  8373   300004                     	org	3145732
  8374   300004  FF                 	db	255
  8375                           
  8376                           ;Config register CONFIG3H @ 0x300005
  8377                           ;	CCP2 MUX bit
  8378                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  8379                           ;	PORTB A/D Enable bit
  8380                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  8381                           ;	Low-Power Timer1 Oscillator Enable bit
  8382                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  8383                           ;	MCLR Pin Enable bit
  8384                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  8385   300005                     	org	3145733
  8386   300005  83                 	db	131
  8387                           
  8388                           ;Config register CONFIG4L @ 0x300006
  8389                           ;	Stack Full/Underflow Reset Enable bit
  8390                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8391                           ;	Single-Supply ICSP Enable bit
  8392                           ;	LVP = OFF, Single-Supply ICSP disabled
  8393                           ;	Extended Instruction Set Enable bit
  8394                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8395                           ;	Background Debugger Enable bit
  8396                           ;	DEBUG = 0x1, unprogrammed default
  8397   300006                     	org	3145734
  8398   300006  81                 	db	129
  8399                           
  8400                           ; Padding undefined space
  8401   300007                     	org	3145735
  8402   300007  FF                 	db	255
  8403                           
  8404                           ;Config register CONFIG5L @ 0x300008
  8405                           ;	Code Protection bit
  8406                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  8407                           ;	Code Protection bit
  8408                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  8409                           ;	Code Protection bit
  8410                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  8411                           ;	Code Protection bit
  8412                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  8413   300008                     	org	3145736
  8414   300008  0F                 	db	15
  8415                           
  8416                           ;Config register CONFIG5H @ 0x300009
  8417                           ;	Boot Block Code Protection bit
  8418                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  8419                           ;	Data EEPROM Code Protection bit
  8420                           ;	CPD = OFF, Data EEPROM not code-protected
  8421   300009                     	org	3145737
  8422   300009  C0                 	db	192
  8423                           
  8424                           ;Config register CONFIG6L @ 0x30000A
  8425                           ;	Write Protection bit
  8426                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  8427                           ;	Write Protection bit
  8428                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  8429                           ;	Write Protection bit
  8430                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  8431                           ;	Write Protection bit
  8432                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  8433   30000A                     	org	3145738
  8434   30000A  0F                 	db	15
  8435                           
  8436                           ;Config register CONFIG6H @ 0x30000B
  8437                           ;	Configuration Register Write Protection bit
  8438                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  8439                           ;	Boot Block Write Protection bit
  8440                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  8441                           ;	Data EEPROM Write Protection bit
  8442                           ;	WRTD = OFF, Data EEPROM not write-protected
  8443   30000B                     	org	3145739
  8444   30000B  E0                 	db	224
  8445                           
  8446                           ;Config register CONFIG7L @ 0x30000C
  8447                           ;	Table Read Protection bit
  8448                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  8449                           ;	Table Read Protection bit
  8450                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  8451                           ;	Table Read Protection bit
  8452                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  8453                           ;	Table Read Protection bit
  8454                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  8455   30000C                     	org	3145740
  8456   30000C  0F                 	db	15
  8457                           
  8458                           ;Config register CONFIG7H @ 0x30000D
  8459                           ;	Boot Block Table Read Protection bit
  8460                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  8461   30000D                     	org	3145741
  8462   30000D  40                 	db	64
  8463                           tosu	equ	0xFFF
  8464                           tosh	equ	0xFFE
  8465                           tosl	equ	0xFFD
  8466                           stkptr	equ	0xFFC
  8467                           pclatu	equ	0xFFB
  8468                           pclath	equ	0xFFA
  8469                           pcl	equ	0xFF9
  8470                           tblptru	equ	0xFF8
  8471                           tblptrh	equ	0xFF7
  8472                           tblptrl	equ	0xFF6
  8473                           tablat	equ	0xFF5
  8474                           prodh	equ	0xFF4
  8475                           prodl	equ	0xFF3
  8476                           indf0	equ	0xFEF
  8477                           postinc0	equ	0xFEE
  8478                           postdec0	equ	0xFED
  8479                           preinc0	equ	0xFEC
  8480                           plusw0	equ	0xFEB
  8481                           fsr0h	equ	0xFEA
  8482                           fsr0l	equ	0xFE9
  8483                           wreg	equ	0xFE8
  8484                           indf1	equ	0xFE7
  8485                           postinc1	equ	0xFE6
  8486                           postdec1	equ	0xFE5
  8487                           preinc1	equ	0xFE4
  8488                           plusw1	equ	0xFE3
  8489                           fsr1h	equ	0xFE2
  8490                           fsr1l	equ	0xFE1
  8491                           bsr	equ	0xFE0
  8492                           indf2	equ	0xFDF
  8493                           postinc2	equ	0xFDE
  8494                           postdec2	equ	0xFDD
  8495                           preinc2	equ	0xFDC
  8496                           plusw2	equ	0xFDB
  8497                           fsr2h	equ	0xFDA
  8498                           fsr2l	equ	0xFD9
  8499                           status	equ	0xFD8

Data Sizes:
    Strings     39
    Constant    0
    Data        0
    BSS         163
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    126     127
    BANK0           128     33     115
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_2(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_2(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_1(CODE[31]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_1(CODE[31]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 31
		 -> STR_1(CODE[31]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 31
		 -> STR_1(CODE[31]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S847$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_1(CODE[31]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 64
		 -> BufferSERIAL(BANK0[64]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S763$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S763$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    eusart_string@str	PTR unsigned char  size(2) Largest target is 64
		 -> BufferSERIAL(BANK0[64]), 


Critical Paths under _main in COMRAM

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->___wmul
    _eusart_string->_eusart_write
    _conv_AN0->___flmul
    ___flmul->___xxtofl

Critical Paths under _main in BANK0

    _main->_transmiter_DATA
    _transmiter_DATA->_sprintf
    _sprintf->_vfprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   31228
                         _config_ADC
                        _config_FOSC
                           _conv_AN0
                        _eusart_init
                    _transmiter_DATA
 ---------------------------------------------------------------------------------
 (1) _transmiter_DATA                                      2     2      0   28174
                                             31 BANK0      2     2      0
                      _eusart_string
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             25    15     10   28031
                                              8 BANK0     23    13     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   27672
                                              0 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           24    18      6   27297
                                            104 COMRAM    22    16      6
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              54    47      7   19268
                                             51 COMRAM    53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               8     4      4     400
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     457
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    2889
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     790
                                             39 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2007
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                35    25     10    4551
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2879
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1083
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                 9     7      2    1232
                                              6 COMRAM     9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              5     3      2     207
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              4     2      2     313
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _eusart_string                                        2     0      2     143
                                              1 COMRAM     2     0      2
                       _eusart_write
 ---------------------------------------------------------------------------------
 (3) _eusart_write                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _eusart_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _conv_AN0                                             2     2      0    3054
                                             39 COMRAM     2     2      0
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    2656
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _config_FOSC                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_ADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config_ADC
   _config_FOSC
   _conv_AN0
     ___flmul
       ___xxtofl (ARG)
     ___xxtofl
   _eusart_init
   _transmiter_DATA
     _eusart_string
       _eusart_write
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _efgtoa
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _labs
             _memcpy
             _pad
             _strcpy
           _fputc
           _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      24        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            80      0       0       4        0.0%
BANK0               80     21      73       5       89.8%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     7E      7F       1      100.0%
BITBIGSFRhhhh       2C      0       0      16        0.0%
BITBIGSFRlll        1B      0       0      22        0.0%
BITBIGSFRhhhlh       E      0       0      17        0.0%
BITBIGSFRlh          C      0       0      20        0.0%
BITBIGSFRhlh         8      0       0      19        0.0%
BITBIGSFRhhl         7      0       0      18        0.0%
BITBIGSFRllh         2      0       0      21        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     142      23        0.0%
DATA                 0      0     142       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Aug 30 16:35:03 2023

           ___fldiv@aexp 0019             ___fldiv@bexp 0018             ___fldiv@sign 0011  
                     l22 3674                       l31 35DE                       l25 3686  
                     l19 3698                       l70 36A6                       l73 36B0  
                     l82 3334                       l76 3212                       l93 3630  
                     l78 3220                       l79 327A      ___wmul@multiplicand 0003  
                    l220 2B86                      l207 2A22                      l352 314C  
                    l363 2EDA                      l621 178A                      l358 2E94  
                    l630 1A5A                      l622 1778                      l390 2DD6  
                    l711 1E84                      l367 35AE                      l623 173E  
                    l714 1D16                      l707 1B20                      l811 31D4  
                    l724 1E46                      l716 1D8E                      l717 1D7C  
                    l813 31F6                      l821 22C4                      l822 230A  
                    l638 18A4                      l751 289A                      l647 1974  
                    l663 346C                      l808 3192                      l680 2042  
                    l648 1962                      l762 2832                      l755 27D6  
                    l835 24D4                      l819 22BC                      l675 221E  
                    l851 07F6                      l923 159A                      l771 3386  
                    l748 273E                      l677 207E                      l686 20C4  
                    l846 1064                      l960 356E                      l688 213C  
                    l689 212A                      l849 09A8                      l945 33D6  
                    l963 3576                      l955 2FD8                      l879 0DE2  
                    l985 2CC8                      l994 26E6                      l988 2CD0  
                    l997 262A                      _abs 3538                      _pad 314E  
                    wreg 000FE8             ___flmul@aexp 0020             ___flmul@bexp 0021  
          eusart_write@c 0001             ___flmul@sign 001B             ___flmul@temp 0026  
           ___flmul@prod 0022             ___fltol@exp1 000A                     l1004 360A  
                   l1012 34B2                     l1022 32E0                     l1040 30A2  
                   l1051 36B2                     l1019 32D0                     ?_abs 0013  
                   l1028 3426                     l1048 34F6                     l3001 1B6A  
                   l1057 3536                     l3011 1BBC                     l3003 1B80  
                   l3021 1C02                     l3013 1BCA                     l3005 1B8C  
                   l3101 3120                     l3031 1C70                     l3023 1C1C  
                   l3015 1BD6                     l3007 1BA4                     l3103 3144  
                   l3111 2E06                     l3041 1D06                     l3033 1C9A  
                   l3025 1C2C                     l3017 1BE6                     l3009 1BB0  
                   l3201 3538                     l3105 314A                     l3121 2E74  
                   l3113 2E16                     l3051 1D46                     l3043 1D14  
                   l3035 1CD0                     l3027 1C48                     l3019 1BF2  
                   l3203 3552                     l3123 2E82                     l3115 2E44  
                   l3131 3578                     l3211 2F62                     l3061 1DB8  
                   l3053 1D74                     l3045 1D26                     l3037 1CDE  
                   l3029 1C54                     l3301 2294                     l3125 2ED2  
                   l3117 2E54                     l3109 2DD8                     l3133 358E  
                   l3141 2CE8                     l3213 2F6E                     l3205 2EDC  
                   l3071 1E2E                     l3063 1DE2                     l3047 1D34  
                   l3039 1CFC                     l2511 2FEC                     l3311 22E2  
                   l3303 2296                     l3127 2ED8                     l3119 2E62  
                   l3135 359E                     l3151 2D38                     l3223 2FD0  
                   l3207 2EFC                     l3231 327C                     l3073 1E4A  
                   l3081 1E70                     l3057 1D9E                     l3065 1DE6  
                   l3049 1D38                     l2513 2FFE                     l3321 231C  
                   l3313 22F2                     l3305 22B0                     l2601 16DC  
                   l3161 2D62                     l3153 2D3C                     l3145 2CFC  
                   l3209 2F3A                     l3217 2F7A                     l3241 2560  
                   l3233 329A                     l3401 0784                     l3083 1E74  
                   l3075 1E5A                     l3067 1E00                     l3059 1DAA  
                   l2515 3008                     l3323 2322                     l3331 2414  
                   l3315 22FE                     l3307 22CC                     l2611 174C  
                   l2603 16E0                     l2531 15C8                     l2523 159C  
                   l3171 2D8A                     l3163 2D6C                     l3155 2D4A  
                   l3147 2D26                     l3139 2CD2                     l3219 2F8C  
                   l3243 256E                     l3251 264E                     l3235 24D6  
                   l3227 34F8                     l3403 078C                     l3411 07A8  
                   l2381 36A8                     l3077 1E68                     l3069 1E14  
                   l2517 3026                     l2509 2FDA                     l3333 242E  
                   l3341 248E                     l3325 23A4                     l3317 2306  
                   l3309 22DC                     l3093 30A4                     l2701 19DA  
                   l2621 1776                     l2613 1758                     l2605 170A  
                   l2541 1602                     l2533 15D8                     l2525 15A8  
                   l3173 2D96                     l3165 2D76                     l3149 2D28  
                   l3253 268A                     l3237 24F6                     l3229 3508  
                   l3501 0D22                     l3421 083E                     l3413 07C0  
                   l3079 1E6A                     l2375 3688                     l2519 305C  
                   l3191 318A                     l3183 314E                     l3343 249E  
                   l3335 244C                     l3327 23AA                     l3319 2312  
                   l3095 30D2                     l2711 1A2C                     l2703 19EA  
                   l2631 17CC                     l2623 1798                     l2615 175C  
                   l2607 1726                     l2551 1630                     l2543 1608  
                   l2535 15E8                     l2527 15B6                     l3087 3428  
                   l3175 2DA6                     l3255 269E                     l3247 25DE  
                   l3239 254C                     l3271 3408                     l3263 33D8  
                   l3511 0DBA                     l3503 0D2A                     l3431 0930  
                   l3423 087A                     l3351 062A                     l2377 3694  
                   l3281 3472                     l3601 2C34                     l2801 2AC2  
                   l3193 319E                     l3185 315C                     l3345 24A4  
                   l3337 2466                     l3329 23B0                     l3097 30E2  
                   l2721 1A4A                     l2713 1A32                     l2705 19FA  
                   l2641 1806                     l2633 17DA                     l2625 17A8  
                   l2617 176A                     l2609 1736                     l2561 1664  
                   l2553 1632                     l2545 161A                     l2537 15EA  
                   l2529 15B8                     l3089 3438                     l3177 2DB6  
                   l3257 26C6                     l3249 261A                     l3265 33EC  
                   l3273 340C                     l3521 0E14                     l3513 0DDA  
                   l3505 0D2E                     l3441 09C0                     l3433 0936  
                   l3425 08AC                     l3417 0806                     l3361 0674  
                   l3353 062E                     l2379 369A                     l3275 35E0  
                   l3283 3486                     l3611 2CAC                     l2803 2AD0  
                   l2811 2B36                     l2731 34D6                     l3195 31B2  
                   l3187 3170                     l3347 24B4                     l3339 2480  
                   l3291 2220                     l3099 3110                     l2715 1A34  
                   l2707 1A1A                     l2651 1872                     l2643 1808  
                   l2635 17E8                     l2619 176C                     l2571 16A0  
                   l2555 1642                     l2563 166C                     l2547 161C  
                   l2539 15F2                     l3179 2DC6                     l3259 26D6  
                   l3267 33F8                     l3531 0E3C                     l3523 0E1A  
                   l3515 0DF2                     l3507 0D36                     l3451 09F2  
                   l3443 09CC                     l3427 08E8                     l3419 080A  
                   l3371 06B0                     l3363 067C                     l3355 063E  
                   l2733 360C                     l3285 34A8                     l2741 28A0  
                   l2813 2B46                     l2805 2AFE                     l2725 34B4  
                   l3197 31B6                     l3189 317E                     l3293 2240  
                   l2901 207C                     l2821 1E92                     l2717 1A3A  
                   l2709 1A1E                     l2661 18CA                     l2653 1874  
                   l2645 1812                     l2637 17F4                     l2629 17BC  
                   l2581 16B4                     l2573 16A4                     l2565 167C  
                   l2557 1652                     l2549 1622                     l3269 33FC  
                   l3541 0E70                     l3525 0E22                     l3517 0E00  
                   l3533 0E42                     l3509 0D42                     l3461 0A3A  
                   l3453 0A00                     l3445 09D4                     l3429 08FC  
                   l3437 0976                     l3381 06F6                     l3373 06B8  
                   l3365 0684                     l3357 064C                     l3701 1454  
                   l3621 1098                     l2735 3628                     l3287 34AC  
                   l3279 346E                     l3607 2C6A                     l2751 2900  
                   l2743 28AE                     l2815 2B66                     l2807 2B1E  
                   l2727 34C0                     l3199 31E2                     l3295 2254  
                   l2911 20C2                     l2903 208E                     l2831 1ED2  
                   l2823 1EA0                     l2719 1A48                     l2671 18F8  
                   l2655 1884                     l2639 17F8                     l2647 1818  
                   l2591 16C8                     l2583 16B8                     l2575 16A8  
                   l2567 168E                     l2559 1662                     l3551 0F24  
                   l3543 0EC8                     l3535 0E54                     l3527 0E32  
                   l3519 0E10                     l3471 0B4E                     l3463 0A4A  
                   l3455 0A18                     l3447 09DC                     l3439 09B0  
                   l3383 06FC                     l3367 0694                     l3375 06BC  
                   l3359 0650                     l3711 1506                     l3703 1488  
                   l3631 10CA                     l3623 10A6                     l3801 27CC  
                   l3609 2C9A                     l2761 294A                     l2753 2904  
                   l2745 28CE                     l2809 2B30                     l2729 34D2  
                   l3297 2264                     l2921 2122                     l2905 20A4  
                   l2913 20D4                     l2841 1EF8                     l2833 1ED4  
                   l2825 1EA2                     l2673 1906                     l2665 18DE  
                   l2681 1924                     l2649 183E                     l2657 1894  
                   l2593 16CC                     l2585 16BC                     l2577 16AC  
                   l2569 169C                     l3561 0F94                     l3553 0F40  
                   l3545 0EFC                     l3537 0E66                     l3529 0E36  
                   l3481 0BEA                     l3465 0A5E                     l3473 0B52  
                   l3457 0A2A                     l3449 09E0                     l3385 0704  
                   l3377 06E2                     l3393 0744                     l3369 06A4  
                   l3641 1140                     l3625 10AA                     l3617 1066  
                   l3811 2842                     l3803 2808                     l2771 29BA  
                   l2763 2958                     l2755 2910                     l2747 28D2  
                   l2739 289C                     l3299 2284                     l2931 2190  
                   l2915 20E2                     l2907 20AA                     l2851 1F38  
                   l2843 1F06                     l2827 1EB2                     l2835 1EDC  
                   l2819 1E86                     l2675 190E                     l2667 18E8  
                   l2659 18BA                     l2683 1932                     l2595 16D0  
                   l2587 16C0                     l2579 16B0                     l3571 0FDA  
                   l3563 0FAC                     l3555 0F48                     l3547 0F02  
                   l3539 0E6A                     l3491 0CC4                     l3483 0C1C  
                   l3475 0B70                     l3467 0AC2                     l3459 0A32  
                   l3395 076A                     l3387 071C                     l3379 06F2  
                   l3707 14BC                     l3643 1176                     l3635 10D6  
                   l3627 10B6                     l3619 108A                     l3723 1572  
                   l3821 288A                     l3813 2846                     l3805 2814  
                   l2773 29CC                     l2765 296A                     l2757 292E  
                   l2749 28E0                     l2941 21FA                     l2925 214C  
                   l2933 2194                     l2917 20E6                     l2909 20B4  
                   l2861 1F78                     l2853 1F3A                     l2845 1F08  
                   l2837 1EEC                     l2829 1EC2                     l2693 1984  
                   l2685 1936                     l2677 1912                     l2669 18F6  
                   l2597 16D4                     l2589 16C4                     l3581 1044  
                   l3573 0FF8                     l3557 0F58                     l3549 0F06  
                   l3493 0CC8                     l3485 0C2A                     l3477 0BA4  
                   l3469 0B1A                     l3397 077A                     l3389 0724  
                   l3717 1534                     l3709 14E6                     l3661 1236  
                   l3653 11C2                     l3645 1186                     l3629 10B8  
                   l3637 110A                     ?_pad 0011                     l3815 286A  
                   l3807 2822                     l3831 3234                     l3591 2BA0  
                   l2767 2998                     l2759 2936                     l2775 29D2  
                   l2791 2A5A                     l2783 2A24                     l2943 21FE  
                   l2935 21AE                     l2927 2158                     l2919 20F4  
                   l2871 1FA8                     l2863 1F80                     l2847 1F18  
                   l2855 1F42                     l2839 1EF2                     l2695 1990  
                   l2687 1944                     l2679 1922                     l2599 16D8  
                   l3567 0FBE                     l3575 1016                     l3559 0F88  
                   l3495 0CFC                     l3487 0C3A                     l3479 0BD6  
                   l3399 077E                     l3719 1560                     l3671 12C2  
                   l3663 125A                     l3655 11FA                     l3647 1194  
                   l3639 111C                     l3751 3394                     l2961 1A76  
                   l3817 287A                     l3809 2840                     l3825 31F8  
                   l3745 3674                     l3761 35B4                     l3593 2BBC  
                   l3585 2B88                     l2777 29E2                     l2769 29B8  
                   l2793 2A68                     l2785 2A28                     l2945 220C  
                   l2937 21C4                     l2929 2166                     l2881 1FE6  
                   l2873 1FA8                     l2865 1F84                     l2857 1F52  
                   l2849 1F28                     l2697 199E                     l2689 195A  
                   l3577 1026                     l3569 0FD4                     l3497 0D0E  
                   l3489 0C6E                     l3681 1398                     l3665 1294  
                   l3657 121E                     l3673 12FA                     l3649 11B4  
                   l3753 33B0                     l3833 32E2                     l3841 3662  
                   l2971 1AAE                     l2963 1A78                     l3819 2888  
                   l3827 3210                     l3747 3682                     l3763 35C2  
                   l3595 2BF0                     l3587 2B9C                     l2779 2A02  
                   l2795 2A88                     l2787 2A36                     l2947 2212  
                   l2939 21DE                     l2891 2032                     l2883 1FF6  
                   l2859 1F68                     l2699 19D8                     l3579 103C  
                   l3499 0D12                     l3691 13F2                     l3675 130A  
                   l3667 12B4                     l3659 1228                     l3755 33CC  
                   l3771 3350                     l3835 3310                     l3843 3666  
                   l2981 1ADA                     l2973 1ABE                     l2965 1A88  
                   l2957 1A5C                     l3781 26FA                     l3829 3228  
                   l3765 35C6                     l3597 2BF8                     l2797 2AA6  
                   l2789 2A56                     l2949 2214                     l2893 2040  
                   l2885 2006                     l2877 1FBC                     l2869 1F98  
                   l3693 13FA                     l3685 13C8                     l3677 1326  
                   l3749 3388                     l3773 3358                     l3837 331C  
                   l2991 1B30                     l2983 1AEA                     l2975 1AC4  
                   l2967 1A98                     l2959 1A68                     l3791 2778  
                   l3783 2708                     l3759 35B0                     l3599 2C00  
                   l2799 2AAE                     l2895 204C                     l2887 200E  
                   l2879 1FD6                     l3951 1552                     l3687 13D8  
                   l3679 1342                     l3775 3374                     l3767 3336  
                   l3839 3656                     l2993 1B40                     l2985 1AFA  
                   l2977 1ACA                     l2969 1AA8                     l3793 2780  
                   l3785 274E                     l3953 2C1E                     l2897 206A  
                   l2889 201E                     l3689 13EA                     l3697 1402  
                   l3945 10FC                     l3769 3348                     l2987 1B0A  
                   l2979 1AD8                     l3795 278C                     l3787 2764  
                   l3779 26EA                     l2899 206C                     l3947 1416  
                   l3699 1434                     l2997 1B54                     l2989 1B10  
                   l3797 27BE                     l3949 14D0                     l2999 1B60  
                   l3799 27C0                     STR_1 0601                     STR_2 0620  
                   STR_5 0624                     u3000 21AE                     u3001 21AA  
                   u3010 21DE                     u3011 21DA                     u3100 1B40  
                   u3020 220C                     u2300 161A                     u3101 1B3C  
                   u3021 2208                     u2301 1616                     u3110 1CBA  
                   u3030 1A76                     u2230 2FEC                     u2310 1630  
                   u3031 1A72                     u2231 2FE8                     u2311 162C  
                   u3200 1E2E                     u3120 1D14                     u3040 1A88  
                   u2240 2FFE                     u2400 176A                     u2320 1642  
                   u4000 0C2A                     u3201 1E2A                     u3121 1D10  
                   u3041 1A84                     u2241 2FFA                     u2401 1766  
                   u2321 163E                     u4001 0C26                     u3210 1E68  
                   u3130 1D34                     u3050 1A98                     u2250 3026  
                   u2410 178A                     u2330 1652                     u4010 0CC4  
                   u3211 1E64                     u3131 1D30                     u3115 1CB0  
                   u3051 1A94                     u2251 3022                     u2411 1786  
                   u2331 164E                     u4011 0CC0                     u3140 1D46  
                   u3060 1AD8                     u2260 305C                     u3220 30D2  
                   u3300 358E                     u2500 18CA                     u2420 1798  
                   u2340 168E                     u4100 0FA8                     u4020 0D0E  
                   u3141 1D42                     u3061 1AD4                     u2261 3058  
                   u3221 30CE                     u3301 358A                     u2501 18C6  
                   u2421 1794                     u2341 168A                     u4021 0D0A  
                   u3150 1D74                     u3070 1AEA                     u3230 3110  
                   u2510 18F6                     u2430 17A8                     u2350 169C  
                   u2270 15B6                     u3310 2CE8                     u4110 0FBA  
                   u4030 0DBA                     u3151 1D70                     u3071 1AE6  
                   u3231 310C                     u2511 18F2                     u2431 17A4  
                   u2351 1698                     u2271 15B2                     u3311 2CE4  
                   u4111 0FB6                     u4031 0DB6                     u3160 1D8A  
                   u3080 1AFA                     u3400 31D4                     u3240 3144  
                   u2600 19D8                     u2520 1906                     u2440 17DA  
                   u2360 170A                     u2280 15C8                     u3320 2D1C  
                   u4120 0FF8                     u4040 0DF2                     u4200 111C  
                   u3161 1D86                     u3081 1AF6                     u3401 31D0  
                   u3241 3140                     u2601 19D4                     u2521 1902  
                   u2441 17D6                     u2361 1706                     u2281 15C4  
                   u4121 0FF4                     u4041 0DEE                     u4201 1118  
                   u3170 1D9E                     u3090 1B30                     u3410 31E2  
                   u3250 2E06                     u2610 19EA                     u2530 1922  
                   u2450 17E8                     u2370 1722                     u2290 15D8  
                   u3330 2D4A                     u4130 1016                     u4050 0E00  
                   u4210 1140                     u3171 1D9A                     u3091 1B2C  
                   u3411 31DE                     u3251 2E02                     u2611 19E6  
                   u2531 191E                     u2451 17E4                     u2371 171C  
                   u2291 15D4                     u3331 2D46                     u4131 1012  
                   u4051 0DFC                     u4211 113C                     u3180 1DB8  
                   u4300 3682                     u2700 292E                     u3420 3552  
                   u3260 2E44                     u2620 19FA                     u2540 1932  
                   u2460 1806                     u2380 1724                     u3340 2D5E  
                   u3500 3536                     u4140 1026                     u4060 0E54  
                   u4220 1186                     u3181 1DB4                     u4301 367E  
                   u2701 292A                     u3421 354E                     u3261 2E40  
                   u2621 19F6                     u2541 192E                     u2461 1802  
                   u3341 2D5A                     u3325 2D12                     u3501 3532  
                   u4141 1022                     u4061 0E50                     u4221 1182  
                   u3190 1E00                     u4150 2BBC                     u2710 2958  
                   u3270 2E62                     u2630 1A1A                     u2550 1944  
                   u2470 183E                     u2390 174C                     u3350 2D86  
                   u3430 2F1C                     u3510 329A                     u4070 0F24  
                   u4230 11FA                     u4310 33CC                     u3191 1DFC  
                   u4151 2BB8                     u2711 2954                     u3271 2E5E  
                   u2631 1A16                     u2551 1940                     u2471 183A  
                   u2391 1748                     u3351 2D82                     u3511 3296  
                   u4071 0F20                     u4231 11F6                     u4311 33C8  
                   u4400 2840                     u4320 35DE                     u4160 2BEC  
                   u2720 2998                     u2800 1EA0                     u3280 2E82  
                   u2640 1A2C                     u2560 195A                     u2480 1884  
                   u3360 2DA6                     u3440 2F3A                     u3600 268A  
                   u3520 251E                     u4080 0F40                     u4240 121E  
                   u4401 283C                     u4321 35DA                     u4161 2BE8  
                   u2721 2994                     u2801 1E9C                     u3281 2E7E  
                   u2641 1A28                     u2561 1956                     u2481 1880  
                   u3361 2DA2                     u3441 2F36                     u3601 2686  
                   u4081 0F3C                     u4241 121A                     u4410 287A  
                   u4330 26FA                     u4170 2C9A                     u2730 29E2  
                   u2810 1EB2                     u3290 2ED2                     u2650 1A48  
                   u2570 1970                     u2490 18BA                     u3370 2DB6  
                   u3450 2F62                     u3610 26C6                     u3530 254C  
                   u4090 0FA6                     u4250 125A                     u4411 2876  
                   u4331 26F6                     u4171 2C96                     u2731 29DE  
                   u2811 1EAE                     u3291 2ECE                     u2651 1A44  
                   u2571 196C                     u2491 18B6                     u3371 2DB2  
                   u3451 2F5E                     u3435 2F12                     u3611 26C2  
                   u3531 2548                     u4091 0FA0                     u4251 1256  
                   u4420 2888                     u4340 2708                     u4180 2CAC  
                   u2740 2A36                     u2660 34F6                     u3380 315C  
                   u3700 2294                     u2900 206A                     u2820 1EC2  
                   u2580 1984                     u3460 2F8C                     u3540 256E  
                   u3620 3426                     u4260 12FA                     u4421 2884  
                   u4341 2704                     u4181 2CA8                     u2741 2A32  
                   u2661 34F2                     u3381 3158                     u3701 2290  
                   u2901 2066                     u2821 1EBE                     u2581 1980  
                   u3461 2F88                     u3541 256A                     u3525 2514  
                   u3621 3422                     u4261 12F6                     u4350 2764  
                   u4430 3220                     u3630 3604                     u2670 28AE  
                   u2750 2A68                     u3390 317E                     u3710 22B0  
                   u2910 208E                     u2830 1F06                     u2590 199E  
                   u4270 1326                     u4190 108A                     u4351 2760  
                   u4431 321C                     u3631 35FE                     u2671 28AA  
                   u2751 2A64                     u3391 317A                     u3711 22AC  
                   u2911 208A                     u2831 1F02                     u2591 199A  
                   u4271 1322                     u4191 1086                     u4360 27BA  
                   u3640 3606                     u2680 28E0                     u2760 2AA6  
                   u3720 22DC                     u2920 20A4                     u2840 1F18  
                   u3480 2FC6                     u3560 25DA                     u3800 064C  
                   u4280 1342                     u4361 27B6                     u2681 28DC  
                   u2761 2AA2                     u3721 22D8                     u2921 20A0  
                   u2841 1F14                     u3481 2FC0                     u3561 25D6  
                   u3801 0648                     u4281 133E                     u4370 2804  
                   u3650 3486                     u2770 2AD0                     u3730 22F2  
                   u2930 20C2                     u2850 1F28                     u3490 2FC8  
                   u3570 25FE                     u3810 0694                     u4290 1450  
                   u4371 2800                     u3651 3482                     u2691 290A  
                   u2771 2ACC                     u3731 22EE                     u2931 20BE  
                   u2851 1F24                     u3475 2F9E                     u3555 2582  
                   u3811 0690                     u4291 144C                     u4380 2822  
                   u3660 34A8                     u2780 2AFE                     u3740 242E  
                   u2940 20E2                     u2860 1F68                     u3580 261A  
                   u3556 258C                     u3900 08E8                     u3820 06A4  
                   u4381 281E                     u3661 34A4                     u2781 2AFA  
                   u3741 242A                     u2941 20DE                     u2861 1F64  
                   u3581 2616                     u3557 259C                     u3901 08E4  
                   u3821 06A0                     u4390 2832                     u2790 2B46  
                   u3750 244C                     u3670 2250                     u2950 20F4  
                   u2870 1FA8                     u3590 266E                     u3910 0972  
                   u3830 06E2                     u4391 282E                     u2791 2B42  
                   u3751 2448                     u3671 224A                     u2951 20F0  
                   u2871 1FA4                     u3575 25F4                     u3911 096E  
                   u3831 06DE                     u4447 3328                     u3760 2466  
                   u3680 2252                     u2960 2122                     u2880 201E  
                   u3920 09A8                     u3840 06F2                     u4457 3202  
                   u3761 2462                     u2961 211E                     u2881 201A  
                   u3921 09A4                     u3841 06EE                     u3770 2480  
                   u3690 2264                     u2970 2138                     u2890 2040  
                   u3930 09C0                     u3850 076A                     u3771 247C  
                   u3691 2260                     u2971 2134                     u2891 203C  
                   u3595 2664                     u3931 09BC                     u3851 0766  
                   u3780 248E                     u2980 214C                     u3940 09F2  
                   u3860 077A                     _RCIF 007CF5                     u3781 248A  
                   u2981 2148                     u3941 09EE                     u3861 0776  
                   u3790 249E                     u2990 2166                     u3950 0A00  
                   u3870 07F2                     u3791 249A                     u2991 2162  
                   u3951 09FC                     u3871 07EE                     u3960 0A2A  
                   u3880 087A                     u3961 0A26                     u3881 0876  
                   u3970 0B70                     u3890 08AC                     u3971 0B6C  
                   u3891 08A8                     u3980 0BD6                     u3981 0BD2  
                   u3990 0C1C                     u3991 0C18                     _TRMT 007D61  
                   abs@a 0013                     _dbuf 0100                     _labs 327C  
                   _atoi 2B88                     _main 3656                     _dtoa 2220  
                   _prec 008E                     pad@i 0018                     pad@p 0015  
                   fsr1h 000FE2                     fsr2h 000FDA                     indf2 000FDF  
                   fsr1l 000FE1                     pad@w 001A                     fsr2l 000FD9  
          ___fpclassifyf 2EDC                     prodh 000FF4                     prodl 000FF3  
                   start 0000          ___fldiv@new_exp 0012             ___param_bank 000000  
                  ??_abs 0015                    ??_pad 0017            ___fltol@sign1 0009  
        __end_of___aodiv 2A24                    ?_labs 0001                    ?_atoi 0007  
        __end_of___fladd 1A5C                    ?_main 0001                    ?_dtoa 001C  
        __end_of___aomod 2B88          __end_of___fldiv 2220          __end_of___flneg 35B0  
        __end_of___flmul 1E86          __end_of___flsub 346E          __end_of___fltol 2DD8  
                  _RCREG 000FAE             vfpfcnvrt@fmt 006B                    _SPBRG 000FAF  
                  _TXREG 000FAD                    _flags 007F                    _fputc 2FDA  
                  _fputs 34B4          __end_of_isdigit 360C                    labs@a 0001  
           ?_eusart_init 0001                    atoi@n 000E                    pad@fp 0011  
                  atoi@s 0007                    _width 008C                    _putch 36B2  
                  dtoa@d 001E                    dtoa@i 003C                    dtoa@n 0034  
                  dtoa@p 0030                    dtoa@s 003E                    dtoa@w 0032  
        __end_of_isspace 34B4                    tablat 000FF5                    status 000FD8  
        __end_of_sprintf 3388           ?___fpclassifyf 0001        ??_transmiter_DATA 00F1  
        __initialization 3632             __end_of_labs 32E2             __end_of_atoi 2CD2  
           __end_of_main 3672             __end_of_dtoa 24D6                   ??_labs 0005  
                 ??_atoi 0009                   ??_main 007F                   ??_dtoa 0026  
          __activetblptr 000002                   _ADCON0 000FC2                   _ADCON1 000FC1  
                 _ADCON2 000FC0                   ?_fputc 0001                   ?_fputs 000A  
                 _ADRESH 000FC4                   _ADRESL 000FC3                   ?_putch 0001  
                 _OSCCON 000FD3            vfpfcnvrt@done 0072         __end_of___xxtofl 289C  
       __end_of_conv_AN0 327C             vfprintf@cfmt 00D8                   ___flge 2DD8  
                 ___fleq 30A4                ??___aodiv 0011                ??___fladd 0009  
              ??___aomod 0011                   ___wmul 360C                ??___fldiv 0009  
              ??___flneg 0005                ??___flmul 0017                ??___flsub 0030  
              ??___fltol 0005                   _efgtoa 062A                   _floorf 24D6  
                 _memcpy 33D8                   clear_0 3638                   clear_1 3644  
                 isa$std 000001                   pad@buf 0013                   dtoa@fp 001C  
                 _strcpy 34F8            ?_eusart_write 0001                   fputc@c 0001  
                 fputs@c 000E                   fputs@i 000F                   fputs@s 000A  
              ??_isdigit 0003          ___fpclassifyf@e 0009          ___fpclassifyf@u 000B  
        ___fpclassifyf@x 0001             __mediumconst 0000                ??_isspace 0003  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
                 putch@c 0001         __end_of_vfprintf 33D8                ??_sprintf 007F  
             ___flge@ff1 0028               ___flge@ff2 002C          ??___fpclassifyf 0005  
           ___xxtofl@arg 000B             ___xxtofl@exp 000A             ___xxtofl@val 0001  
             ___fleq@ff1 0001               ___fleq@ff2 0005               __accesstop 0080  
__end_of__initialization 364C               ___flneg@f1 0001            ___rparam_used 000001  
             _VoltageADC 0088         eusart_string@str 0002               ___fltol@f1 0001  
         __pcstackCOMRAM 0001            __end_of_fputc 30A4            __end_of_fputs 34F8  
          __end_of_putch 36B4           ??_eusart_write 0001                  ??_fputc 0005  
                ??_fputs 000E                  ??_putch 0001               __pbssBANK0 0080  
             __pbssBANK1 0100               _efgtoa$916 0043                  ?___flge 0028  
                ?___fleq 0001                  ?___wmul 0001                  ?_efgtoa 0034  
                ?_floorf 001A                  ?_memcpy 0001                  ?_strcpy 0001  
           _BufferSERIAL 0092               _config_ADC 369A                ?___xxtofl 0001  
                _OSCTUNE 000F9B                ?_conv_AN0 0001          _transmiter_DATA 32E2  
          _eusart_string 35B0                  _VdigADC 0090                  __Hparam 0000  
                __Lparam 0000                  ___aodiv 289C                  ___fladd 159C  
                ___aomod 2A24                  ___fldiv 1E86                  ___flneg 3578  
                ___flmul 1A5C                  ___flsub 3428                  ___fltol 2CD2  
              ?_vfprintf 00D2             __psmallconst 0600                  __pcinit 3632  
                __ramtop 0600                  __ptext0 3656                  __ptext1 32E2  
                __ptext2 3336                  __ptext3 3388                  __ptext4 1066  
                __ptext5 062A                  __ptext6 34F8                  __ptext7 33D8  
                __ptext8 327C                  __ptext9 24D6                  _isdigit 35E0  
             ??___xxtofl 0005                  _isspace 346E                  efgtoa@c 003A  
                efgtoa@d 0048                  efgtoa@e 004C                  efgtoa@f 0036  
                efgtoa@g 005F                  efgtoa@h 0054                  efgtoa@i 005C  
                efgtoa@l 0058                  efgtoa@m 004A                  efgtoa@n 0063  
                efgtoa@p 003F                  efgtoa@t 0041                  efgtoa@u 0065  
                efgtoa@w 004E                  atoi@neg 000C               ??_conv_AN0 0028  
                _sprintf 3336     end_of_initialization 364C           ?_eusart_string 0002  
                floorf@e 0028                  floorf@m 0024                  floorf@u 002A  
                floorf@x 001A                  memcpy@d 0007                  memcpy@n 0005  
                memcpy@s 0009                  fputc@fp 0003            __Lmediumconst 0000  
                fputs@fp 000C     __end_of_eusart_write 3688        __end_of_vfpfcnvrt 159C  
             efgtoa@mode 0046               efgtoa@sign 005E                _RCSTAbits 000FAB  
                postdec2 000FDD                  postinc0 000FEE                  postinc1 000FE6  
                postinc2 000FDE         vfpfcnvrt@convarg 0074               ??_vfprintf 007F  
                strcpy@d 0007                  strcpy@s 0005              ___fladd@grs 0010  
            ?_config_ADC 0001  __end_of_transmiter_DATA 3336            ___xxtofl@sign 0009  
            ___fldiv@grs 0014              ___fldiv@rem 000D              ___flmul@grs 001C  
          ??_config_FOSC 0001                _TXSTAbits 000FAC           __end_of___flge 2EDC  
         __end_of___fleq 314E              vfpfcnvrt@ap 006D              vfpfcnvrt@cp 007D  
            vfpfcnvrt@fp 0069           __end_of___wmul 3632           __end_of_efgtoa 1066  
            _BAUDCTLbits 000FB8           __end_of_floorf 26E8           __end_of_memcpy 3428  
             floorf@F526 0080           __end_of_strcpy 3538      start_initialization 3632  
            __end_of_abs 3578              __end_of_pad 31F8          ??_eusart_string 0004  
  __end_of___fpclassifyf 2FDA              vfprintf@fmt 00D4                 ??___flge 0030  
               ??___fleq 0009      __end_of_config_FOSC 36B2                 ??___wmul 0005  
               ??_efgtoa 003B                 ??_floorf 001E                 ??_memcpy 0007  
               ??_strcpy 0005                ___fladd@a 0005                ___fladd@b 0001  
              ___fldiv@a 0005                ___fldiv@b 0001                ___flmul@a 0013  
              ___flmul@b 000F              __pbssCOMRAM 007F         ?_transmiter_DATA 0001  
              ___flsub@a 002C                ___flsub@b 0028            __pcstackBANK0 00D2  
       ___aodiv@dividend 0001            ??_eusart_init 0001                 ?___aodiv 0001  
               ?___fladd 0001                 ?___aomod 0001                 ?___fldiv 0001  
       ___aodiv@quotient 0013                 ?___flneg 0001                 ?___flmul 000F  
               ?___flsub 0028                 ?___fltol 0001             _eusart_write 3672  
            __smallconst 0600                 ?_isdigit 0001                 ?_isspace 0001  
               ?_sprintf 00DA           ___wmul@product 0005              _config_FOSC 36A8  
    __end_of_eusart_init 369A                _vfpfcnvrt 1066               _ADCON0bits 000FC2  
      ___wmul@multiplier 0001             ??_config_ADC 0001               vfpfcnvrt@c 007C  
               __Hrparam 0000                memcpy@tmp 000B               vfprintf@ap 00D6  
               __Lrparam 0000               vfprintf@fp 00D2       __end_of_config_ADC 36A8  
             ?_vfpfcnvrt 0069          ___aodiv@divisor 0009          ___aodiv@counter 0011  
     ___fpclassifyf@F465 0084               sprintf@fmt 00DC                 ___xxtofl 26E8  
               _dtoa$885 002E                 __ptext10 2EDC                 __ptext11 2CD2  
               __ptext20 34B4                 __ptext12 3428                 __ptext21 2FDA  
               __ptext13 159C                 __ptext30 35B0                 __ptext22 36B2  
               __ptext14 3578                 __ptext31 3672                 __ptext23 3538  
               __ptext15 2DD8                 __ptext32 3688                 __ptext24 2A24  
               __ptext16 30A4                 __ptext33 31F8                 __ptext25 289C  
               __ptext17 1E86                 __ptext34 26E8                 __ptext26 2B88  
               __ptext18 2220                 __ptext35 1A5C                 __ptext27 346E  
               __ptext19 314E                 __ptext36 36A8                 __ptext28 35E0  
               __ptext37 369A                 __ptext29 360C                 _conv_AN0 31F8  
            _eusart_init 3688               strcpy@dest 0001                 efgtoa@fp 0034  
               efgtoa@ne 003D                 efgtoa@pp 0045                 efgtoa@ou 0050  
               isa$xinst 000000                 _vfprintf 3388              _isspace$996 0005  
       ___aomod@dividend 0001                 memcpy@d1 0001                 memcpy@s1 0003  
               isdigit@c 0001    __end_of_eusart_string 35E0                sprintf@ap 00E4  
               isspace@c 0001                strcpy@src 0003              efgtoa@nmode 0047  
        ___aomod@divisor 0009              ??_vfpfcnvrt 006F          ___aomod@counter 0011  
               sprintf@f 00E6                 sprintf@s 00DA            ___fladd@signs 000D  
           ___aodiv@sign 0012             ___fladd@aexp 000E             ___fladd@bexp 000F  
           ?_config_FOSC 0001             ___aomod@sign 0012  
