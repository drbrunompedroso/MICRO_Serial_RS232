

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Sep 05 14:13:20 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    57                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    58                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    59                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    60   000000                     
    61                           ; Generated 23/03/2023 GMT
    62                           ; 
    63                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution. Publication is not required when
    77                           ;        this file is used in an embedded application.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC18F4520 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95   000000                     _ADRESL	set	4035
    96   000000                     _ADRESH	set	4036
    97   000000                     _OSCCON	set	4051
    98   000000                     _RCREG	set	4014
    99   000000                     _TXREG	set	4013
   100   000000                     _SPBRG	set	4015
   101   000000                     _BAUDCTLbits	set	4024
   102   000000                     _PORTDbits	set	3971
   103   000000                     _PIR1bits	set	3998
   104   000000                     _ADCON0bits	set	4034
   105   000000                     _TRMT	set	32097
   106   000000                     _PORTD	set	3971
   107   000000                     _TRISD	set	3989
   108   000000                     _RCSTAbits	set	4011
   109   000000                     _TXSTAbits	set	4012
   110   000000                     _RCIF	set	31989
   111   000000                     _ADCON2	set	4032
   112   000000                     _ADCON1	set	4033
   113   000000                     _ADCON0	set	4034
   114   000000                     _OSCTUNE	set	3995
   115   000000                     _INTCON	set	4082
   116   000000                     _PIE1	set	3997
   117                           
   118                           	psect	smallconst
   119   000600                     __psmallconst:
   120                           	callstack 0
   121   000600  00                 	db	0
   122   000601                     STR_1:
   123   000601  44                 	db	68	;'D'
   124   000602  41                 	db	65	;'A'
   125   000603  54                 	db	84	;'T'
   126   000604  41                 	db	65	;'A'
   127   000605  3A                 	db	58	;':'
   128   000606  2C                 	db	44
   129   000607  25                 	db	37
   130   000608  30                 	db	48	;'0'
   131   000609  34                 	db	52	;'4'
   132   00060A  64                 	db	100	;'d'
   133   00060B  2C                 	db	44
   134   00060C  25                 	db	37
   135   00060D  2E                 	db	46
   136   00060E  32                 	db	50	;'2'
   137   00060F  66                 	db	102	;'f'
   138   000610  2C                 	db	44
   139   000611  0D                 	db	13
   140   000612  0A                 	db	10
   141   000613  00                 	db	0
   142   000614                     STR_2:
   143   000614  69                 	db	105	;'i'
   144   000615  6E                 	db	110	;'n'
   145   000616  66                 	db	102	;'f'
   146   000617  00                 	db	0
   147   000618                     STR_5:
   148   000618  6E                 	db	110	;'n'
   149   000619  61                 	db	97	;'a'
   150   00061A  6E                 	db	110	;'n'
   151   00061B  00                 	db	0
   152   00061C  00                 	db	0	; dummy byte at the end
   153   000000                     
   154                           ; #config settings
   155                           
   156                           	psect	cinit
   157   00368C                     __pcinit:
   158                           	callstack 0
   159   00368C                     start_initialization:
   160                           	callstack 0
   161   00368C                     __initialization:
   162                           	callstack 0
   163                           
   164                           ; Clear objects allocated to BANK1 (80 bytes)
   165   00368C  EE01  F000         	lfsr	0,__pbssBANK1
   166   003690  0E50               	movlw	80
   167   003692                     clear_0:
   168   003692  6AEE               	clrf	postinc0,c
   169   003694  06E8               	decf	wreg,f,c
   170   003696  E1FD               	bnz	clear_0
   171                           
   172                           ; Clear objects allocated to BANK0 (56 bytes)
   173   003698  EE00  F080         	lfsr	0,__pbssBANK0
   174   00369C  0E38               	movlw	56
   175   00369E                     clear_1:
   176   00369E  6AEE               	clrf	postinc0,c
   177   0036A0  06E8               	decf	wreg,f,c
   178   0036A2  E1FD               	bnz	clear_1
   179                           
   180                           ; Clear objects allocated to COMRAM (4 bytes)
   181   0036A4  6A7A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   182   0036A6  6A79               	clrf	(__pbssCOMRAM+2)& (0+255),c
   183   0036A8  6A78               	clrf	(__pbssCOMRAM+1)& (0+255),c
   184   0036AA  6A77               	clrf	__pbssCOMRAM& (0+255),c
   185   0036AC                     end_of_initialization:
   186                           	callstack 0
   187   0036AC                     __end_of__initialization:
   188                           	callstack 0
   189   0036AC  907B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   190   0036AE  927B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   191   0036B0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   192   0036B2  6EF8               	movwf	tblptru,c
   193   0036B4  0100               	movlb	0
   194   0036B6  EF86  F01B         	goto	_main	;jump to C main() function
   195                           
   196                           	psect	bssCOMRAM
   197   000077                     __pbssCOMRAM:
   198                           	callstack 0
   199   000077                     _prec:
   200                           	callstack 0
   201   000077                     	ds	2
   202   000079                     _flags:
   203                           	callstack 0
   204   000079                     	ds	1
   205   00007A                     _i:
   206                           	callstack 0
   207   00007A                     	ds	1
   208                           
   209                           	psect	bssBANK0
   210   000080                     __pbssBANK0:
   211                           	callstack 0
   212   000080                     _BufferSERIALRX:
   213                           	callstack 0
   214   000080                     	ds	8
   215   000088                     floorf@F526:
   216                           	callstack 0
   217   000088                     	ds	4
   218   00008C                     ___fpclassifyf@F465:
   219                           	callstack 0
   220   00008C                     	ds	4
   221   000090                     _VoltageADC:
   222                           	callstack 0
   223   000090                     	ds	4
   224   000094                     _width:
   225                           	callstack 0
   226   000094                     	ds	2
   227   000096                     _VdigADC:
   228                           	callstack 0
   229   000096                     	ds	2
   230   000098                     _BufferSERIAL:
   231                           	callstack 0
   232   000098                     	ds	32
   233                           
   234                           	psect	bssBANK1
   235   000100                     __pbssBANK1:
   236                           	callstack 0
   237   000100                     _dbuf:
   238                           	callstack 0
   239   000100                     	ds	80
   240                           
   241                           	psect	cstackBANK0
   242   0000B8                     __pcstackBANK0:
   243                           	callstack 0
   244   0000B8                     vfpfcnvrt@done:
   245                           	callstack 0
   246                           
   247                           ; 2 bytes @ 0x0
   248   0000B8                     	ds	2
   249   0000BA                     vfpfcnvrt@convarg:
   250                           	callstack 0
   251                           
   252                           ; 8 bytes @ 0x2
   253   0000BA                     	ds	8
   254   0000C2                     vfpfcnvrt@c:
   255                           	callstack 0
   256                           
   257                           ; 1 bytes @ 0xA
   258   0000C2                     	ds	1
   259   0000C3                     vfpfcnvrt@cp:
   260                           	callstack 0
   261                           
   262                           ; 2 bytes @ 0xB
   263   0000C3                     	ds	2
   264   0000C5                     ?_vfprintf:
   265                           	callstack 0
   266   0000C5                     vfprintf@fp:
   267                           	callstack 0
   268                           
   269                           ; 2 bytes @ 0xD
   270   0000C5                     	ds	2
   271   0000C7                     vfprintf@fmt:
   272                           	callstack 0
   273                           
   274                           ; 2 bytes @ 0xF
   275   0000C7                     	ds	2
   276   0000C9                     vfprintf@ap:
   277                           	callstack 0
   278                           
   279                           ; 2 bytes @ 0x11
   280   0000C9                     	ds	2
   281   0000CB                     ?_sprintf:
   282                           	callstack 0
   283   0000CB                     sprintf@s:
   284                           	callstack 0
   285                           
   286                           ; 2 bytes @ 0x13
   287   0000CB                     	ds	2
   288   0000CD                     sprintf@fmt:
   289                           	callstack 0
   290                           
   291                           ; 2 bytes @ 0x15
   292   0000CD                     	ds	8
   293   0000D5                     sprintf@ap:
   294                           	callstack 0
   295                           
   296                           ; 2 bytes @ 0x1D
   297   0000D5                     	ds	2
   298   0000D7                     sprintf@f:
   299                           	callstack 0
   300                           
   301                           ; 11 bytes @ 0x1F
   302   0000D7                     	ds	11
   303   0000E2                     ??_transmiter_DATA:
   304                           
   305                           ; 1 bytes @ 0x2A
   306   0000E2                     	ds	2
   307                           
   308                           	psect	cstackCOMRAM
   309   000001                     __pcstackCOMRAM:
   310                           	callstack 0
   311   000001                     ??_receive_DATA:
   312   000001                     
   313                           ; 1 bytes @ 0x0
   314   000001                     	ds	3
   315   000004                     ?___fpclassifyf:
   316                           	callstack 0
   317   000004                     ?_isdigit:
   318                           	callstack 0
   319   000004                     ?_isspace:
   320                           	callstack 0
   321   000004                     ?___wmul:
   322                           	callstack 0
   323   000004                     ?___fladd:
   324                           	callstack 0
   325   000004                     ?___fldiv:
   326                           	callstack 0
   327   000004                     ?_labs:
   328                           	callstack 0
   329   000004                     ?___flneg:
   330                           	callstack 0
   331   000004                     ?___fltol:
   332                           	callstack 0
   333   000004                     ?___xxtofl:
   334                           	callstack 0
   335   000004                     ?___aodiv:
   336                           	callstack 0
   337   000004                     ?___aomod:
   338                           	callstack 0
   339   000004                     eusart_write@c:
   340                           	callstack 0
   341   000004                     ___wmul@multiplier:
   342                           	callstack 0
   343   000004                     isdigit@c:
   344                           	callstack 0
   345   000004                     isspace@c:
   346                           	callstack 0
   347   000004                     memcpy@d1:
   348                           	callstack 0
   349   000004                     fputc@c:
   350                           	callstack 0
   351   000004                     strcpy@dest:
   352                           	callstack 0
   353   000004                     ___fleq@ff1:
   354                           	callstack 0
   355   000004                     ___flneg@f1:
   356                           	callstack 0
   357   000004                     ___fltol@f1:
   358                           	callstack 0
   359   000004                     ___fladd@b:
   360                           	callstack 0
   361   000004                     ___fldiv@b:
   362                           	callstack 0
   363   000004                     ___xxtofl@val:
   364                           	callstack 0
   365   000004                     ___fpclassifyf@x:
   366                           	callstack 0
   367   000004                     labs@a:
   368                           	callstack 0
   369   000004                     ___aodiv@dividend:
   370                           	callstack 0
   371   000004                     ___aomod@dividend:
   372                           	callstack 0
   373                           
   374                           ; 8 bytes @ 0x3
   375   000004                     	ds	1
   376   000005                     eusart_string@str:
   377                           	callstack 0
   378                           
   379                           ; 2 bytes @ 0x4
   380   000005                     	ds	1
   381   000006                     ??_isdigit:
   382   000006                     ??_isspace:
   383   000006                     ___wmul@multiplicand:
   384                           	callstack 0
   385   000006                     memcpy@s1:
   386                           	callstack 0
   387   000006                     fputc@fp:
   388                           	callstack 0
   389   000006                     strcpy@src:
   390                           	callstack 0
   391                           
   392                           ; 2 bytes @ 0x5
   393   000006                     	ds	1
   394   000007                     
   395                           ; 1 bytes @ 0x6
   396   000007                     	ds	1
   397   000008                     ??_fputc:
   398   000008                     ??___fpclassifyf:
   399   000008                     ??_labs:
   400   000008                     ??___fltol:
   401   000008                     ??___xxtofl:
   402   000008                     _isspace$1117:
   403                           	callstack 0
   404   000008                     ___wmul@product:
   405                           	callstack 0
   406   000008                     memcpy@n:
   407                           	callstack 0
   408   000008                     strcpy@s:
   409                           	callstack 0
   410   000008                     ___fleq@ff2:
   411                           	callstack 0
   412   000008                     ___fladd@a:
   413                           	callstack 0
   414   000008                     ___fldiv@a:
   415                           	callstack 0
   416                           
   417                           ; 4 bytes @ 0x7
   418   000008                     	ds	2
   419   00000A                     ?_atoi:
   420                           	callstack 0
   421   00000A                     memcpy@tmp:
   422                           	callstack 0
   423   00000A                     atoi@s:
   424                           	callstack 0
   425   00000A                     strcpy@d:
   426                           	callstack 0
   427                           
   428                           ; 2 bytes @ 0x9
   429   00000A                     	ds	1
   430   00000B                     memcpy@d:
   431                           	callstack 0
   432                           
   433                           ; 2 bytes @ 0xA
   434   00000B                     	ds	1
   435   00000C                     ??___fladd:
   436   00000C                     ??___fldiv:
   437   00000C                     ??_atoi:
   438   00000C                     ??___fleq:
   439   00000C                     ___fltol@sign1:
   440                           	callstack 0
   441   00000C                     ___xxtofl@sign:
   442                           	callstack 0
   443   00000C                     ___fpclassifyf@e:
   444                           	callstack 0
   445   00000C                     ___aodiv@divisor:
   446                           	callstack 0
   447   00000C                     ___aomod@divisor:
   448                           	callstack 0
   449                           
   450                           ; 8 bytes @ 0xB
   451   00000C                     	ds	1
   452   00000D                     ___fltol@exp1:
   453                           	callstack 0
   454   00000D                     ___xxtofl@exp:
   455                           	callstack 0
   456   00000D                     memcpy@s:
   457                           	callstack 0
   458   00000D                     fputs@s:
   459                           	callstack 0
   460                           
   461                           ; 2 bytes @ 0xC
   462   00000D                     	ds	1
   463   00000E                     ___xxtofl@arg:
   464                           	callstack 0
   465   00000E                     ___fpclassifyf@u:
   466                           	callstack 0
   467                           
   468                           ; 4 bytes @ 0xD
   469   00000E                     	ds	1
   470   00000F                     atoi@neg:
   471                           	callstack 0
   472   00000F                     fputs@fp:
   473                           	callstack 0
   474                           
   475                           ; 2 bytes @ 0xE
   476   00000F                     	ds	1
   477   000010                     ___fladd@signs:
   478                           	callstack 0
   479   000010                     ___fldiv@rem:
   480                           	callstack 0
   481                           
   482                           ; 4 bytes @ 0xF
   483   000010                     	ds	1
   484   000011                     ___fladd@aexp:
   485                           	callstack 0
   486   000011                     fputs@c:
   487                           	callstack 0
   488   000011                     atoi@n:
   489                           	callstack 0
   490                           
   491                           ; 2 bytes @ 0x10
   492   000011                     	ds	1
   493   000012                     ?___flmul:
   494                           	callstack 0
   495   000012                     ___fladd@bexp:
   496                           	callstack 0
   497   000012                     fputs@i:
   498                           	callstack 0
   499   000012                     ___flmul@b:
   500                           	callstack 0
   501                           
   502                           ; 4 bytes @ 0x11
   503   000012                     	ds	1
   504   000013                     ___fladd@grs:
   505                           	callstack 0
   506                           
   507                           ; 1 bytes @ 0x12
   508   000013                     	ds	1
   509   000014                     ___aodiv@counter:
   510                           	callstack 0
   511   000014                     ___aomod@counter:
   512                           	callstack 0
   513   000014                     ___fldiv@sign:
   514                           	callstack 0
   515   000014                     pad@fp:
   516                           	callstack 0
   517                           
   518                           ; 2 bytes @ 0x13
   519   000014                     	ds	1
   520   000015                     ___aodiv@sign:
   521                           	callstack 0
   522   000015                     ___aomod@sign:
   523                           	callstack 0
   524   000015                     ___fldiv@new_exp:
   525                           	callstack 0
   526                           
   527                           ; 2 bytes @ 0x14
   528   000015                     	ds	1
   529   000016                     ?_abs:
   530                           	callstack 0
   531   000016                     pad@buf:
   532                           	callstack 0
   533   000016                     abs@a:
   534                           	callstack 0
   535   000016                     ___flmul@a:
   536                           	callstack 0
   537   000016                     ___aodiv@quotient:
   538                           	callstack 0
   539                           
   540                           ; 8 bytes @ 0x15
   541   000016                     	ds	1
   542   000017                     ___fldiv@grs:
   543                           	callstack 0
   544                           
   545                           ; 4 bytes @ 0x16
   546   000017                     	ds	1
   547   000018                     ??_abs:
   548   000018                     pad@p:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0x17
   552   000018                     	ds	2
   553   00001A                     ??___flmul:
   554   00001A                     ??_pad:
   555                           
   556                           ; 1 bytes @ 0x19
   557   00001A                     	ds	1
   558   00001B                     ___fldiv@bexp:
   559                           	callstack 0
   560   00001B                     pad@i:
   561                           	callstack 0
   562                           
   563                           ; 2 bytes @ 0x1A
   564   00001B                     	ds	1
   565   00001C                     ___fldiv@aexp:
   566                           	callstack 0
   567                           
   568                           ; 1 bytes @ 0x1B
   569   00001C                     	ds	1
   570   00001D                     ?_floorf:
   571                           	callstack 0
   572   00001D                     pad@w:
   573                           	callstack 0
   574   00001D                     floorf@x:
   575                           	callstack 0
   576                           
   577                           ; 4 bytes @ 0x1C
   578   00001D                     	ds	1
   579   00001E                     ___flmul@sign:
   580                           	callstack 0
   581                           
   582                           ; 1 bytes @ 0x1D
   583   00001E                     	ds	1
   584   00001F                     ___flmul@aexp:
   585                           	callstack 0
   586   00001F                     dtoa@fp:
   587                           	callstack 0
   588                           
   589                           ; 2 bytes @ 0x1E
   590   00001F                     	ds	1
   591   000020                     ___flmul@grs:
   592                           	callstack 0
   593                           
   594                           ; 4 bytes @ 0x1F
   595   000020                     	ds	1
   596   000021                     ??_floorf:
   597   000021                     dtoa@d:
   598                           	callstack 0
   599                           
   600                           ; 8 bytes @ 0x20
   601   000021                     	ds	3
   602   000024                     ___flmul@bexp:
   603                           	callstack 0
   604                           
   605                           ; 1 bytes @ 0x23
   606   000024                     	ds	1
   607   000025                     ___flmul@prod:
   608                           	callstack 0
   609                           
   610                           ; 4 bytes @ 0x24
   611   000025                     	ds	2
   612   000027                     floorf@m:
   613                           	callstack 0
   614                           
   615                           ; 4 bytes @ 0x26
   616   000027                     	ds	2
   617   000029                     ??_dtoa:
   618   000029                     ___flmul@temp:
   619                           	callstack 0
   620                           
   621                           ; 2 bytes @ 0x28
   622   000029                     	ds	2
   623   00002B                     ??_conv_AN0:
   624   00002B                     ?___flsub:
   625                           	callstack 0
   626   00002B                     floorf@e:
   627                           	callstack 0
   628   00002B                     ___flge@ff1:
   629                           	callstack 0
   630   00002B                     ___flsub@b:
   631                           	callstack 0
   632                           
   633                           ; 4 bytes @ 0x2A
   634   00002B                     	ds	2
   635   00002D                     floorf@u:
   636                           	callstack 0
   637                           
   638                           ; 4 bytes @ 0x2C
   639   00002D                     	ds	2
   640   00002F                     ___flge@ff2:
   641                           	callstack 0
   642   00002F                     ___flsub@a:
   643                           	callstack 0
   644                           
   645                           ; 4 bytes @ 0x2E
   646   00002F                     	ds	2
   647   000031                     _dtoa$1006:
   648                           	callstack 0
   649                           
   650                           ; 2 bytes @ 0x30
   651   000031                     	ds	2
   652   000033                     ??___flge:
   653   000033                     dtoa@p:
   654                           	callstack 0
   655                           
   656                           ; 2 bytes @ 0x32
   657   000033                     	ds	2
   658   000035                     dtoa@w:
   659                           	callstack 0
   660                           
   661                           ; 2 bytes @ 0x34
   662   000035                     	ds	2
   663   000037                     efgtoa@fp:
   664                           	callstack 0
   665   000037                     dtoa@n:
   666                           	callstack 0
   667                           
   668                           ; 8 bytes @ 0x36
   669   000037                     	ds	2
   670   000039                     efgtoa@f:
   671                           	callstack 0
   672                           
   673                           ; 4 bytes @ 0x38
   674   000039                     	ds	4
   675   00003D                     efgtoa@c:
   676                           	callstack 0
   677                           
   678                           ; 1 bytes @ 0x3C
   679   00003D                     	ds	1
   680   00003E                     ??_efgtoa:
   681                           
   682                           ; 1 bytes @ 0x3D
   683   00003E                     	ds	1
   684   00003F                     dtoa@s:
   685                           	callstack 0
   686                           
   687                           ; 1 bytes @ 0x3E
   688   00003F                     	ds	1
   689   000040                     dtoa@i:
   690                           	callstack 0
   691   000040                     efgtoa@ne:
   692                           	callstack 0
   693                           
   694                           ; 2 bytes @ 0x3F
   695   000040                     	ds	2
   696   000042                     efgtoa@p:
   697                           	callstack 0
   698                           
   699                           ; 2 bytes @ 0x41
   700   000042                     	ds	2
   701   000044                     efgtoa@t:
   702                           	callstack 0
   703                           
   704                           ; 2 bytes @ 0x43
   705   000044                     	ds	2
   706   000046                     _efgtoa$1037:
   707                           	callstack 0
   708                           
   709                           ; 2 bytes @ 0x45
   710   000046                     	ds	2
   711   000048                     efgtoa@pp:
   712                           	callstack 0
   713                           
   714                           ; 1 bytes @ 0x47
   715   000048                     	ds	1
   716   000049                     efgtoa@mode:
   717                           	callstack 0
   718                           
   719                           ; 1 bytes @ 0x48
   720   000049                     	ds	1
   721   00004A                     efgtoa@nmode:
   722                           	callstack 0
   723                           
   724                           ; 1 bytes @ 0x49
   725   00004A                     	ds	1
   726   00004B                     efgtoa@d:
   727                           	callstack 0
   728                           
   729                           ; 2 bytes @ 0x4A
   730   00004B                     	ds	2
   731   00004D                     efgtoa@m:
   732                           	callstack 0
   733                           
   734                           ; 2 bytes @ 0x4C
   735   00004D                     	ds	2
   736   00004F                     efgtoa@e:
   737                           	callstack 0
   738                           
   739                           ; 2 bytes @ 0x4E
   740   00004F                     	ds	2
   741   000051                     efgtoa@ou:
   742                           	callstack 0
   743                           
   744                           ; 4 bytes @ 0x50
   745   000051                     	ds	4
   746   000055                     efgtoa@w:
   747                           	callstack 0
   748                           
   749                           ; 2 bytes @ 0x54
   750   000055                     	ds	2
   751   000057                     efgtoa@h:
   752                           	callstack 0
   753                           
   754                           ; 4 bytes @ 0x56
   755   000057                     	ds	4
   756   00005B                     efgtoa@l:
   757                           	callstack 0
   758                           
   759                           ; 4 bytes @ 0x5A
   760   00005B                     	ds	4
   761   00005F                     efgtoa@i:
   762                           	callstack 0
   763                           
   764                           ; 2 bytes @ 0x5E
   765   00005F                     	ds	2
   766   000061                     efgtoa@sign:
   767                           	callstack 0
   768                           
   769                           ; 1 bytes @ 0x60
   770   000061                     	ds	1
   771   000062                     efgtoa@g:
   772                           	callstack 0
   773                           
   774                           ; 4 bytes @ 0x61
   775   000062                     	ds	4
   776   000066                     efgtoa@n:
   777                           	callstack 0
   778                           
   779                           ; 2 bytes @ 0x65
   780   000066                     	ds	2
   781   000068                     efgtoa@u:
   782                           	callstack 0
   783                           
   784                           ; 4 bytes @ 0x67
   785   000068                     	ds	4
   786   00006C                     vfpfcnvrt@fp:
   787                           	callstack 0
   788                           
   789                           ; 2 bytes @ 0x6B
   790   00006C                     	ds	2
   791   00006E                     vfpfcnvrt@fmt:
   792                           	callstack 0
   793                           
   794                           ; 2 bytes @ 0x6D
   795   00006E                     	ds	2
   796   000070                     vfpfcnvrt@ap:
   797                           	callstack 0
   798                           
   799                           ; 2 bytes @ 0x6F
   800   000070                     	ds	2
   801   000072                     ??_vfpfcnvrt:
   802                           
   803                           ; 1 bytes @ 0x71
   804   000072                     	ds	3
   805   000075                     vfprintf@cfmt:
   806                           	callstack 0
   807                           
   808                           ; 2 bytes @ 0x74
   809   000075                     	ds	2
   810   000077                     
   811                           ; 1 bytes @ 0x76
   812 ;;
   813 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   814 ;;
   815 ;; *************** function _main *****************
   816 ;; Defined at:
   817 ;;		line 149 in file "Program_main.c"
   818 ;; Parameters:    Size  Location     Type
   819 ;;		None
   820 ;; Auto vars:     Size  Location     Type
   821 ;;		None
   822 ;; Return value:  Size  Location     Type
   823 ;;                  1    wreg      void 
   824 ;; Registers used:
   825 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   826 ;; Tracked objects:
   827 ;;		On entry : 0/0
   828 ;;		On exit  : 0/0
   829 ;;		Unchanged: 0/0
   830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   831 ;;      Params:         0       0       0       0       0       0       0
   832 ;;      Locals:         0       0       0       0       0       0       0
   833 ;;      Temps:          0       0       0       0       0       0       0
   834 ;;      Totals:         0       0       0       0       0       0       0
   835 ;;Total ram usage:        0 bytes
   836 ;; Hardware stack levels required when called: 11
   837 ;; This function calls:
   838 ;;		_config_ADC
   839 ;;		_config_FOSC
   840 ;;		_config_IO
   841 ;;		_config_Interrupt
   842 ;;		_conv_AN0
   843 ;;		_eusart_init
   844 ;;		_transmiter_DATA
   845 ;; This function is called by:
   846 ;;		Startup code after reset
   847 ;; This function uses a non-reentrant model
   848 ;;
   849                           
   850                           	psect	text0
   851   00370C                     __ptext0:
   852                           	callstack 0
   853   00370C                     _main:
   854                           	callstack 20
   855   00370C                     
   856                           ;Program_main.c: 151:     config_FOSC();
   857   00370C  ECC6  F01B         	call	_config_FOSC	;wreg free
   858                           
   859                           ;Program_main.c: 152:     config_IO();
   860   003710  ECC1  F01B         	call	_config_IO	;wreg free
   861                           
   862                           ;Program_main.c: 153:     config_ADC();
   863   003714  ECB5  F01B         	call	_config_ADC	;wreg free
   864                           
   865                           ;Program_main.c: 154:     config_Interrupt();
   866   003718  ECBC  F01B         	call	_config_Interrupt	;wreg free
   867                           
   868                           ;Program_main.c: 155:     eusart_init();
   869   00371C  ECA3  F01B         	call	_eusart_init	;wreg free
   870   003720                     l5435:
   871                           
   872                           ;Program_main.c: 157:     {;Program_main.c: 158:        conv_AN0();
   873   003720  EC51  F019         	call	_conv_AN0	;wreg free
   874   003724                     
   875                           ;Program_main.c: 159:        transmiter_DATA();
   876   003724  ECC6  F019         	call	_transmiter_DATA	;wreg free
   877   003728  EF90  F01B         	goto	l5435
   878   00372C  EF07  F000         	goto	start
   879   003730                     __end_of_main:
   880                           	callstack 0
   881                           
   882 ;; *************** function _transmiter_DATA *****************
   883 ;; Defined at:
   884 ;;		line 108 in file "Program_main.c"
   885 ;; Parameters:    Size  Location     Type
   886 ;;		None
   887 ;; Auto vars:     Size  Location     Type
   888 ;;		None
   889 ;; Return value:  Size  Location     Type
   890 ;;                  1    wreg      void 
   891 ;; Registers used:
   892 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   893 ;; Tracked objects:
   894 ;;		On entry : 0/0
   895 ;;		On exit  : 0/0
   896 ;;		Unchanged: 0/0
   897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   898 ;;      Params:         0       0       0       0       0       0       0
   899 ;;      Locals:         0       0       0       0       0       0       0
   900 ;;      Temps:          0       2       0       0       0       0       0
   901 ;;      Totals:         0       2       0       0       0       0       0
   902 ;;Total ram usage:        2 bytes
   903 ;; Hardware stack levels used: 1
   904 ;; Hardware stack levels required when called: 10
   905 ;; This function calls:
   906 ;;		_eusart_string
   907 ;;		_sprintf
   908 ;; This function is called by:
   909 ;;		_main
   910 ;; This function uses a non-reentrant model
   911 ;;
   912                           
   913                           	psect	text1
   914   00338C                     __ptext1:
   915                           	callstack 0
   916   00338C                     _transmiter_DATA:
   917                           	callstack 20
   918   00338C                     
   919                           ;Program_main.c: 110:     sprintf(BufferSERIAL, "DATA:"
   920   00338C  0E98               	movlw	low _BufferSERIAL
   921   00338E  0100               	movlb	0	; () banked
   922   003390  6FCB               	movwf	sprintf@s& (0+255),b
   923   003392  0E00               	movlw	high _BufferSERIAL
   924   003394  6FCC               	movwf	(sprintf@s+1)& (0+255),b
   925   003396  0E01               	movlw	low STR_1
   926   003398  6FCD               	movwf	sprintf@fmt& (0+255),b
   927   00339A  0E06               	movlw	high STR_1
   928   00339C  6FCE               	movwf	(sprintf@fmt+1)& (0+255),b
   929   00339E  C096  F0CF         	movff	_VdigADC,?_sprintf+4
   930   0033A2  C097  F0D0         	movff	_VdigADC+1,?_sprintf+5
   931   0033A6  C090  F0D1         	movff	_VoltageADC,?_sprintf+6
   932   0033AA  C091  F0D2         	movff	_VoltageADC+1,?_sprintf+7
   933   0033AE  C092  F0D3         	movff	_VoltageADC+2,?_sprintf+8
   934   0033B2  C093  F0D4         	movff	_VoltageADC+3,?_sprintf+9
   935   0033B6  ECF1  F019         	call	_sprintf	;wreg free
   936   0033BA                     
   937                           ;Program_main.c: 119:     eusart_string(BufferSERIAL);
   938   0033BA  0E98               	movlw	low _BufferSERIAL
   939   0033BC  6E05               	movwf	eusart_string@str^0,c
   940   0033BE  0E00               	movlw	high _BufferSERIAL
   941   0033C0  6E06               	movwf	(eusart_string@str+1)^0,c
   942   0033C2  EC2E  F01B         	call	_eusart_string	;wreg free
   943   0033C6                     
   944                           ;Program_main.c: 120:     _delay((unsigned long)((100)*(8000000/4000.0)));
   945   0033C6  0E02               	movlw	2
   946   0033C8  0100               	movlb	0	; () banked
   947   0033CA  6FE3               	movwf	(??_transmiter_DATA+1)& (0+255),b
   948   0033CC  0E04               	movlw	4
   949   0033CE  6FE2               	movwf	??_transmiter_DATA& (0+255),b
   950   0033D0  0EBA               	movlw	186
   951   0033D2                     u6667:
   952   0033D2  2EE8               	decfsz	wreg,f,c
   953   0033D4  D7FE               	bra	u6667
   954   0033D6  2FE2               	decfsz	??_transmiter_DATA& (0+255),f,b
   955   0033D8  D7FC               	bra	u6667
   956   0033DA  2FE3               	decfsz	(??_transmiter_DATA+1)& (0+255),f,b
   957   0033DC  D7FA               	bra	u6667
   958   0033DE  F000               	nop	
   959   0033E0  0012               	return		;funcret
   960   0033E2                     __end_of_transmiter_DATA:
   961                           	callstack 0
   962                           
   963 ;; *************** function _sprintf *****************
   964 ;; Defined at:
   965 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
   966 ;; Parameters:    Size  Location     Type
   967 ;;  s               2   19[BANK0 ] PTR unsigned char 
   968 ;;		 -> BufferSERIAL(32), 
   969 ;;  fmt             2   21[BANK0 ] PTR const unsigned char 
   970 ;;		 -> STR_1(19), 
   971 ;; Auto vars:     Size  Location     Type
   972 ;;  f              11   31[BANK0 ] struct _IO_FILE
   973 ;;  ap              2   29[BANK0 ] PTR void [1]
   974 ;;		 -> ?_sprintf(2), 
   975 ;;  ret             2    0        int 
   976 ;; Return value:  Size  Location     Type
   977 ;;                  2   19[BANK0 ] int 
   978 ;; Registers used:
   979 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   980 ;; Tracked objects:
   981 ;;		On entry : 0/0
   982 ;;		On exit  : 0/0
   983 ;;		Unchanged: 0/0
   984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   985 ;;      Params:         0      10       0       0       0       0       0
   986 ;;      Locals:         0      13       0       0       0       0       0
   987 ;;      Temps:          0       0       0       0       0       0       0
   988 ;;      Totals:         0      23       0       0       0       0       0
   989 ;;Total ram usage:       23 bytes
   990 ;; Hardware stack levels used: 1
   991 ;; Hardware stack levels required when called: 9
   992 ;; This function calls:
   993 ;;		_vfprintf
   994 ;; This function is called by:
   995 ;;		_transmiter_DATA
   996 ;; This function uses a non-reentrant model
   997 ;;
   998                           
   999                           	psect	text2
  1000   0033E2                     __ptext2:
  1001                           	callstack 0
  1002   0033E2                     _sprintf:
  1003                           	callstack 20
  1004   0033E2  0ECF               	movlw	low (?_sprintf+4)
  1005   0033E4  0100               	movlb	0	; () banked
  1006   0033E6  6FD5               	movwf	sprintf@ap& (0+255),b
  1007   0033E8  0E00               	movlw	high (?_sprintf+4)
  1008   0033EA  6FD6               	movwf	(sprintf@ap+1)& (0+255),b
  1009   0033EC  C0CB  F0D7         	movff	sprintf@s,sprintf@f
  1010   0033F0  C0CC  F0D8         	movff	sprintf@s+1,sprintf@f+1
  1011   0033F4                     
  1012                           ; BSR set to: 0
  1013   0033F4  0E00               	movlw	0
  1014   0033F6  6FDB               	movwf	(sprintf@f+4)& (0+255),b
  1015   0033F8  0E00               	movlw	0
  1016   0033FA  6FDA               	movwf	(sprintf@f+3)& (0+255),b
  1017   0033FC                     
  1018                           ; BSR set to: 0
  1019   0033FC  0E00               	movlw	0
  1020   0033FE  6FE1               	movwf	(sprintf@f+10)& (0+255),b
  1021   003400  0E00               	movlw	0
  1022   003402  6FE0               	movwf	(sprintf@f+9)& (0+255),b
  1023   003404                     
  1024                           ; BSR set to: 0
  1025   003404  0ED7               	movlw	low sprintf@f
  1026   003406  6FC5               	movwf	vfprintf@fp& (0+255),b
  1027   003408  0E00               	movlw	high sprintf@f
  1028   00340A  6FC6               	movwf	(vfprintf@fp+1)& (0+255),b
  1029   00340C  C0CD  F0C7         	movff	sprintf@fmt,vfprintf@fmt
  1030   003410  C0CE  F0C8         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1031   003414  0ED5               	movlw	low sprintf@ap
  1032   003416  6FC9               	movwf	vfprintf@ap& (0+255),b
  1033   003418  0E00               	movlw	high sprintf@ap
  1034   00341A  6FCA               	movwf	(vfprintf@ap+1)& (0+255),b
  1035   00341C  EC1A  F01A         	call	_vfprintf	;wreg free
  1036   003420  0100               	movlb	0	; () banked
  1037   003422  51DA               	movf	(sprintf@f+3)& (0+255),w,b
  1038   003424  25CB               	addwf	sprintf@s& (0+255),w,b
  1039   003426  6ED9               	movwf	fsr2l,c
  1040   003428  51DB               	movf	(sprintf@f+4)& (0+255),w,b
  1041   00342A  21CC               	addwfc	(sprintf@s+1)& (0+255),w,b
  1042   00342C  6EDA               	movwf	fsr2h,c
  1043   00342E  0E00               	movlw	0
  1044   003430  6EDF               	movwf	indf2,c
  1045   003432                     
  1046                           ; BSR set to: 0
  1047   003432  0012               	return		;funcret
  1048   003434                     __end_of_sprintf:
  1049                           	callstack 0
  1050                           
  1051 ;; *************** function _vfprintf *****************
  1052 ;; Defined at:
  1053 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1054 ;; Parameters:    Size  Location     Type
  1055 ;;  fp              2   13[BANK0 ] PTR struct _IO_FILE
  1056 ;;		 -> sprintf@f(11), 
  1057 ;;  fmt             2   15[BANK0 ] PTR const unsigned char 
  1058 ;;		 -> STR_1(19), 
  1059 ;;  ap              2   17[BANK0 ] PTR PTR void 
  1060 ;;		 -> sprintf@ap(2), 
  1061 ;; Auto vars:     Size  Location     Type
  1062 ;;  cfmt            2  116[COMRAM] PTR unsigned char 
  1063 ;;		 -> STR_1(19), 
  1064 ;; Return value:  Size  Location     Type
  1065 ;;                  2   13[BANK0 ] int 
  1066 ;; Registers used:
  1067 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1068 ;; Tracked objects:
  1069 ;;		On entry : 0/0
  1070 ;;		On exit  : 0/0
  1071 ;;		Unchanged: 0/0
  1072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1073 ;;      Params:         0       6       0       0       0       0       0
  1074 ;;      Locals:         2       0       0       0       0       0       0
  1075 ;;      Temps:          0       0       0       0       0       0       0
  1076 ;;      Totals:         2       6       0       0       0       0       0
  1077 ;;Total ram usage:        8 bytes
  1078 ;; Hardware stack levels used: 1
  1079 ;; Hardware stack levels required when called: 8
  1080 ;; This function calls:
  1081 ;;		_vfpfcnvrt
  1082 ;; This function is called by:
  1083 ;;		_sprintf
  1084 ;; This function uses a non-reentrant model
  1085 ;;
  1086                           
  1087                           	psect	text3
  1088   003434                     __ptext3:
  1089                           	callstack 0
  1090   003434                     _vfprintf:
  1091                           	callstack 20
  1092   003434                     
  1093                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1094   003434  C0C7  F075         	movff	vfprintf@fmt,vfprintf@cfmt
  1095   003438  C0C8  F076         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1096                           
  1097                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1098   00343C  EF2E  F01A         	goto	l5401
  1099   003440                     l5399:
  1100                           
  1101                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1102   003440  C0C5  F06C         	movff	vfprintf@fp,vfpfcnvrt@fp
  1103   003444  C0C6  F06D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1104   003448  0E75               	movlw	low vfprintf@cfmt
  1105   00344A  6E6E               	movwf	vfpfcnvrt@fmt^0,c
  1106   00344C  0E00               	movlw	high vfprintf@cfmt
  1107   00344E  6E6F               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1108   003450  C0C9  F070         	movff	vfprintf@ap,vfpfcnvrt@ap
  1109   003454  C0CA  F071         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1110   003458  EC2C  F008         	call	_vfpfcnvrt	;wreg free
  1111   00345C                     l5401:
  1112                           
  1113                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1114   00345C  C075  FFF6         	movff	vfprintf@cfmt,tblptrl
  1115   003460  C076  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1116   003464                     	if	0	;tblptru may be non-zero
  1117   003464                     	endif
  1118   003464                     	if	0	;tblptru may be non-zero
  1119   003464                     	endif
  1120   003464  0008               	tblrd		*
  1121   003466  50F5               	movf	tablat,w,c
  1122   003468  0900               	iorlw	0
  1123   00346A  A4D8               	btfss	status,2,c
  1124   00346C  EF3A  F01A         	goto	u6641
  1125   003470  EF3C  F01A         	goto	u6640
  1126   003474                     u6641:
  1127   003474  EF20  F01A         	goto	l5399
  1128   003478                     u6640:
  1129   003478                     
  1130                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1131   003478  0E00               	movlw	0
  1132   00347A  0100               	movlb	0	; () banked
  1133   00347C  6FC6               	movwf	(?_vfprintf+1)& (0+255),b
  1134   00347E  0E00               	movlw	0
  1135   003480  6FC5               	movwf	?_vfprintf& (0+255),b
  1136   003482                     
  1137                           ; BSR set to: 0
  1138   003482  0012               	return		;funcret
  1139   003484                     __end_of_vfprintf:
  1140                           	callstack 0
  1141                           
  1142 ;; *************** function _vfpfcnvrt *****************
  1143 ;; Defined at:
  1144 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1145 ;; Parameters:    Size  Location     Type
  1146 ;;  fp              2  107[COMRAM] PTR struct _IO_FILE
  1147 ;;		 -> sprintf@f(11), 
  1148 ;;  fmt             2  109[COMRAM] PTR PTR unsigned char 
  1149 ;;		 -> vfprintf@cfmt(2), 
  1150 ;;  ap              2  111[COMRAM] PTR PTR void 
  1151 ;;		 -> sprintf@ap(2), 
  1152 ;; Auto vars:     Size  Location     Type
  1153 ;;  convarg         8    2[BANK0 ] struct .
  1154 ;;  cp              2   11[BANK0 ] PTR unsigned char 
  1155 ;;		 -> STR_1(19), 
  1156 ;;  done            2    0[BANK0 ] int 
  1157 ;;  i               2    0        int 
  1158 ;;  c               1   10[BANK0 ] unsigned char 
  1159 ;; Return value:  Size  Location     Type
  1160 ;;                  1    wreg      void 
  1161 ;; Registers used:
  1162 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1163 ;; Tracked objects:
  1164 ;;		On entry : 0/0
  1165 ;;		On exit  : 0/0
  1166 ;;		Unchanged: 0/0
  1167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1168 ;;      Params:         6       0       0       0       0       0       0
  1169 ;;      Locals:         0      13       0       0       0       0       0
  1170 ;;      Temps:          3       0       0       0       0       0       0
  1171 ;;      Totals:         9      13       0       0       0       0       0
  1172 ;;Total ram usage:       22 bytes
  1173 ;; Hardware stack levels used: 1
  1174 ;; Hardware stack levels required when called: 7
  1175 ;; This function calls:
  1176 ;;		_atoi
  1177 ;;		_dtoa
  1178 ;;		_efgtoa
  1179 ;;		_fputc
  1180 ;;		_isdigit
  1181 ;; This function is called by:
  1182 ;;		_vfprintf
  1183 ;; This function uses a non-reentrant model
  1184 ;;
  1185                           
  1186                           	psect	text4
  1187   001058                     __ptext4:
  1188                           	callstack 0
  1189   001058                     _vfpfcnvrt:
  1190                           	callstack 20
  1191   001058                     
  1192                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1193   001058  C06E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1194   00105C  C06F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1195   001060  CFDE FFF6          	movff	postinc2,tblptrl
  1196   001064  CFDD FFF7          	movff	postdec2,tblptrh
  1197   001068                     	if	0	;tblptru may be non-zero
  1198   001068                     	endif
  1199   001068                     	if	0	;tblptru may be non-zero
  1200   001068                     	endif
  1201   001068  0008               	tblrd		*
  1202   00106A  50F5               	movf	tablat,w,c
  1203   00106C  0A25               	xorlw	37
  1204   00106E  A4D8               	btfss	status,2,c
  1205   001070  EF3C  F008         	goto	u6531
  1206   001074  EF3E  F008         	goto	u6530
  1207   001078                     u6531:
  1208   001078  EFB2  F00A         	goto	l5359
  1209   00107C                     u6530:
  1210   00107C                     
  1211                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1212   00107C  C06E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1213   001080  C06F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1214   001084  2ADE               	incf	postinc2,f,c
  1215   001086  0E00               	movlw	0
  1216   001088  22DD               	addwfc	postdec2,f,c
  1217   00108A                     
  1218                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1219   00108A  0E00               	movlw	0
  1220   00108C  0100               	movlb	0	; () banked
  1221   00108E  6F95               	movwf	(_width+1)& (0+255),b
  1222   001090  0E00               	movlw	0
  1223   001092  6F94               	movwf	_width& (0+255),b
  1224   001094  C094  F079         	movff	_width,_flags
  1225   001098                     
  1226                           ; BSR set to: 0
  1227                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1228   001098  6877               	setf	_prec^0,c
  1229   00109A  6878               	setf	(_prec+1)^0,c
  1230   00109C                     
  1231                           ; BSR set to: 0
  1232                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1027:         don
      +                          e = 0;
  1233   00109C  0E00               	movlw	0
  1234   00109E  6FB9               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1235   0010A0  0E00               	movlw	0
  1236   0010A2  6FB8               	movwf	vfpfcnvrt@done& (0+255),b
  1237                           
  1238                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  1239   0010A4  EF7E  F008         	goto	l5273
  1240   0010A8                     l5263:
  1241                           
  1242                           ; BSR set to: 0
  1243                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1038:            
      +                                   flags |= (1 << 1);
  1244   0010A8  8279               	bsf	_flags^0,1,c
  1245   0010AA                     
  1246                           ; BSR set to: 0
  1247                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1039:            
      +                                   ++*fmt;
  1248   0010AA  C06E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1249   0010AE  C06F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1250   0010B2  2ADE               	incf	postinc2,f,c
  1251   0010B4  0E00               	movlw	0
  1252   0010B6  22DD               	addwfc	postdec2,f,c
  1253                           
  1254                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1040:            
      +                                   break;
  1255   0010B8  EF7E  F008         	goto	l5273
  1256   0010BC                     l5267:
  1257                           
  1258                           ; BSR set to: 0
  1259                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1061:            
      +                                   done = 1;
  1260   0010BC  0E00               	movlw	0
  1261   0010BE  6FB9               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1262   0010C0  0E01               	movlw	1
  1263   0010C2  6FB8               	movwf	vfpfcnvrt@done& (0+255),b
  1264                           
  1265                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1062:            
      +                                   break;
  1266   0010C4  EF7E  F008         	goto	l5273
  1267   0010C8                     l5271:
  1268                           
  1269                           ; BSR set to: 0
  1270   0010C8  C06E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1271   0010CC  C06F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1272   0010D0  CFDE FFF6          	movff	postinc2,tblptrl
  1273   0010D4  CFDD FFF7          	movff	postdec2,tblptrh
  1274   0010D8                     	if	0	;tblptru may be non-zero
  1275   0010D8                     	endif
  1276   0010D8                     	if	0	;tblptru may be non-zero
  1277   0010D8                     	endif
  1278   0010D8  0008               	tblrd		*
  1279   0010DA  50F5               	movf	tablat,w,c
  1280   0010DC  6E72               	movwf	??_vfpfcnvrt^0,c
  1281   0010DE  6A73               	clrf	(??_vfpfcnvrt+1)^0,c
  1282                           
  1283                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1284                           ; Switch size 1, requested type "simple"
  1285                           ; Number of cases is 1, Range of values is 0 to 0
  1286                           ; switch strategies available:
  1287                           ; Name         Instructions Cycles
  1288                           ; simple_byte            4     3 (average)
  1289                           ;	Chosen strategy is simple_byte
  1290   0010E0  5073               	movf	(??_vfpfcnvrt+1)^0,w,c
  1291   0010E2  0A00               	xorlw	0	; case 0
  1292   0010E4  B4D8               	btfsc	status,2,c
  1293   0010E6  EF77  F008         	goto	l5619
  1294   0010EA  EF5E  F008         	goto	l5267
  1295   0010EE                     l5619:
  1296                           
  1297                           ; BSR set to: 0
  1298                           ; Switch size 1, requested type "simple"
  1299                           ; Number of cases is 1, Range of values is 48 to 48
  1300                           ; switch strategies available:
  1301                           ; Name         Instructions Cycles
  1302                           ; simple_byte            4     3 (average)
  1303                           ;	Chosen strategy is simple_byte
  1304   0010EE  5072               	movf	??_vfpfcnvrt^0,w,c
  1305   0010F0  0A30               	xorlw	48	; case 48
  1306   0010F2  B4D8               	btfsc	status,2,c
  1307   0010F4  EF54  F008         	goto	l5263
  1308   0010F8  EF5E  F008         	goto	l5267
  1309   0010FC                     l5273:
  1310                           
  1311                           ; BSR set to: 0
  1312                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  1313   0010FC  51B8               	movf	vfpfcnvrt@done& (0+255),w,b
  1314   0010FE  11B9               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  1315   001100  B4D8               	btfsc	status,2,c
  1316   001102  EF85  F008         	goto	u6541
  1317   001106  EF87  F008         	goto	u6540
  1318   00110A                     u6541:
  1319   00110A  EF64  F008         	goto	l5271
  1320   00110E                     u6540:
  1321   00110E                     
  1322                           ; BSR set to: 0
  1323                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1074:         if 
      +                          ((*fmt)[0] == '*') {
  1324   00110E  C06E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1325   001112  C06F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1326   001116  CFDE FFF6          	movff	postinc2,tblptrl
  1327   00111A  CFDD FFF7          	movff	postdec2,tblptrh
  1328   00111E                     	if	0	;tblptru may be non-zero
  1329   00111E                     	endif
  1330   00111E                     	if	0	;tblptru may be non-zero
  1331   00111E                     	endif
  1332   00111E  0008               	tblrd		*
  1333   001120  50F5               	movf	tablat,w,c
  1334   001122  0A2A               	xorlw	42
  1335   001124  A4D8               	btfss	status,2,c
  1336   001126  EF97  F008         	goto	u6551
  1337   00112A  EF99  F008         	goto	u6550
  1338   00112E                     u6551:
  1339   00112E  EFC2  F008         	goto	l5283
  1340   001132                     u6550:
  1341   001132                     
  1342                           ; BSR set to: 0
  1343                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1075:            
      +                           ++*fmt;
  1344   001132  C06E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1345   001136  C06F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1346   00113A  2ADE               	incf	postinc2,f,c
  1347   00113C  0E00               	movlw	0
  1348   00113E  22DD               	addwfc	postdec2,f,c
  1349                           
  1350                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1076:            
      +                           width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1351   001140  C070  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1352   001144  C071  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1353   001148  CFDF F072          	movff	indf2,??_vfpfcnvrt
  1354   00114C  0E02               	movlw	2
  1355   00114E  26DE               	addwf	postinc2,f,c
  1356   001150  CFDF F073          	movff	indf2,??_vfpfcnvrt+1
  1357   001154  0E00               	movlw	0
  1358   001156  22DD               	addwfc	postdec2,f,c
  1359   001158  C072  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1360   00115C  C073  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1361   001160  CFDE F094          	movff	postinc2,_width
  1362   001164  CFDD F095          	movff	postdec2,_width+1
  1363   001168                     
  1364                           ; BSR set to: 0
  1365                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1077:            
      +                           if (width < 0) {
  1366   001168  BF95               	btfsc	(_width+1)& (0+255),7,b
  1367   00116A  EFBB  F008         	goto	u6560
  1368   00116E  EFB9  F008         	goto	u6561
  1369   001172                     u6561:
  1370   001172  EFF5  F008         	goto	l5291
  1371   001176                     u6560:
  1372   001176                     
  1373                           ; BSR set to: 0
  1374                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1078:            
      +                               flags |= (1 << 0);
  1375   001176  8079               	bsf	_flags^0,0,c
  1376                           
  1377                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1079:            
      +                               width = -width;
  1378   001178  6D94               	negf	_width& (0+255),b
  1379   00117A  1F95               	comf	(_width+1)& (0+255),f,b
  1380   00117C  B0D8               	btfsc	status,0,c
  1381   00117E  2B95               	incf	(_width+1)& (0+255),f,b
  1382   001180  EFF5  F008         	goto	l5291
  1383   001184                     l5283:
  1384                           
  1385                           ; BSR set to: 0
  1386                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1082:            
      +                           width = atoi(*fmt);
  1387   001184  C06E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1388   001188  C06F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1389   00118C  CFDE F00A          	movff	postinc2,atoi@s
  1390   001190  CFDD F00B          	movff	postdec2,atoi@s+1
  1391   001194  ECBC  F015         	call	_atoi	;wreg free
  1392   001198  C00A  F094         	movff	?_atoi,_width
  1393   00119C  C00B  F095         	movff	?_atoi+1,_width+1
  1394                           
  1395                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1083:            
      +                           while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  1396   0011A0  EFD9  F008         	goto	l5289
  1397   0011A4                     l5285:
  1398                           
  1399                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1084:            
      +                               ++*fmt;
  1400   0011A4  C06E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1401   0011A8  C06F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1402   0011AC  2ADE               	incf	postinc2,f,c
  1403   0011AE  0E00               	movlw	0
  1404   0011B0  22DD               	addwfc	postdec2,f,c
  1405   0011B2                     l5289:
  1406   0011B2  C06E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1407   0011B6  C06F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1408   0011BA  CFDE FFF6          	movff	postinc2,tblptrl
  1409   0011BE  CFDD FFF7          	movff	postdec2,tblptrh
  1410   0011C2                     	if	0	;tblptru may be non-zero
  1411   0011C2                     	endif
  1412   0011C2                     	if	0	;tblptru may be non-zero
  1413   0011C2                     	endif
  1414   0011C2  0008               	tblrd		*
  1415   0011C4  CFF5 F072          	movff	tablat,??_vfpfcnvrt
  1416   0011C8  0ED0               	movlw	208
  1417   0011CA  2472               	addwf	??_vfpfcnvrt^0,w,c
  1418   0011CC  6E73               	movwf	(??_vfpfcnvrt+1)^0,c
  1419   0011CE  6A74               	clrf	(??_vfpfcnvrt+2)^0,c
  1420   0011D0  0EFF               	movlw	255
  1421   0011D2  2274               	addwfc	(??_vfpfcnvrt+2)^0,f,c
  1422   0011D4  5074               	movf	(??_vfpfcnvrt+2)^0,w,c
  1423   0011D6  E109               	bnz	u6570
  1424   0011D8  0E0A               	movlw	10
  1425   0011DA  5C73               	subwf	(??_vfpfcnvrt+1)^0,w,c
  1426   0011DC  A0D8               	btfss	status,0,c
  1427   0011DE  EFF3  F008         	goto	u6571
  1428   0011E2  EFF5  F008         	goto	u6570
  1429   0011E6                     u6571:
  1430   0011E6  EFD2  F008         	goto	l5285
  1431   0011EA                     u6570:
  1432   0011EA                     l5291:
  1433                           
  1434                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1091:         if 
      +                          ((*fmt)[0] == '.') {
  1435   0011EA  C06E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1436   0011EE  C06F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1437   0011F2  CFDE FFF6          	movff	postinc2,tblptrl
  1438   0011F6  CFDD FFF7          	movff	postdec2,tblptrh
  1439   0011FA                     	if	0	;tblptru may be non-zero
  1440   0011FA                     	endif
  1441   0011FA                     	if	0	;tblptru may be non-zero
  1442   0011FA                     	endif
  1443   0011FA  0008               	tblrd		*
  1444   0011FC  50F5               	movf	tablat,w,c
  1445   0011FE  0A2E               	xorlw	46
  1446   001200  A4D8               	btfss	status,2,c
  1447   001202  EF05  F009         	goto	u6581
  1448   001206  EF07  F009         	goto	u6580
  1449   00120A                     u6581:
  1450   00120A  EF74  F009         	goto	l5309
  1451   00120E                     u6580:
  1452   00120E                     
  1453                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1092:            
      +                           prec = 0;
  1454   00120E  0E00               	movlw	0
  1455   001210  6E78               	movwf	(_prec+1)^0,c
  1456   001212  0E00               	movlw	0
  1457   001214  6E77               	movwf	_prec^0,c
  1458   001216                     
  1459                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1093:            
      +                           ++*fmt;
  1460   001216  C06E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1461   00121A  C06F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1462   00121E  2ADE               	incf	postinc2,f,c
  1463   001220  0E00               	movlw	0
  1464   001222  22DD               	addwfc	postdec2,f,c
  1465   001224                     
  1466                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1094:            
      +                           if ((*fmt)[0] == '*') {
  1467   001224  C06E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1468   001228  C06F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1469   00122C  CFDE FFF6          	movff	postinc2,tblptrl
  1470   001230  CFDD FFF7          	movff	postdec2,tblptrh
  1471   001234                     	if	0	;tblptru may be non-zero
  1472   001234                     	endif
  1473   001234                     	if	0	;tblptru may be non-zero
  1474   001234                     	endif
  1475   001234  0008               	tblrd		*
  1476   001236  50F5               	movf	tablat,w,c
  1477   001238  0A2A               	xorlw	42
  1478   00123A  A4D8               	btfss	status,2,c
  1479   00123C  EF22  F009         	goto	u6591
  1480   001240  EF24  F009         	goto	u6590
  1481   001244                     u6591:
  1482   001244  EF41  F009         	goto	l5301
  1483   001248                     u6590:
  1484   001248                     
  1485                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1095:            
      +                               ++*fmt;
  1486   001248  C06E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1487   00124C  C06F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1488   001250  2ADE               	incf	postinc2,f,c
  1489   001252  0E00               	movlw	0
  1490   001254  22DD               	addwfc	postdec2,f,c
  1491                           
  1492                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1096:            
      +                               prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1493   001256  C070  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1494   00125A  C071  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1495   00125E  CFDF F072          	movff	indf2,??_vfpfcnvrt
  1496   001262  0E02               	movlw	2
  1497   001264  26DE               	addwf	postinc2,f,c
  1498   001266  CFDF F073          	movff	indf2,??_vfpfcnvrt+1
  1499   00126A  0E00               	movlw	0
  1500   00126C  22DD               	addwfc	postdec2,f,c
  1501   00126E  C072  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1502   001272  C073  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1503   001276  CFDE F077          	movff	postinc2,_prec
  1504   00127A  CFDD F078          	movff	postdec2,_prec+1
  1505                           
  1506                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1097:            
      +                           } else {
  1507   00127E  EF74  F009         	goto	l5309
  1508   001282                     l5301:
  1509                           
  1510                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1098:            
      +                               prec = atoi(*fmt);
  1511   001282  C06E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1512   001286  C06F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1513   00128A  CFDE F00A          	movff	postinc2,atoi@s
  1514   00128E  CFDD F00B          	movff	postdec2,atoi@s+1
  1515   001292  ECBC  F015         	call	_atoi	;wreg free
  1516   001296  C00A  F077         	movff	?_atoi,_prec
  1517   00129A  C00B  F078         	movff	?_atoi+1,_prec+1
  1518                           
  1519                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1099:            
      +                               while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  1520   00129E  EF58  F009         	goto	l5307
  1521   0012A2                     l5303:
  1522                           
  1523                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1100:            
      +                                   ++*fmt;
  1524   0012A2  C06E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1525   0012A6  C06F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1526   0012AA  2ADE               	incf	postinc2,f,c
  1527   0012AC  0E00               	movlw	0
  1528   0012AE  22DD               	addwfc	postdec2,f,c
  1529   0012B0                     l5307:
  1530   0012B0  C06E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1531   0012B4  C06F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1532   0012B8  CFDE FFF6          	movff	postinc2,tblptrl
  1533   0012BC  CFDD FFF7          	movff	postdec2,tblptrh
  1534   0012C0                     	if	0	;tblptru may be non-zero
  1535   0012C0                     	endif
  1536   0012C0                     	if	0	;tblptru may be non-zero
  1537   0012C0                     	endif
  1538   0012C0  0008               	tblrd		*
  1539   0012C2  CFF5 F072          	movff	tablat,??_vfpfcnvrt
  1540   0012C6  0ED0               	movlw	208
  1541   0012C8  2472               	addwf	??_vfpfcnvrt^0,w,c
  1542   0012CA  6E73               	movwf	(??_vfpfcnvrt+1)^0,c
  1543   0012CC  6A74               	clrf	(??_vfpfcnvrt+2)^0,c
  1544   0012CE  0EFF               	movlw	255
  1545   0012D0  2274               	addwfc	(??_vfpfcnvrt+2)^0,f,c
  1546   0012D2  5074               	movf	(??_vfpfcnvrt+2)^0,w,c
  1547   0012D4  E109               	bnz	u6600
  1548   0012D6  0E0A               	movlw	10
  1549   0012D8  5C73               	subwf	(??_vfpfcnvrt+1)^0,w,c
  1550   0012DA  A0D8               	btfss	status,0,c
  1551   0012DC  EF72  F009         	goto	u6601
  1552   0012E0  EF74  F009         	goto	u6600
  1553   0012E4                     u6601:
  1554   0012E4  EF51  F009         	goto	l5303
  1555   0012E8                     u6600:
  1556   0012E8                     l5309:
  1557                           
  1558                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  1559   0012E8  C06E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1560   0012EC  C06F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1561   0012F0  CFDE F0C3          	movff	postinc2,vfpfcnvrt@cp
  1562   0012F4  CFDD F0C4          	movff	postdec2,vfpfcnvrt@cp+1
  1563   0012F8                     
  1564                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1565   0012F8  C0C3  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1566   0012FC  C0C4  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1567   001300                     	if	0	;tblptru may be non-zero
  1568   001300                     	endif
  1569   001300                     	if	0	;tblptru may be non-zero
  1570   001300                     	endif
  1571   001300  0008               	tblrd		*
  1572   001302  50F5               	movf	tablat,w,c
  1573   001304  0A64               	xorlw	100
  1574   001306  B4D8               	btfsc	status,2,c
  1575   001308  EF88  F009         	goto	u6611
  1576   00130C  EF8A  F009         	goto	u6610
  1577   001310                     u6611:
  1578   001310  EF98  F009         	goto	l5315
  1579   001314                     u6610:
  1580   001314  C0C3  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1581   001318  C0C4  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1582   00131C                     	if	0	;tblptru may be non-zero
  1583   00131C                     	endif
  1584   00131C                     	if	0	;tblptru may be non-zero
  1585   00131C                     	endif
  1586   00131C  0008               	tblrd		*
  1587   00131E  50F5               	movf	tablat,w,c
  1588   001320  0A69               	xorlw	105
  1589   001322  A4D8               	btfss	status,2,c
  1590   001324  EF96  F009         	goto	u6621
  1591   001328  EF98  F009         	goto	u6620
  1592   00132C                     u6621:
  1593   00132C  EFDC  F009         	goto	l5321
  1594   001330                     u6620:
  1595   001330                     l5315:
  1596                           
  1597                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1598   001330  C070  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1599   001334  C071  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1600   001338  CFDF F072          	movff	indf2,??_vfpfcnvrt
  1601   00133C  0E02               	movlw	2
  1602   00133E  26DE               	addwf	postinc2,f,c
  1603   001340  CFDF F073          	movff	indf2,??_vfpfcnvrt+1
  1604   001344  0E00               	movlw	0
  1605   001346  22DD               	addwfc	postdec2,f,c
  1606   001348  C072  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1607   00134C  C073  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1608   001350  CFDE F0BA          	movff	postinc2,vfpfcnvrt@convarg
  1609   001354  CFDD F0BB          	movff	postdec2,vfpfcnvrt@convarg+1
  1610   001358  0100               	movlb	0	; () banked
  1611   00135A  0E00               	movlw	0
  1612   00135C  BFBB               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  1613   00135E  0EFF               	movlw	-1
  1614   001360  6FBC               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  1615   001362  6FBD               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  1616   001364  6FBE               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  1617   001366  6FBF               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  1618   001368  6FC0               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  1619   00136A  6FC1               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  1620                           
  1621                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1622   00136C  0E01               	movlw	1
  1623   00136E  25C3               	addwf	vfpfcnvrt@cp& (0+255),w,b
  1624   001370  6E72               	movwf	??_vfpfcnvrt^0,c
  1625   001372  0E00               	movlw	0
  1626   001374  21C4               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  1627   001376  6E73               	movwf	(??_vfpfcnvrt+1)^0,c
  1628   001378  C06E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1629   00137C  C06F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1630   001380  C072  FFDE         	movff	??_vfpfcnvrt,postinc2
  1631   001384  C073  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1632   001388                     
  1633                           ; BSR set to: 0
  1634                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1635   001388  C06C  F01F         	movff	vfpfcnvrt@fp,dtoa@fp
  1636   00138C  C06D  F020         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1637   001390  C0BA  F021         	movff	vfpfcnvrt@convarg,dtoa@d
  1638   001394  C0BB  F022         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1639   001398  C0BC  F023         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1640   00139C  C0BD  F024         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1641   0013A0  C0BE  F025         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1642   0013A4  C0BF  F026         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1643   0013A8  C0C0  F027         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1644   0013AC  C0C1  F028         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1645   0013B0  EC09  F011         	call	_dtoa	;wreg free
  1646   0013B4  EFC6  F00A         	goto	l961
  1647   0013B8                     l5321:
  1648                           
  1649                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  1650   0013B8  C06E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1651   0013BC  C06F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1652   0013C0  CFDE F0C3          	movff	postinc2,vfpfcnvrt@cp
  1653   0013C4  CFDD F0C4          	movff	postdec2,vfpfcnvrt@cp+1
  1654   0013C8                     
  1655                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  1656   0013C8  C0C3  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1657   0013CC  C0C4  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1658   0013D0                     	if	0	;tblptru may be non-zero
  1659   0013D0                     	endif
  1660   0013D0                     	if	0	;tblptru may be non-zero
  1661   0013D0                     	endif
  1662   0013D0  0008               	tblrd		*
  1663   0013D2  CFF5 F0C2          	movff	tablat,vfpfcnvrt@c
  1664                           
  1665                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  1666   0013D6  EFF9  F009         	goto	l5333
  1667   0013DA                     l5325:
  1668                           
  1669                           ; BSR set to: 0
  1670                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  1671   0013DA  4BC3               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  1672   0013DC  2BC4               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  1673                           
  1674                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  1675   0013DE  EF13  F00A         	goto	l5335
  1676   0013E2                     l5327:
  1677                           
  1678                           ; BSR set to: 0
  1679                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  1680   0013E2  0E6C               	movlw	108
  1681   0013E4  6FC2               	movwf	vfpfcnvrt@c& (0+255),b
  1682                           
  1683                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  1684   0013E6  EF13  F00A         	goto	l5335
  1685   0013EA                     l5329:
  1686                           
  1687                           ; BSR set to: 0
  1688                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  1689   0013EA  0E00               	movlw	0
  1690   0013EC  6FC2               	movwf	vfpfcnvrt@c& (0+255),b
  1691                           
  1692                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  1693   0013EE  EF13  F00A         	goto	l5335
  1694   0013F2                     l5333:
  1695   0013F2  0100               	movlb	0	; () banked
  1696   0013F4  51C2               	movf	vfpfcnvrt@c& (0+255),w,b
  1697   0013F6  6E72               	movwf	??_vfpfcnvrt^0,c
  1698   0013F8  6A73               	clrf	(??_vfpfcnvrt+1)^0,c
  1699                           
  1700                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1701                           ; Switch size 1, requested type "simple"
  1702                           ; Number of cases is 1, Range of values is 0 to 0
  1703                           ; switch strategies available:
  1704                           ; Name         Instructions Cycles
  1705                           ; simple_byte            4     3 (average)
  1706                           ;	Chosen strategy is simple_byte
  1707   0013FA  5073               	movf	(??_vfpfcnvrt+1)^0,w,c
  1708   0013FC  0A00               	xorlw	0	; case 0
  1709   0013FE  B4D8               	btfsc	status,2,c
  1710   001400  EF04  F00A         	goto	l5621
  1711   001404  EFF5  F009         	goto	l5329
  1712   001408                     l5621:
  1713                           
  1714                           ; BSR set to: 0
  1715                           ; Switch size 1, requested type "simple"
  1716                           ; Number of cases is 3, Range of values is 76 to 108
  1717                           ; switch strategies available:
  1718                           ; Name         Instructions Cycles
  1719                           ; simple_byte           10     6 (average)
  1720                           ;	Chosen strategy is simple_byte
  1721   001408  5072               	movf	??_vfpfcnvrt^0,w,c
  1722   00140A  0A4C               	xorlw	76	; case 76
  1723   00140C  B4D8               	btfsc	status,2,c
  1724   00140E  EFED  F009         	goto	l5325
  1725   001412  0A2A               	xorlw	42	; case 102
  1726   001414  B4D8               	btfsc	status,2,c
  1727   001416  EFF1  F009         	goto	l5327
  1728   00141A  0A0A               	xorlw	10	; case 108
  1729   00141C  B4D8               	btfsc	status,2,c
  1730   00141E  EFED  F009         	goto	l5325
  1731   001422  EFF5  F009         	goto	l5329
  1732   001426                     l5335:
  1733                           
  1734                           ; BSR set to: 0
  1735   001426  C0C3  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1736   00142A  C0C4  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1737   00142E                     	if	0	;tblptru may be non-zero
  1738   00142E                     	endif
  1739   00142E                     	if	0	;tblptru may be non-zero
  1740   00142E                     	endif
  1741   00142E  0008               	tblrd		*
  1742   001430  50F5               	movf	tablat,w,c
  1743   001432  0A66               	xorlw	102
  1744   001434  A4D8               	btfss	status,2,c
  1745   001436  EF1F  F00A         	goto	u6631
  1746   00143A  EF21  F00A         	goto	u6630
  1747   00143E                     u6631:
  1748   00143E  EFA9  F00A         	goto	l5355
  1749   001442                     u6630:
  1750   001442  EF57  F00A         	goto	l5343
  1751   001446                     l5337:
  1752                           
  1753                           ; BSR set to: 0
  1754                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1755   001446  C070  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1756   00144A  C071  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1757   00144E  CFDF F072          	movff	indf2,??_vfpfcnvrt
  1758   001452  0E04               	movlw	4
  1759   001454  26DE               	addwf	postinc2,f,c
  1760   001456  CFDF F073          	movff	indf2,??_vfpfcnvrt+1
  1761   00145A  0E00               	movlw	0
  1762   00145C  22DD               	addwfc	postdec2,f,c
  1763   00145E  C072  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1764   001462  C073  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1765   001466  CFDE F0BA          	movff	postinc2,vfpfcnvrt@convarg
  1766   00146A  CFDE F0BB          	movff	postinc2,vfpfcnvrt@convarg+1
  1767   00146E  CFDE F0BC          	movff	postinc2,vfpfcnvrt@convarg+2
  1768   001472  CFDE F0BD          	movff	postinc2,vfpfcnvrt@convarg+3
  1769                           
  1770                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  1771   001476  EF6C  F00A         	goto	l5345
  1772   00147A                     l5339:
  1773                           
  1774                           ; BSR set to: 0
  1775                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1776   00147A  C070  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1777   00147E  C071  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1778   001482  CFDF F072          	movff	indf2,??_vfpfcnvrt
  1779   001486  0E04               	movlw	4
  1780   001488  26DE               	addwf	postinc2,f,c
  1781   00148A  CFDF F073          	movff	indf2,??_vfpfcnvrt+1
  1782   00148E  0E00               	movlw	0
  1783   001490  22DD               	addwfc	postdec2,f,c
  1784   001492  C072  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1785   001496  C073  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1786   00149A  CFDE F0BA          	movff	postinc2,vfpfcnvrt@convarg
  1787   00149E  CFDE F0BB          	movff	postinc2,vfpfcnvrt@convarg+1
  1788   0014A2  CFDE F0BC          	movff	postinc2,vfpfcnvrt@convarg+2
  1789   0014A6  CFDE F0BD          	movff	postinc2,vfpfcnvrt@convarg+3
  1790                           
  1791                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  1792   0014AA  EF6C  F00A         	goto	l5345
  1793   0014AE                     l5343:
  1794                           
  1795                           ; BSR set to: 0
  1796   0014AE  51C2               	movf	vfpfcnvrt@c& (0+255),w,b
  1797   0014B0  6E72               	movwf	??_vfpfcnvrt^0,c
  1798   0014B2  6A73               	clrf	(??_vfpfcnvrt+1)^0,c
  1799                           
  1800                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1801                           ; Switch size 1, requested type "simple"
  1802                           ; Number of cases is 1, Range of values is 0 to 0
  1803                           ; switch strategies available:
  1804                           ; Name         Instructions Cycles
  1805                           ; simple_byte            4     3 (average)
  1806                           ;	Chosen strategy is simple_byte
  1807   0014B4  5073               	movf	(??_vfpfcnvrt+1)^0,w,c
  1808   0014B6  0A00               	xorlw	0	; case 0
  1809   0014B8  B4D8               	btfsc	status,2,c
  1810   0014BA  EF61  F00A         	goto	l5623
  1811   0014BE  EF6C  F00A         	goto	l5345
  1812   0014C2                     l5623:
  1813                           
  1814                           ; BSR set to: 0
  1815                           ; Switch size 1, requested type "simple"
  1816                           ; Number of cases is 2, Range of values is 76 to 108
  1817                           ; switch strategies available:
  1818                           ; Name         Instructions Cycles
  1819                           ; simple_byte            7     4 (average)
  1820                           ;	Chosen strategy is simple_byte
  1821   0014C2  5072               	movf	??_vfpfcnvrt^0,w,c
  1822   0014C4  0A4C               	xorlw	76	; case 76
  1823   0014C6  B4D8               	btfsc	status,2,c
  1824   0014C8  EF3D  F00A         	goto	l5339
  1825   0014CC  0A20               	xorlw	32	; case 108
  1826   0014CE  B4D8               	btfsc	status,2,c
  1827   0014D0  EF23  F00A         	goto	l5337
  1828   0014D4  EF6C  F00A         	goto	l5345
  1829   0014D8                     l5345:
  1830                           
  1831                           ; BSR set to: 0
  1832                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  1833   0014D8  0E01               	movlw	1
  1834   0014DA  25C3               	addwf	vfpfcnvrt@cp& (0+255),w,b
  1835   0014DC  6E72               	movwf	??_vfpfcnvrt^0,c
  1836   0014DE  0E00               	movlw	0
  1837   0014E0  21C4               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  1838   0014E2  6E73               	movwf	(??_vfpfcnvrt+1)^0,c
  1839   0014E4  C06E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1840   0014E8  C06F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1841   0014EC  C072  FFDE         	movff	??_vfpfcnvrt,postinc2
  1842   0014F0  C073  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1843                           
  1844                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  1845   0014F4  EF93  F00A         	goto	l5353
  1846   0014F8                     l5347:
  1847                           
  1848                           ; BSR set to: 0
  1849                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  1850   0014F8  C06C  F037         	movff	vfpfcnvrt@fp,efgtoa@fp
  1851   0014FC  C06D  F038         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1852   001500  C0BA  F039         	movff	vfpfcnvrt@convarg,efgtoa@f
  1853   001504  C0BB  F03A         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  1854   001508  C0BC  F03B         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  1855   00150C  C0BD  F03C         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  1856   001510  C0C3  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1857   001514  C0C4  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1858   001518                     	if	0	;tblptru may be non-zero
  1859   001518                     	endif
  1860   001518                     	if	0	;tblptru may be non-zero
  1861   001518                     	endif
  1862   001518  0008               	tblrd		*
  1863   00151A  CFF5 F03D          	movff	tablat,efgtoa@c
  1864   00151E  EC0F  F003         	call	_efgtoa	;wreg free
  1865   001522  EFC6  F00A         	goto	l961
  1866   001526                     l5353:
  1867                           
  1868                           ; BSR set to: 0
  1869   001526  C0C3  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1870   00152A  C0C4  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1871   00152E                     	if	0	;tblptru may be non-zero
  1872   00152E                     	endif
  1873   00152E                     	if	0	;tblptru may be non-zero
  1874   00152E                     	endif
  1875   00152E  0008               	tblrd		*
  1876   001530  50F5               	movf	tablat,w,c
  1877   001532  6E72               	movwf	??_vfpfcnvrt^0,c
  1878   001534  6A73               	clrf	(??_vfpfcnvrt+1)^0,c
  1879                           
  1880                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1881                           ; Switch size 1, requested type "simple"
  1882                           ; Number of cases is 1, Range of values is 0 to 0
  1883                           ; switch strategies available:
  1884                           ; Name         Instructions Cycles
  1885                           ; simple_byte            4     3 (average)
  1886                           ;	Chosen strategy is simple_byte
  1887   001536  5073               	movf	(??_vfpfcnvrt+1)^0,w,c
  1888   001538  0A00               	xorlw	0	; case 0
  1889   00153A  B4D8               	btfsc	status,2,c
  1890   00153C  EFA2  F00A         	goto	l5625
  1891   001540  EFA9  F00A         	goto	l5355
  1892   001544                     l5625:
  1893                           
  1894                           ; BSR set to: 0
  1895                           ; Switch size 1, requested type "simple"
  1896                           ; Number of cases is 1, Range of values is 102 to 102
  1897                           ; switch strategies available:
  1898                           ; Name         Instructions Cycles
  1899                           ; simple_byte            4     3 (average)
  1900                           ;	Chosen strategy is simple_byte
  1901   001544  5072               	movf	??_vfpfcnvrt^0,w,c
  1902   001546  0A66               	xorlw	102	; case 102
  1903   001548  B4D8               	btfsc	status,2,c
  1904   00154A  EF7C  F00A         	goto	l5347
  1905   00154E  EFA9  F00A         	goto	l5355
  1906   001552                     l5355:
  1907                           
  1908                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1909   001552  C06E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1910   001556  C06F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1911   00155A  2ADE               	incf	postinc2,f,c
  1912   00155C  0E00               	movlw	0
  1913   00155E  22DD               	addwfc	postdec2,f,c
  1914   001560  EFC6  F00A         	goto	l961
  1915   001564                     l5359:
  1916                           
  1917                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1918   001564  C06E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1919   001568  C06F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1920   00156C  CFDE FFF6          	movff	postinc2,tblptrl
  1921   001570  CFDD FFF7          	movff	postdec2,tblptrh
  1922   001574                     	if	0	;tblptru may be non-zero
  1923   001574                     	endif
  1924   001574                     	if	0	;tblptru may be non-zero
  1925   001574                     	endif
  1926   001574  0008               	tblrd		*
  1927   001576  50F5               	movf	tablat,w,c
  1928   001578  6E04               	movwf	fputc@c^0,c
  1929   00157A  6A05               	clrf	(fputc@c+1)^0,c
  1930   00157C  C06C  F006         	movff	vfpfcnvrt@fp,fputc@fp
  1931   001580  C06D  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1932   001584  ECE5  F017         	call	_fputc	;wreg free
  1933   001588  EFA9  F00A         	goto	l5355
  1934   00158C                     l961:
  1935   00158C  0012               	return		;funcret
  1936   00158E                     __end_of_vfpfcnvrt:
  1937                           	callstack 0
  1938                           
  1939 ;; *************** function _efgtoa *****************
  1940 ;; Defined at:
  1941 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1942 ;; Parameters:    Size  Location     Type
  1943 ;;  fp              2   54[COMRAM] PTR struct _IO_FILE
  1944 ;;		 -> sprintf@f(11), 
  1945 ;;  f               4   56[COMRAM] PTR struct _IO_FILE
  1946 ;;  c               1   60[COMRAM] unsigned char 
  1947 ;; Auto vars:     Size  Location     Type
  1948 ;;  u               4  103[COMRAM] struct flui
  1949 ;;  g               4   97[COMRAM] struct flui
  1950 ;;  l               4   90[COMRAM] struct flui
  1951 ;;  h               4   86[COMRAM] struct flui
  1952 ;;  ou              4   80[COMRAM] struct flui
  1953 ;;  n               2  101[COMRAM] int 
  1954 ;;  i               2   94[COMRAM] int 
  1955 ;;  w               2   84[COMRAM] int 
  1956 ;;  e               2   78[COMRAM] int 
  1957 ;;  m               2   76[COMRAM] int 
  1958 ;;  d               2   74[COMRAM] int 
  1959 ;;  t               2   67[COMRAM] int 
  1960 ;;  p               2   65[COMRAM] int 
  1961 ;;  ne              2   63[COMRAM] int 
  1962 ;;  sign            1   96[COMRAM] unsigned char 
  1963 ;;  nmode           1   73[COMRAM] unsigned char 
  1964 ;;  mode            1   72[COMRAM] unsigned char 
  1965 ;;  pp              1   71[COMRAM] unsigned char 
  1966 ;;  esign           1    0        unsigned char 
  1967 ;; Return value:  Size  Location     Type
  1968 ;;                  1    wreg      void 
  1969 ;; Registers used:
  1970 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1971 ;; Tracked objects:
  1972 ;;		On entry : 0/0
  1973 ;;		On exit  : 0/0
  1974 ;;		Unchanged: 0/0
  1975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1976 ;;      Params:         7       0       0       0       0       0       0
  1977 ;;      Locals:        44       0       0       0       0       0       0
  1978 ;;      Temps:          2       0       0       0       0       0       0
  1979 ;;      Totals:        53       0       0       0       0       0       0
  1980 ;;Total ram usage:       53 bytes
  1981 ;; Hardware stack levels used: 1
  1982 ;; Hardware stack levels required when called: 6
  1983 ;; This function calls:
  1984 ;;		___fladd
  1985 ;;		___fldiv
  1986 ;;		___fleq
  1987 ;;		___flge
  1988 ;;		___flmul
  1989 ;;		___flneg
  1990 ;;		___flsub
  1991 ;;		___fltol
  1992 ;;		___fpclassifyf
  1993 ;;		_floorf
  1994 ;;		_labs
  1995 ;;		_memcpy
  1996 ;;		_pad
  1997 ;;		_strcpy
  1998 ;; This function is called by:
  1999 ;;		_vfpfcnvrt
  2000 ;; This function uses a non-reentrant model
  2001 ;;
  2002                           
  2003                           	psect	text5
  2004   00061E                     __ptext5:
  2005                           	callstack 0
  2006   00061E                     _efgtoa:
  2007                           	callstack 20
  2008   00061E                     
  2009                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  2010   00061E  0E00               	movlw	0
  2011   000620  6E61               	movwf	efgtoa@sign^0,c
  2012   000622                     
  2013                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  2014   000622  C039  F062         	movff	efgtoa@f,efgtoa@g
  2015   000626  C03A  F063         	movff	efgtoa@f+1,efgtoa@g+1
  2016   00062A  C03B  F064         	movff	efgtoa@f+2,efgtoa@g+2
  2017   00062E  C03C  F065         	movff	efgtoa@f+3,efgtoa@g+3
  2018   000632                     
  2019                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  2020   000632  BE65               	btfsc	(efgtoa@g+3)^0,7,c
  2021   000634  EF20  F003         	goto	u6140
  2022   000638  EF1E  F003         	goto	u6141
  2023   00063C                     u6141:
  2024   00063C  EF34  F003         	goto	l4997
  2025   000640                     u6140:
  2026   000640                     
  2027                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  2028   000640  0E01               	movlw	1
  2029   000642  6E61               	movwf	efgtoa@sign^0,c
  2030   000644                     
  2031                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  2032   000644  C062  F004         	movff	efgtoa@g,___flneg@f1
  2033   000648  C063  F005         	movff	efgtoa@g+1,___flneg@f1+1
  2034   00064C  C064  F006         	movff	efgtoa@g+2,___flneg@f1+2
  2035   000650  C065  F007         	movff	efgtoa@g+3,___flneg@f1+3
  2036   000654  EC12  F01B         	call	___flneg	;wreg free
  2037   000658  C004  F062         	movff	?___flneg,efgtoa@g
  2038   00065C  C005  F063         	movff	?___flneg+1,efgtoa@g+1
  2039   000660  C006  F064         	movff	?___flneg+2,efgtoa@g+2
  2040   000664  C007  F065         	movff	?___flneg+3,efgtoa@g+3
  2041   000668                     l4997:
  2042                           
  2043                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  2044   000668  0E00               	movlw	0
  2045   00066A  6E67               	movwf	(efgtoa@n+1)^0,c
  2046   00066C  0E00               	movlw	0
  2047   00066E  6E66               	movwf	efgtoa@n^0,c
  2048   000670                     
  2049                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  2050   000670  C094  F055         	movff	_width,efgtoa@w
  2051   000674  C095  F056         	movff	_width+1,efgtoa@w+1
  2052   000678                     
  2053                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  2054   000678  5061               	movf	efgtoa@sign^0,w,c
  2055   00067A  B4D8               	btfsc	status,2,c
  2056   00067C  EF42  F003         	goto	u6151
  2057   000680  EF44  F003         	goto	u6150
  2058   000684                     u6151:
  2059   000684  EF58  F003         	goto	l5011
  2060   000688                     u6150:
  2061   000688                     
  2062                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  2063   000688  5061               	movf	efgtoa@sign^0,w,c
  2064   00068A  A4D8               	btfss	status,2,c
  2065   00068C  EF4A  F003         	goto	u6161
  2066   000690  EF4C  F003         	goto	u6160
  2067   000694                     u6161:
  2068   000694  EF52  F003         	goto	l5007
  2069   000698                     u6160:
  2070   000698  0E00               	movlw	0
  2071   00069A  6E47               	movwf	(_efgtoa$1037+1)^0,c
  2072   00069C  0E2B               	movlw	43
  2073   00069E  6E46               	movwf	_efgtoa$1037^0,c
  2074   0006A0  EF56  F003         	goto	l5009
  2075   0006A4                     l5007:
  2076   0006A4  0E00               	movlw	0
  2077   0006A6  6E47               	movwf	(_efgtoa$1037+1)^0,c
  2078   0006A8  0E2D               	movlw	45
  2079   0006AA  6E46               	movwf	_efgtoa$1037^0,c
  2080   0006AC                     l5009:
  2081   0006AC  C046  F061         	movff	_efgtoa$1037,efgtoa@sign
  2082   0006B0                     l5011:
  2083                           
  2084                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  2085   0006B0  C062  F004         	movff	efgtoa@g,___fpclassifyf@x
  2086   0006B4  C063  F005         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2087   0006B8  C064  F006         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2088   0006BC  C065  F007         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2089   0006C0  EC66  F017         	call	___fpclassifyf	;wreg free
  2090   0006C4  0404               	decf	?___fpclassifyf^0,w,c
  2091   0006C6  1005               	iorwf	(?___fpclassifyf+1)^0,w,c
  2092   0006C8  A4D8               	btfss	status,2,c
  2093   0006CA  EF69  F003         	goto	u6171
  2094   0006CE  EF6B  F003         	goto	u6170
  2095   0006D2                     u6171:
  2096   0006D2  EF9C  F003         	goto	l5029
  2097   0006D6                     u6170:
  2098   0006D6                     
  2099                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  2100   0006D6  5061               	movf	efgtoa@sign^0,w,c
  2101   0006D8  B4D8               	btfsc	status,2,c
  2102   0006DA  EF71  F003         	goto	u6181
  2103   0006DE  EF73  F003         	goto	u6180
  2104   0006E2                     u6181:
  2105   0006E2  EF7C  F003         	goto	l5021
  2106   0006E6                     u6180:
  2107   0006E6                     
  2108                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  2109   0006E6  C061  F100         	movff	efgtoa@sign,_dbuf
  2110   0006EA                     
  2111                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  2112   0006EA  0655               	decf	efgtoa@w^0,f,c
  2113   0006EC  A0D8               	btfss	status,0,c
  2114   0006EE  0656               	decf	(efgtoa@w+1)^0,f,c
  2115   0006F0                     
  2116                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  2117   0006F0  0E00               	movlw	0
  2118   0006F2  6E67               	movwf	(efgtoa@n+1)^0,c
  2119   0006F4  0E01               	movlw	1
  2120   0006F6  6E66               	movwf	efgtoa@n^0,c
  2121   0006F8                     l5021:
  2122                           
  2123                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  2124   0006F8  0E00               	movlw	low _dbuf
  2125   0006FA  2466               	addwf	efgtoa@n^0,w,c
  2126   0006FC  6E04               	movwf	strcpy@dest^0,c
  2127   0006FE  0E01               	movlw	high _dbuf
  2128   000700  2067               	addwfc	(efgtoa@n+1)^0,w,c
  2129   000702  6E05               	movwf	(strcpy@dest+1)^0,c
  2130   000704  0E14               	movlw	low STR_2
  2131   000706  6E06               	movwf	strcpy@src^0,c
  2132   000708  0E06               	movlw	high STR_2
  2133   00070A  6E07               	movwf	(strcpy@src+1)^0,c
  2134   00070C  ECD2  F01A         	call	_strcpy	;wreg free
  2135   000710                     l5023:
  2136                           
  2137                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  2138   000710  0EFD               	movlw	253
  2139   000712  2655               	addwf	efgtoa@w^0,f,c
  2140   000714  0EFF               	movlw	255
  2141   000716  2256               	addwfc	(efgtoa@w+1)^0,f,c
  2142   000718                     
  2143                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  2144   000718  C037  F014         	movff	efgtoa@fp,pad@fp
  2145   00071C  C038  F015         	movff	efgtoa@fp+1,pad@fp+1
  2146   000720  0E00               	movlw	low _dbuf
  2147   000722  6E16               	movwf	pad@buf^0,c
  2148   000724  0E01               	movlw	high _dbuf
  2149   000726  6E17               	movwf	(pad@buf+1)^0,c
  2150   000728  C055  F018         	movff	efgtoa@w,pad@p
  2151   00072C  C056  F019         	movff	efgtoa@w+1,pad@p+1
  2152   000730  ECFC  F018         	call	_pad	;wreg free
  2153   000734  EF2B  F008         	goto	l884
  2154   000738                     l5029:
  2155                           
  2156                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  2157   000738  C062  F004         	movff	efgtoa@g,___fpclassifyf@x
  2158   00073C  C063  F005         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2159   000740  C064  F006         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2160   000744  C065  F007         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2161   000748  EC66  F017         	call	___fpclassifyf	;wreg free
  2162   00074C  5004               	movf	?___fpclassifyf^0,w,c
  2163   00074E  1005               	iorwf	(?___fpclassifyf+1)^0,w,c
  2164   000750  A4D8               	btfss	status,2,c
  2165   000752  EFAD  F003         	goto	u6191
  2166   000756  EFAF  F003         	goto	u6190
  2167   00075A                     u6191:
  2168   00075A  EFCE  F003         	goto	l5047
  2169   00075E                     u6190:
  2170   00075E                     
  2171                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  2172   00075E  5061               	movf	efgtoa@sign^0,w,c
  2173   000760  B4D8               	btfsc	status,2,c
  2174   000762  EFB5  F003         	goto	u6201
  2175   000766  EFB7  F003         	goto	u6200
  2176   00076A                     u6201:
  2177   00076A  EFC0  F003         	goto	l5039
  2178   00076E                     u6200:
  2179   00076E                     
  2180                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  2181   00076E  C061  F100         	movff	efgtoa@sign,_dbuf
  2182   000772                     
  2183                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  2184   000772  0655               	decf	efgtoa@w^0,f,c
  2185   000774  A0D8               	btfss	status,0,c
  2186   000776  0656               	decf	(efgtoa@w+1)^0,f,c
  2187   000778                     
  2188                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  2189   000778  0E00               	movlw	0
  2190   00077A  6E67               	movwf	(efgtoa@n+1)^0,c
  2191   00077C  0E01               	movlw	1
  2192   00077E  6E66               	movwf	efgtoa@n^0,c
  2193   000780                     l5039:
  2194                           
  2195                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  2196   000780  0E00               	movlw	low _dbuf
  2197   000782  2466               	addwf	efgtoa@n^0,w,c
  2198   000784  6E04               	movwf	strcpy@dest^0,c
  2199   000786  0E01               	movlw	high _dbuf
  2200   000788  2067               	addwfc	(efgtoa@n+1)^0,w,c
  2201   00078A  6E05               	movwf	(strcpy@dest+1)^0,c
  2202   00078C  0E18               	movlw	low STR_5
  2203   00078E  6E06               	movwf	strcpy@src^0,c
  2204   000790  0E06               	movlw	high STR_5
  2205   000792  6E07               	movwf	(strcpy@src+1)^0,c
  2206   000794  ECD2  F01A         	call	_strcpy	;wreg free
  2207   000798  EF88  F003         	goto	l5023
  2208   00079C                     l5047:
  2209                           
  2210                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  2211   00079C  0E00               	movlw	0
  2212   00079E  6E68               	movwf	efgtoa@u^0,c
  2213   0007A0  0E00               	movlw	0
  2214   0007A2  6E69               	movwf	(efgtoa@u+1)^0,c
  2215   0007A4  0E80               	movlw	128
  2216   0007A6  6E6A               	movwf	(efgtoa@u+2)^0,c
  2217   0007A8  0E3F               	movlw	63
  2218   0007AA  6E6B               	movwf	(efgtoa@u+3)^0,c
  2219                           
  2220                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  2221   0007AC  0E00               	movlw	0
  2222   0007AE  6E50               	movwf	(efgtoa@e+1)^0,c
  2223   0007B0  0E00               	movlw	0
  2224   0007B2  6E4F               	movwf	efgtoa@e^0,c
  2225   0007B4                     
  2226                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  2227   0007B4  C062  F004         	movff	efgtoa@g,___fleq@ff1
  2228   0007B8  C063  F005         	movff	efgtoa@g+1,___fleq@ff1+1
  2229   0007BC  C064  F006         	movff	efgtoa@g+2,___fleq@ff1+2
  2230   0007C0  C065  F007         	movff	efgtoa@g+3,___fleq@ff1+3
  2231   0007C4  0E00               	movlw	0
  2232   0007C6  6E08               	movwf	___fleq@ff2^0,c
  2233   0007C8  0E00               	movlw	0
  2234   0007CA  6E09               	movwf	(___fleq@ff2+1)^0,c
  2235   0007CC  0E00               	movlw	0
  2236   0007CE  6E0A               	movwf	(___fleq@ff2+2)^0,c
  2237   0007D0  0E00               	movlw	0
  2238   0007D2  6E0B               	movwf	(___fleq@ff2+3)^0,c
  2239   0007D4  ECA7  F018         	call	___fleq	;wreg free
  2240   0007D8  B0D8               	btfsc	status,0,c
  2241   0007DA  EFF1  F003         	goto	u6211
  2242   0007DE  EFF3  F003         	goto	u6210
  2243   0007E2                     u6211:
  2244   0007E2  EFCE  F004         	goto	l887
  2245   0007E6                     u6210:
  2246   0007E6  EFFF  F003         	goto	l5055
  2247   0007EA                     l889:
  2248                           
  2249                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  2250   0007EA  C051  F068         	movff	efgtoa@ou,efgtoa@u
  2251   0007EE  C052  F069         	movff	efgtoa@ou+1,efgtoa@u+1
  2252   0007F2  C053  F06A         	movff	efgtoa@ou+2,efgtoa@u+2
  2253   0007F6  C054  F06B         	movff	efgtoa@ou+3,efgtoa@u+3
  2254   0007FA                     
  2255                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  2256   0007FA  4A4F               	infsnz	efgtoa@e^0,f,c
  2257   0007FC  2A50               	incf	(efgtoa@e+1)^0,f,c
  2258   0007FE                     l5055:
  2259                           
  2260                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  2261   0007FE  C068  F012         	movff	efgtoa@u,___flmul@b
  2262   000802  C069  F013         	movff	efgtoa@u+1,___flmul@b+1
  2263   000806  C06A  F014         	movff	efgtoa@u+2,___flmul@b+2
  2264   00080A  C06B  F015         	movff	efgtoa@u+3,___flmul@b+3
  2265   00080E  0E00               	movlw	0
  2266   000810  6E16               	movwf	___flmul@a^0,c
  2267   000812  0E00               	movlw	0
  2268   000814  6E17               	movwf	(___flmul@a+1)^0,c
  2269   000816  0E20               	movlw	32
  2270   000818  6E18               	movwf	(___flmul@a+2)^0,c
  2271   00081A  0E41               	movlw	65
  2272   00081C  6E19               	movwf	(___flmul@a+3)^0,c
  2273   00081E  EC27  F00D         	call	___flmul	;wreg free
  2274   000822  C012  F051         	movff	?___flmul,efgtoa@ou
  2275   000826  C013  F052         	movff	?___flmul+1,efgtoa@ou+1
  2276   00082A  C014  F053         	movff	?___flmul+2,efgtoa@ou+2
  2277   00082E  C015  F054         	movff	?___flmul+3,efgtoa@ou+3
  2278   000832  5051               	movf	efgtoa@ou^0,w,c
  2279   000834  5C62               	subwf	efgtoa@g^0,w,c
  2280   000836  6E04               	movwf	labs@a^0,c
  2281   000838  5052               	movf	(efgtoa@ou+1)^0,w,c
  2282   00083A  5863               	subwfb	(efgtoa@g+1)^0,w,c
  2283   00083C  6E05               	movwf	(labs@a+1)^0,c
  2284   00083E  5053               	movf	(efgtoa@ou+2)^0,w,c
  2285   000840  5864               	subwfb	(efgtoa@g+2)^0,w,c
  2286   000842  6E06               	movwf	(labs@a+2)^0,c
  2287   000844  5054               	movf	(efgtoa@ou+3)^0,w,c
  2288   000846  5865               	subwfb	(efgtoa@g+3)^0,w,c
  2289   000848  6E07               	movwf	(labs@a+3)^0,c
  2290   00084A  EC93  F019         	call	_labs	;wreg free
  2291   00084E  BE07               	btfsc	(?_labs+3)^0,7,c
  2292   000850  EF35  F004         	goto	u6221
  2293   000854  5007               	movf	(?_labs+3)^0,w,c
  2294   000856  1006               	iorwf	(?_labs+2)^0,w,c
  2295   000858  1005               	iorwf	(?_labs+1)^0,w,c
  2296   00085A  E109               	bnz	u6220
  2297   00085C  0E02               	movlw	2
  2298   00085E  5C04               	subwf	?_labs^0,w,c
  2299   000860  A0D8               	btfss	status,0,c
  2300   000862  EF35  F004         	goto	u6221
  2301   000866  EF37  F004         	goto	u6220
  2302   00086A                     u6221:
  2303   00086A  EFF5  F003         	goto	l889
  2304   00086E                     u6220:
  2305   00086E  C051  F02B         	movff	efgtoa@ou,___flge@ff1
  2306   000872  C052  F02C         	movff	efgtoa@ou+1,___flge@ff1+1
  2307   000876  C053  F02D         	movff	efgtoa@ou+2,___flge@ff1+2
  2308   00087A  C054  F02E         	movff	efgtoa@ou+3,___flge@ff1+3
  2309   00087E  C062  F02F         	movff	efgtoa@g,___flge@ff2
  2310   000882  C063  F030         	movff	efgtoa@g+1,___flge@ff2+1
  2311   000886  C064  F031         	movff	efgtoa@g+2,___flge@ff2+2
  2312   00088A  C065  F032         	movff	efgtoa@g+3,___flge@ff2+3
  2313   00088E  ECE4  F016         	call	___flge	;wreg free
  2314   000892  A0D8               	btfss	status,0,c
  2315   000894  EF4E  F004         	goto	u6231
  2316   000898  EF50  F004         	goto	u6230
  2317   00089C                     u6231:
  2318   00089C  EFF5  F003         	goto	l889
  2319   0008A0                     u6230:
  2320   0008A0                     
  2321                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  2322   0008A0  5068               	movf	efgtoa@u^0,w,c
  2323   0008A2  5C62               	subwf	efgtoa@g^0,w,c
  2324   0008A4  6E04               	movwf	labs@a^0,c
  2325   0008A6  5069               	movf	(efgtoa@u+1)^0,w,c
  2326   0008A8  5863               	subwfb	(efgtoa@g+1)^0,w,c
  2327   0008AA  6E05               	movwf	(labs@a+1)^0,c
  2328   0008AC  506A               	movf	(efgtoa@u+2)^0,w,c
  2329   0008AE  5864               	subwfb	(efgtoa@g+2)^0,w,c
  2330   0008B0  6E06               	movwf	(labs@a+2)^0,c
  2331   0008B2  506B               	movf	(efgtoa@u+3)^0,w,c
  2332   0008B4  5865               	subwfb	(efgtoa@g+3)^0,w,c
  2333   0008B6  6E07               	movwf	(labs@a+3)^0,c
  2334   0008B8  EC93  F019         	call	_labs	;wreg free
  2335   0008BC  BE07               	btfsc	(?_labs+3)^0,7,c
  2336   0008BE  EF6E  F004         	goto	u6240
  2337   0008C2  5007               	movf	(?_labs+3)^0,w,c
  2338   0008C4  1006               	iorwf	(?_labs+2)^0,w,c
  2339   0008C6  1005               	iorwf	(?_labs+1)^0,w,c
  2340   0008C8  E107               	bnz	u6241
  2341   0008CA  0E02               	movlw	2
  2342   0008CC  5C04               	subwf	?_labs^0,w,c
  2343   0008CE  B0D8               	btfsc	status,0,c
  2344   0008D0  EF6C  F004         	goto	u6241
  2345   0008D4  EF6E  F004         	goto	u6240
  2346   0008D8                     u6241:
  2347   0008D8  EFB5  F004         	goto	l5073
  2348   0008DC                     u6240:
  2349   0008DC                     l5063:
  2350                           
  2351                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  2352   0008DC  C068  F062         	movff	efgtoa@u,efgtoa@g
  2353   0008E0  C069  F063         	movff	efgtoa@u+1,efgtoa@g+1
  2354   0008E4  C06A  F064         	movff	efgtoa@u+2,efgtoa@g+2
  2355   0008E8  C06B  F065         	movff	efgtoa@u+3,efgtoa@g+3
  2356                           
  2357                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  2358   0008EC  EFCE  F004         	goto	l887
  2359   0008F0                     l5065:
  2360                           
  2361                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  2362   0008F0  C068  F004         	movff	efgtoa@u,___fldiv@b
  2363   0008F4  C069  F005         	movff	efgtoa@u+1,___fldiv@b+1
  2364   0008F8  C06A  F006         	movff	efgtoa@u+2,___fldiv@b+2
  2365   0008FC  C06B  F007         	movff	efgtoa@u+3,___fldiv@b+3
  2366   000900  0E00               	movlw	0
  2367   000902  6E08               	movwf	___fldiv@a^0,c
  2368   000904  0E00               	movlw	0
  2369   000906  6E09               	movwf	(___fldiv@a+1)^0,c
  2370   000908  0E20               	movlw	32
  2371   00090A  6E0A               	movwf	(___fldiv@a+2)^0,c
  2372   00090C  0E41               	movlw	65
  2373   00090E  6E0B               	movwf	(___fldiv@a+3)^0,c
  2374   000910  EC3C  F00F         	call	___fldiv	;wreg free
  2375   000914  C004  F068         	movff	?___fldiv,efgtoa@u
  2376   000918  C005  F069         	movff	?___fldiv+1,efgtoa@u+1
  2377   00091C  C006  F06A         	movff	?___fldiv+2,efgtoa@u+2
  2378   000920  C007  F06B         	movff	?___fldiv+3,efgtoa@u+3
  2379   000924                     
  2380                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  2381   000924  064F               	decf	efgtoa@e^0,f,c
  2382   000926  A0D8               	btfss	status,0,c
  2383   000928  0650               	decf	(efgtoa@e+1)^0,f,c
  2384   00092A                     
  2385                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  2386   00092A  5068               	movf	efgtoa@u^0,w,c
  2387   00092C  5C62               	subwf	efgtoa@g^0,w,c
  2388   00092E  6E04               	movwf	labs@a^0,c
  2389   000930  5069               	movf	(efgtoa@u+1)^0,w,c
  2390   000932  5863               	subwfb	(efgtoa@g+1)^0,w,c
  2391   000934  6E05               	movwf	(labs@a+1)^0,c
  2392   000936  506A               	movf	(efgtoa@u+2)^0,w,c
  2393   000938  5864               	subwfb	(efgtoa@g+2)^0,w,c
  2394   00093A  6E06               	movwf	(labs@a+2)^0,c
  2395   00093C  506B               	movf	(efgtoa@u+3)^0,w,c
  2396   00093E  5865               	subwfb	(efgtoa@g+3)^0,w,c
  2397   000940  6E07               	movwf	(labs@a+3)^0,c
  2398   000942  EC93  F019         	call	_labs	;wreg free
  2399   000946  BE07               	btfsc	(?_labs+3)^0,7,c
  2400   000948  EFB3  F004         	goto	u6250
  2401   00094C  5007               	movf	(?_labs+3)^0,w,c
  2402   00094E  1006               	iorwf	(?_labs+2)^0,w,c
  2403   000950  1005               	iorwf	(?_labs+1)^0,w,c
  2404   000952  E107               	bnz	u6251
  2405   000954  0E02               	movlw	2
  2406   000956  5C04               	subwf	?_labs^0,w,c
  2407   000958  B0D8               	btfsc	status,0,c
  2408   00095A  EFB1  F004         	goto	u6251
  2409   00095E  EFB3  F004         	goto	u6250
  2410   000962                     u6251:
  2411   000962  EFB5  F004         	goto	l5073
  2412   000966                     u6250:
  2413   000966  EF6E  F004         	goto	l5063
  2414   00096A                     l5073:
  2415                           
  2416                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  2417   00096A  C062  F02B         	movff	efgtoa@g,___flge@ff1
  2418   00096E  C063  F02C         	movff	efgtoa@g+1,___flge@ff1+1
  2419   000972  C064  F02D         	movff	efgtoa@g+2,___flge@ff1+2
  2420   000976  C065  F02E         	movff	efgtoa@g+3,___flge@ff1+3
  2421   00097A  C068  F02F         	movff	efgtoa@u,___flge@ff2
  2422   00097E  C069  F030         	movff	efgtoa@u+1,___flge@ff2+1
  2423   000982  C06A  F031         	movff	efgtoa@u+2,___flge@ff2+2
  2424   000986  C06B  F032         	movff	efgtoa@u+3,___flge@ff2+3
  2425   00098A  ECE4  F016         	call	___flge	;wreg free
  2426   00098E  A0D8               	btfss	status,0,c
  2427   000990  EFCC  F004         	goto	u6261
  2428   000994  EFCE  F004         	goto	u6260
  2429   000998                     u6261:
  2430   000998  EF78  F004         	goto	l5065
  2431   00099C                     u6260:
  2432   00099C                     l887:
  2433                           
  2434                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  2435   00099C  C03D  F049         	movff	efgtoa@c,efgtoa@mode
  2436                           
  2437                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  2438   0009A0  C049  F04A         	movff	efgtoa@mode,efgtoa@nmode
  2439   0009A4                     
  2440                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  2441   0009A4  BE78               	btfsc	(_prec+1)^0,7,c
  2442   0009A6  EFD7  F004         	goto	u6271
  2443   0009AA  EFD9  F004         	goto	u6270
  2444   0009AE                     u6271:
  2445   0009AE  EFDF  F004         	goto	l5079
  2446   0009B2                     u6270:
  2447   0009B2  C077  F042         	movff	_prec,efgtoa@p
  2448   0009B6  C078  F043         	movff	_prec+1,efgtoa@p+1
  2449   0009BA  EFE3  F004         	goto	l5081
  2450   0009BE                     l5079:
  2451   0009BE  0E00               	movlw	0
  2452   0009C0  6E43               	movwf	(efgtoa@p+1)^0,c
  2453   0009C2  0E06               	movlw	6
  2454   0009C4  6E42               	movwf	efgtoa@p^0,c
  2455   0009C6                     l5081:
  2456                           
  2457                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  2458   0009C6  C042  F04D         	movff	efgtoa@p,efgtoa@m
  2459   0009CA  C043  F04E         	movff	efgtoa@p+1,efgtoa@m+1
  2460   0009CE                     
  2461                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  2462   0009CE  4A4D               	infsnz	efgtoa@m^0,f,c
  2463   0009D0  2A4E               	incf	(efgtoa@m+1)^0,f,c
  2464   0009D2                     
  2465                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  2466   0009D2  0E66               	movlw	102
  2467   0009D4  184A               	xorwf	efgtoa@nmode^0,w,c
  2468   0009D6  A4D8               	btfss	status,2,c
  2469   0009D8  EFF0  F004         	goto	u6281
  2470   0009DC  EFF2  F004         	goto	u6280
  2471   0009E0                     u6281:
  2472   0009E0  EF12  F005         	goto	l5095
  2473   0009E4                     u6280:
  2474   0009E4                     
  2475                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  2476   0009E4  BE50               	btfsc	(efgtoa@e+1)^0,7,c
  2477   0009E6  EFF9  F004         	goto	u6290
  2478   0009EA  EFF7  F004         	goto	u6291
  2479   0009EE                     u6291:
  2480   0009EE  EF05  F005         	goto	l5091
  2481   0009F2                     u6290:
  2482   0009F2                     
  2483                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  2484   0009F2  0E00               	movlw	0
  2485   0009F4  6E68               	movwf	efgtoa@u^0,c
  2486   0009F6  0E00               	movlw	0
  2487   0009F8  6E69               	movwf	(efgtoa@u+1)^0,c
  2488   0009FA  0E80               	movlw	128
  2489   0009FC  6E6A               	movwf	(efgtoa@u+2)^0,c
  2490   0009FE  0E3F               	movlw	63
  2491   000A00  6E6B               	movwf	(efgtoa@u+3)^0,c
  2492                           
  2493                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  2494   000A02  0E00               	movlw	0
  2495   000A04  6E50               	movwf	(efgtoa@e+1)^0,c
  2496   000A06  0E00               	movlw	0
  2497   000A08  6E4F               	movwf	efgtoa@e^0,c
  2498   000A0A                     l5091:
  2499                           
  2500                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  2501   000A0A  0E67               	movlw	103
  2502   000A0C  1849               	xorwf	efgtoa@mode^0,w,c
  2503   000A0E  B4D8               	btfsc	status,2,c
  2504   000A10  EF0C  F005         	goto	u6301
  2505   000A14  EF0E  F005         	goto	u6300
  2506   000A18                     u6301:
  2507   000A18  EF12  F005         	goto	l5095
  2508   000A1C                     u6300:
  2509   000A1C                     
  2510                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  2511   000A1C  504F               	movf	efgtoa@e^0,w,c
  2512   000A1E  264D               	addwf	efgtoa@m^0,f,c
  2513   000A20  5050               	movf	(efgtoa@e+1)^0,w,c
  2514   000A22  224E               	addwfc	(efgtoa@m+1)^0,f,c
  2515   000A24                     l5095:
  2516                           
  2517                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  2518   000A24  0E00               	movlw	0
  2519   000A26  6E60               	movwf	(efgtoa@i+1)^0,c
  2520   000A28  0E00               	movlw	0
  2521   000A2A  6E5F               	movwf	efgtoa@i^0,c
  2522   000A2C                     
  2523                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  2524   000A2C  C062  F057         	movff	efgtoa@g,efgtoa@h
  2525   000A30  C063  F058         	movff	efgtoa@g+1,efgtoa@h+1
  2526   000A34  C064  F059         	movff	efgtoa@g+2,efgtoa@h+2
  2527   000A38  C065  F05A         	movff	efgtoa@g+3,efgtoa@h+3
  2528   000A3C                     
  2529                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  2530   000A3C  C068  F051         	movff	efgtoa@u,efgtoa@ou
  2531   000A40  C069  F052         	movff	efgtoa@u+1,efgtoa@ou+1
  2532   000A44  C06A  F053         	movff	efgtoa@u+2,efgtoa@ou+2
  2533   000A48  C06B  F054         	movff	efgtoa@u+3,efgtoa@ou+3
  2534                           
  2535                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  2536   000A4C  EFA2  F005         	goto	l5109
  2537   000A50                     l5101:
  2538                           
  2539                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  2540   000A50  C057  F004         	movff	efgtoa@h,___fldiv@b
  2541   000A54  C058  F005         	movff	efgtoa@h+1,___fldiv@b+1
  2542   000A58  C059  F006         	movff	efgtoa@h+2,___fldiv@b+2
  2543   000A5C  C05A  F007         	movff	efgtoa@h+3,___fldiv@b+3
  2544   000A60  C068  F008         	movff	efgtoa@u,___fldiv@a
  2545   000A64  C069  F009         	movff	efgtoa@u+1,___fldiv@a+1
  2546   000A68  C06A  F00A         	movff	efgtoa@u+2,___fldiv@a+2
  2547   000A6C  C06B  F00B         	movff	efgtoa@u+3,___fldiv@a+3
  2548   000A70  EC3C  F00F         	call	___fldiv	;wreg free
  2549   000A74  C004  F01D         	movff	?___fldiv,floorf@x
  2550   000A78  C005  F01E         	movff	?___fldiv+1,floorf@x+1
  2551   000A7C  C006  F01F         	movff	?___fldiv+2,floorf@x+2
  2552   000A80  C007  F020         	movff	?___fldiv+3,floorf@x+3
  2553   000A84  EC63  F012         	call	_floorf	;wreg free
  2554   000A88  C01D  F05B         	movff	?_floorf,efgtoa@l
  2555   000A8C  C01E  F05C         	movff	?_floorf+1,efgtoa@l+1
  2556   000A90  C01F  F05D         	movff	?_floorf+2,efgtoa@l+2
  2557   000A94  C020  F05E         	movff	?_floorf+3,efgtoa@l+3
  2558                           
  2559                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  2560   000A98  C05B  F004         	movff	efgtoa@l,___fltol@f1
  2561   000A9C  C05C  F005         	movff	efgtoa@l+1,___fltol@f1+1
  2562   000AA0  C05D  F006         	movff	efgtoa@l+2,___fltol@f1+2
  2563   000AA4  C05E  F007         	movff	efgtoa@l+3,___fltol@f1+3
  2564   000AA8  EC61  F016         	call	___fltol	;wreg free
  2565   000AAC  C004  F04B         	movff	?___fltol,efgtoa@d
  2566   000AB0  C005  F04C         	movff	?___fltol+1,efgtoa@d+1
  2567   000AB4                     
  2568                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  2569   000AB4  C057  F02B         	movff	efgtoa@h,___flsub@b
  2570   000AB8  C058  F02C         	movff	efgtoa@h+1,___flsub@b+1
  2571   000ABC  C059  F02D         	movff	efgtoa@h+2,___flsub@b+2
  2572   000AC0  C05A  F02E         	movff	efgtoa@h+3,___flsub@b+3
  2573   000AC4  C05B  F016         	movff	efgtoa@l,___flmul@a
  2574   000AC8  C05C  F017         	movff	efgtoa@l+1,___flmul@a+1
  2575   000ACC  C05D  F018         	movff	efgtoa@l+2,___flmul@a+2
  2576   000AD0  C05E  F019         	movff	efgtoa@l+3,___flmul@a+3
  2577   000AD4  C068  F012         	movff	efgtoa@u,___flmul@b
  2578   000AD8  C069  F013         	movff	efgtoa@u+1,___flmul@b+1
  2579   000ADC  C06A  F014         	movff	efgtoa@u+2,___flmul@b+2
  2580   000AE0  C06B  F015         	movff	efgtoa@u+3,___flmul@b+3
  2581   000AE4  EC27  F00D         	call	___flmul	;wreg free
  2582   000AE8  C012  F02F         	movff	?___flmul,___flsub@a
  2583   000AEC  C013  F030         	movff	?___flmul+1,___flsub@a+1
  2584   000AF0  C014  F031         	movff	?___flmul+2,___flsub@a+2
  2585   000AF4  C015  F032         	movff	?___flmul+3,___flsub@a+3
  2586   000AF8  EC6A  F01A         	call	___flsub	;wreg free
  2587   000AFC  C02B  F057         	movff	?___flsub,efgtoa@h
  2588   000B00  C02C  F058         	movff	?___flsub+1,efgtoa@h+1
  2589   000B04  C02D  F059         	movff	?___flsub+2,efgtoa@h+2
  2590   000B08  C02E  F05A         	movff	?___flsub+3,efgtoa@h+3
  2591   000B0C                     
  2592                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  2593   000B0C  C068  F004         	movff	efgtoa@u,___fldiv@b
  2594   000B10  C069  F005         	movff	efgtoa@u+1,___fldiv@b+1
  2595   000B14  C06A  F006         	movff	efgtoa@u+2,___fldiv@b+2
  2596   000B18  C06B  F007         	movff	efgtoa@u+3,___fldiv@b+3
  2597   000B1C  0E00               	movlw	0
  2598   000B1E  6E08               	movwf	___fldiv@a^0,c
  2599   000B20  0E00               	movlw	0
  2600   000B22  6E09               	movwf	(___fldiv@a+1)^0,c
  2601   000B24  0E20               	movlw	32
  2602   000B26  6E0A               	movwf	(___fldiv@a+2)^0,c
  2603   000B28  0E41               	movlw	65
  2604   000B2A  6E0B               	movwf	(___fldiv@a+3)^0,c
  2605   000B2C  EC3C  F00F         	call	___fldiv	;wreg free
  2606   000B30  C004  F068         	movff	?___fldiv,efgtoa@u
  2607   000B34  C005  F069         	movff	?___fldiv+1,efgtoa@u+1
  2608   000B38  C006  F06A         	movff	?___fldiv+2,efgtoa@u+2
  2609   000B3C  C007  F06B         	movff	?___fldiv+3,efgtoa@u+3
  2610   000B40                     
  2611                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  2612   000B40  4A5F               	infsnz	efgtoa@i^0,f,c
  2613   000B42  2A60               	incf	(efgtoa@i+1)^0,f,c
  2614   000B44                     l5109:
  2615                           
  2616                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  2617   000B44  504D               	movf	efgtoa@m^0,w,c
  2618   000B46  5C5F               	subwf	efgtoa@i^0,w,c
  2619   000B48  5060               	movf	(efgtoa@i+1)^0,w,c
  2620   000B4A  0A80               	xorlw	128
  2621   000B4C  6E3E               	movwf	??_efgtoa^0,c
  2622   000B4E  504E               	movf	(efgtoa@m+1)^0,w,c
  2623   000B50  0A80               	xorlw	128
  2624   000B52  583E               	subwfb	??_efgtoa^0,w,c
  2625   000B54  A0D8               	btfss	status,0,c
  2626   000B56  EFAF  F005         	goto	u6311
  2627   000B5A  EFB1  F005         	goto	u6310
  2628   000B5E                     u6311:
  2629   000B5E  EF28  F005         	goto	l5101
  2630   000B62                     u6310:
  2631   000B62                     
  2632                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  2633   000B62  C068  F012         	movff	efgtoa@u,___flmul@b
  2634   000B66  C069  F013         	movff	efgtoa@u+1,___flmul@b+1
  2635   000B6A  C06A  F014         	movff	efgtoa@u+2,___flmul@b+2
  2636   000B6E  C06B  F015         	movff	efgtoa@u+3,___flmul@b+3
  2637   000B72  0E00               	movlw	0
  2638   000B74  6E16               	movwf	___flmul@a^0,c
  2639   000B76  0E00               	movlw	0
  2640   000B78  6E17               	movwf	(___flmul@a+1)^0,c
  2641   000B7A  0EA0               	movlw	160
  2642   000B7C  6E18               	movwf	(___flmul@a+2)^0,c
  2643   000B7E  0E40               	movlw	64
  2644   000B80  6E19               	movwf	(___flmul@a+3)^0,c
  2645   000B82  EC27  F00D         	call	___flmul	;wreg free
  2646   000B86  C012  F05B         	movff	?___flmul,efgtoa@l
  2647   000B8A  C013  F05C         	movff	?___flmul+1,efgtoa@l+1
  2648   000B8E  C014  F05D         	movff	?___flmul+2,efgtoa@l+2
  2649   000B92  C015  F05E         	movff	?___flmul+3,efgtoa@l+3
  2650   000B96                     
  2651                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  2652   000B96  C057  F02B         	movff	efgtoa@h,___flge@ff1
  2653   000B9A  C058  F02C         	movff	efgtoa@h+1,___flge@ff1+1
  2654   000B9E  C059  F02D         	movff	efgtoa@h+2,___flge@ff1+2
  2655   000BA2  C05A  F02E         	movff	efgtoa@h+3,___flge@ff1+3
  2656   000BA6  C05B  F02F         	movff	efgtoa@l,___flge@ff2
  2657   000BAA  C05C  F030         	movff	efgtoa@l+1,___flge@ff2+1
  2658   000BAE  C05D  F031         	movff	efgtoa@l+2,___flge@ff2+2
  2659   000BB2  C05E  F032         	movff	efgtoa@l+3,___flge@ff2+3
  2660   000BB6  ECE4  F016         	call	___flge	;wreg free
  2661   000BBA  B0D8               	btfsc	status,0,c
  2662   000BBC  EFE2  F005         	goto	u6321
  2663   000BC0  EFE4  F005         	goto	u6320
  2664   000BC4                     u6321:
  2665   000BC4  EFEE  F005         	goto	l5117
  2666   000BC8                     u6320:
  2667   000BC8                     
  2668                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  2669   000BC8  0E00               	movlw	0
  2670   000BCA  6E5B               	movwf	efgtoa@l^0,c
  2671   000BCC  0E00               	movlw	0
  2672   000BCE  6E5C               	movwf	(efgtoa@l+1)^0,c
  2673   000BD0  0E00               	movlw	0
  2674   000BD2  6E5D               	movwf	(efgtoa@l+2)^0,c
  2675   000BD4  0E00               	movlw	0
  2676   000BD6  6E5E               	movwf	(efgtoa@l+3)^0,c
  2677                           
  2678                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  2679   000BD8  EF16  F006         	goto	l5123
  2680   000BDC                     l5117:
  2681                           
  2682                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  2683   000BDC  C057  F004         	movff	efgtoa@h,___fleq@ff1
  2684   000BE0  C058  F005         	movff	efgtoa@h+1,___fleq@ff1+1
  2685   000BE4  C059  F006         	movff	efgtoa@h+2,___fleq@ff1+2
  2686   000BE8  C05A  F007         	movff	efgtoa@h+3,___fleq@ff1+3
  2687   000BEC  C05B  F008         	movff	efgtoa@l,___fleq@ff2
  2688   000BF0  C05C  F009         	movff	efgtoa@l+1,___fleq@ff2+1
  2689   000BF4  C05D  F00A         	movff	efgtoa@l+2,___fleq@ff2+2
  2690   000BF8  C05E  F00B         	movff	efgtoa@l+3,___fleq@ff2+3
  2691   000BFC  ECA7  F018         	call	___fleq	;wreg free
  2692   000C00  A0D8               	btfss	status,0,c
  2693   000C02  EF05  F006         	goto	u6331
  2694   000C06  EF07  F006         	goto	u6330
  2695   000C0A                     u6331:
  2696   000C0A  EF16  F006         	goto	l5123
  2697   000C0E                     u6330:
  2698   000C0E  B04B               	btfsc	efgtoa@d^0,0,c
  2699   000C10  EF0C  F006         	goto	u6341
  2700   000C14  EF0E  F006         	goto	u6340
  2701   000C18                     u6341:
  2702   000C18  EF16  F006         	goto	l5123
  2703   000C1C                     u6340:
  2704   000C1C                     
  2705                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  2706   000C1C  0E00               	movlw	0
  2707   000C1E  6E5B               	movwf	efgtoa@l^0,c
  2708   000C20  0E00               	movlw	0
  2709   000C22  6E5C               	movwf	(efgtoa@l+1)^0,c
  2710   000C24  0E00               	movlw	0
  2711   000C26  6E5D               	movwf	(efgtoa@l+2)^0,c
  2712   000C28  0E00               	movlw	0
  2713   000C2A  6E5E               	movwf	(efgtoa@l+3)^0,c
  2714   000C2C                     l5123:
  2715                           
  2716                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  2717   000C2C  C062  F004         	movff	efgtoa@g,___fladd@b
  2718   000C30  C063  F005         	movff	efgtoa@g+1,___fladd@b+1
  2719   000C34  C064  F006         	movff	efgtoa@g+2,___fladd@b+2
  2720   000C38  C065  F007         	movff	efgtoa@g+3,___fladd@b+3
  2721   000C3C  C05B  F008         	movff	efgtoa@l,___fladd@a
  2722   000C40  C05C  F009         	movff	efgtoa@l+1,___fladd@a+1
  2723   000C44  C05D  F00A         	movff	efgtoa@l+2,___fladd@a+2
  2724   000C48  C05E  F00B         	movff	efgtoa@l+3,___fladd@a+3
  2725   000C4C  ECC7  F00A         	call	___fladd	;wreg free
  2726   000C50  C004  F057         	movff	?___fladd,efgtoa@h
  2727   000C54  C005  F058         	movff	?___fladd+1,efgtoa@h+1
  2728   000C58  C006  F059         	movff	?___fladd+2,efgtoa@h+2
  2729   000C5C  C007  F05A         	movff	?___fladd+3,efgtoa@h+3
  2730   000C60                     
  2731                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  2732   000C60  C057  F02B         	movff	efgtoa@h,___flge@ff1
  2733   000C64  C058  F02C         	movff	efgtoa@h+1,___flge@ff1+1
  2734   000C68  C059  F02D         	movff	efgtoa@h+2,___flge@ff1+2
  2735   000C6C  C05A  F02E         	movff	efgtoa@h+3,___flge@ff1+3
  2736   000C70  0E00               	movlw	0
  2737   000C72  6E16               	movwf	___flmul@a^0,c
  2738   000C74  0E00               	movlw	0
  2739   000C76  6E17               	movwf	(___flmul@a+1)^0,c
  2740   000C78  0E20               	movlw	32
  2741   000C7A  6E18               	movwf	(___flmul@a+2)^0,c
  2742   000C7C  0E41               	movlw	65
  2743   000C7E  6E19               	movwf	(___flmul@a+3)^0,c
  2744   000C80  C051  F012         	movff	efgtoa@ou,___flmul@b
  2745   000C84  C052  F013         	movff	efgtoa@ou+1,___flmul@b+1
  2746   000C88  C053  F014         	movff	efgtoa@ou+2,___flmul@b+2
  2747   000C8C  C054  F015         	movff	efgtoa@ou+3,___flmul@b+3
  2748   000C90  EC27  F00D         	call	___flmul	;wreg free
  2749   000C94  C012  F02F         	movff	?___flmul,___flge@ff2
  2750   000C98  C013  F030         	movff	?___flmul+1,___flge@ff2+1
  2751   000C9C  C014  F031         	movff	?___flmul+2,___flge@ff2+2
  2752   000CA0  C015  F032         	movff	?___flmul+3,___flge@ff2+3
  2753   000CA4  ECE4  F016         	call	___flge	;wreg free
  2754   000CA8  A0D8               	btfss	status,0,c
  2755   000CAA  EF59  F006         	goto	u6351
  2756   000CAE  EF5B  F006         	goto	u6350
  2757   000CB2                     u6351:
  2758   000CB2  EF82  F006         	goto	l5135
  2759   000CB6                     u6350:
  2760   000CB6                     
  2761                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  2762   000CB6  4A4F               	infsnz	efgtoa@e^0,f,c
  2763   000CB8  2A50               	incf	(efgtoa@e+1)^0,f,c
  2764   000CBA                     
  2765                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  2766   000CBA  C051  F012         	movff	efgtoa@ou,___flmul@b
  2767   000CBE  C052  F013         	movff	efgtoa@ou+1,___flmul@b+1
  2768   000CC2  C053  F014         	movff	efgtoa@ou+2,___flmul@b+2
  2769   000CC6  C054  F015         	movff	efgtoa@ou+3,___flmul@b+3
  2770   000CCA  0E00               	movlw	0
  2771   000CCC  6E16               	movwf	___flmul@a^0,c
  2772   000CCE  0E00               	movlw	0
  2773   000CD0  6E17               	movwf	(___flmul@a+1)^0,c
  2774   000CD2  0E20               	movlw	32
  2775   000CD4  6E18               	movwf	(___flmul@a+2)^0,c
  2776   000CD6  0E41               	movlw	65
  2777   000CD8  6E19               	movwf	(___flmul@a+3)^0,c
  2778   000CDA  EC27  F00D         	call	___flmul	;wreg free
  2779   000CDE  C012  F051         	movff	?___flmul,efgtoa@ou
  2780   000CE2  C013  F052         	movff	?___flmul+1,efgtoa@ou+1
  2781   000CE6  C014  F053         	movff	?___flmul+2,efgtoa@ou+2
  2782   000CEA  C015  F054         	movff	?___flmul+3,efgtoa@ou+3
  2783   000CEE                     
  2784                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  2785   000CEE  0E66               	movlw	102
  2786   000CF0  184A               	xorwf	efgtoa@nmode^0,w,c
  2787   000CF2  A4D8               	btfss	status,2,c
  2788   000CF4  EF7E  F006         	goto	u6361
  2789   000CF8  EF80  F006         	goto	u6360
  2790   000CFC                     u6361:
  2791   000CFC  EF82  F006         	goto	l5135
  2792   000D00                     u6360:
  2793   000D00                     
  2794                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  2795   000D00  4A4D               	infsnz	efgtoa@m^0,f,c
  2796   000D02  2A4E               	incf	(efgtoa@m+1)^0,f,c
  2797   000D04                     l5135:
  2798                           
  2799                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  2800   000D04  C051  F068         	movff	efgtoa@ou,efgtoa@u
  2801   000D08  C052  F069         	movff	efgtoa@ou+1,efgtoa@u+1
  2802   000D0C  C053  F06A         	movff	efgtoa@ou+2,efgtoa@u+2
  2803   000D10  C054  F06B         	movff	efgtoa@ou+3,efgtoa@u+3
  2804   000D14                     
  2805                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  2806   000D14  C04F  F040         	movff	efgtoa@e,efgtoa@ne
  2807   000D18  C050  F041         	movff	efgtoa@e+1,efgtoa@ne+1
  2808   000D1C                     
  2809                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  2810   000D1C  0E00               	movlw	0
  2811   000D1E  6E48               	movwf	efgtoa@pp^0,c
  2812   000D20                     
  2813                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  2814   000D20  0E00               	movlw	0
  2815   000D22  6E45               	movwf	(efgtoa@t+1)^0,c
  2816   000D24  0E00               	movlw	0
  2817   000D26  6E44               	movwf	efgtoa@t^0,c
  2818   000D28                     
  2819                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  2820   000D28  0E00               	movlw	0
  2821   000D2A  6E60               	movwf	(efgtoa@i+1)^0,c
  2822   000D2C  0E00               	movlw	0
  2823   000D2E  6E5F               	movwf	efgtoa@i^0,c
  2824                           
  2825                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  2826   000D30  EF7C  F007         	goto	l5185
  2827   000D34                     l5145:
  2828                           
  2829                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  2830   000D34  C057  F004         	movff	efgtoa@h,___fldiv@b
  2831   000D38  C058  F005         	movff	efgtoa@h+1,___fldiv@b+1
  2832   000D3C  C059  F006         	movff	efgtoa@h+2,___fldiv@b+2
  2833   000D40  C05A  F007         	movff	efgtoa@h+3,___fldiv@b+3
  2834   000D44  C068  F008         	movff	efgtoa@u,___fldiv@a
  2835   000D48  C069  F009         	movff	efgtoa@u+1,___fldiv@a+1
  2836   000D4C  C06A  F00A         	movff	efgtoa@u+2,___fldiv@a+2
  2837   000D50  C06B  F00B         	movff	efgtoa@u+3,___fldiv@a+3
  2838   000D54  EC3C  F00F         	call	___fldiv	;wreg free
  2839   000D58  C004  F01D         	movff	?___fldiv,floorf@x
  2840   000D5C  C005  F01E         	movff	?___fldiv+1,floorf@x+1
  2841   000D60  C006  F01F         	movff	?___fldiv+2,floorf@x+2
  2842   000D64  C007  F020         	movff	?___fldiv+3,floorf@x+3
  2843   000D68  EC63  F012         	call	_floorf	;wreg free
  2844   000D6C  C01D  F05B         	movff	?_floorf,efgtoa@l
  2845   000D70  C01E  F05C         	movff	?_floorf+1,efgtoa@l+1
  2846   000D74  C01F  F05D         	movff	?_floorf+2,efgtoa@l+2
  2847   000D78  C020  F05E         	movff	?_floorf+3,efgtoa@l+3
  2848                           
  2849                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  2850   000D7C  C05B  F004         	movff	efgtoa@l,___fltol@f1
  2851   000D80  C05C  F005         	movff	efgtoa@l+1,___fltol@f1+1
  2852   000D84  C05D  F006         	movff	efgtoa@l+2,___fltol@f1+2
  2853   000D88  C05E  F007         	movff	efgtoa@l+3,___fltol@f1+3
  2854   000D8C  EC61  F016         	call	___fltol	;wreg free
  2855   000D90  BE05               	btfsc	(?___fltol+1)^0,7,c
  2856   000D92  EFD6  F006         	goto	u6370
  2857   000D96  5005               	movf	(?___fltol+1)^0,w,c
  2858   000D98  E107               	bnz	u6371
  2859   000D9A  0E0A               	movlw	10
  2860   000D9C  5C04               	subwf	?___fltol^0,w,c
  2861   000D9E  B0D8               	btfsc	status,0,c
  2862   000DA0  EFD4  F006         	goto	u6371
  2863   000DA4  EFD6  F006         	goto	u6370
  2864   000DA8                     u6371:
  2865   000DA8  EFE6  F006         	goto	l5149
  2866   000DAC                     u6370:
  2867   000DAC  C05B  F004         	movff	efgtoa@l,___fltol@f1
  2868   000DB0  C05C  F005         	movff	efgtoa@l+1,___fltol@f1+1
  2869   000DB4  C05D  F006         	movff	efgtoa@l+2,___fltol@f1+2
  2870   000DB8  C05E  F007         	movff	efgtoa@l+3,___fltol@f1+3
  2871   000DBC  EC61  F016         	call	___fltol	;wreg free
  2872   000DC0  C004  F04B         	movff	?___fltol,efgtoa@d
  2873   000DC4  C005  F04C         	movff	?___fltol+1,efgtoa@d+1
  2874   000DC8  EFEA  F006         	goto	l917
  2875   000DCC                     l5149:
  2876   000DCC  0E00               	movlw	0
  2877   000DCE  6E4C               	movwf	(efgtoa@d+1)^0,c
  2878   000DD0  0E09               	movlw	9
  2879   000DD2  6E4B               	movwf	efgtoa@d^0,c
  2880   000DD4                     l917:
  2881                           
  2882                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  2883   000DD4  5048               	movf	efgtoa@pp^0,w,c
  2884   000DD6  A4D8               	btfss	status,2,c
  2885   000DD8  EFF0  F006         	goto	u6381
  2886   000DDC  EFF2  F006         	goto	u6380
  2887   000DE0                     u6381:
  2888   000DE0  EF1A  F007         	goto	l5169
  2889   000DE4                     u6380:
  2890   000DE4  BE41               	btfsc	(efgtoa@ne+1)^0,7,c
  2891   000DE6  EFF9  F006         	goto	u6390
  2892   000DEA  EFF7  F006         	goto	u6391
  2893   000DEE                     u6391:
  2894   000DEE  EF1A  F007         	goto	l5169
  2895   000DF2                     u6390:
  2896   000DF2                     
  2897                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  2898   000DF2  0E00               	movlw	low _dbuf
  2899   000DF4  2466               	addwf	efgtoa@n^0,w,c
  2900   000DF6  6ED9               	movwf	fsr2l,c
  2901   000DF8  0E01               	movlw	high _dbuf
  2902   000DFA  2067               	addwfc	(efgtoa@n+1)^0,w,c
  2903   000DFC  6EDA               	movwf	fsr2h,c
  2904   000DFE  0E2E               	movlw	46
  2905   000E00  6EDF               	movwf	indf2,c
  2906   000E02  4A66               	infsnz	efgtoa@n^0,f,c
  2907   000E04  2A67               	incf	(efgtoa@n+1)^0,f,c
  2908   000E06                     
  2909                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  2910   000E06  0655               	decf	efgtoa@w^0,f,c
  2911   000E08  A0D8               	btfss	status,0,c
  2912   000E0A  0656               	decf	(efgtoa@w+1)^0,f,c
  2913   000E0C                     
  2914                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  2915   000E0C  0E01               	movlw	1
  2916   000E0E  6E48               	movwf	efgtoa@pp^0,c
  2917   000E10  EF1A  F007         	goto	l5169
  2918   000E14                     l5161:
  2919                           
  2920                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  2921   000E14  0E00               	movlw	low _dbuf
  2922   000E16  2466               	addwf	efgtoa@n^0,w,c
  2923   000E18  6ED9               	movwf	fsr2l,c
  2924   000E1A  0E01               	movlw	high _dbuf
  2925   000E1C  2067               	addwfc	(efgtoa@n+1)^0,w,c
  2926   000E1E  6EDA               	movwf	fsr2h,c
  2927   000E20  0E30               	movlw	48
  2928   000E22  6EDF               	movwf	indf2,c
  2929   000E24  4A66               	infsnz	efgtoa@n^0,f,c
  2930   000E26  2A67               	incf	(efgtoa@n+1)^0,f,c
  2931   000E28                     
  2932                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  2933   000E28  0655               	decf	efgtoa@w^0,f,c
  2934   000E2A  A0D8               	btfss	status,0,c
  2935   000E2C  0656               	decf	(efgtoa@w+1)^0,f,c
  2936   000E2E                     
  2937                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  2938   000E2E  0644               	decf	efgtoa@t^0,f,c
  2939   000E30  A0D8               	btfss	status,0,c
  2940   000E32  0645               	decf	(efgtoa@t+1)^0,f,c
  2941   000E34                     l5169:
  2942                           
  2943                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  2944   000E34  5044               	movf	efgtoa@t^0,w,c
  2945   000E36  1045               	iorwf	(efgtoa@t+1)^0,w,c
  2946   000E38  A4D8               	btfss	status,2,c
  2947   000E3A  EF21  F007         	goto	u6401
  2948   000E3E  EF23  F007         	goto	u6400
  2949   000E42                     u6401:
  2950   000E42  EF0A  F007         	goto	l5161
  2951   000E46                     u6400:
  2952   000E46                     
  2953                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  2954   000E46  0E00               	movlw	low _dbuf
  2955   000E48  2466               	addwf	efgtoa@n^0,w,c
  2956   000E4A  6ED9               	movwf	fsr2l,c
  2957   000E4C  0E01               	movlw	high _dbuf
  2958   000E4E  2067               	addwfc	(efgtoa@n+1)^0,w,c
  2959   000E50  6EDA               	movwf	fsr2h,c
  2960   000E52  504B               	movf	efgtoa@d^0,w,c
  2961   000E54  0F30               	addlw	48
  2962   000E56  6EDF               	movwf	indf2,c
  2963   000E58  4A66               	infsnz	efgtoa@n^0,f,c
  2964   000E5A  2A67               	incf	(efgtoa@n+1)^0,f,c
  2965   000E5C                     
  2966                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  2967   000E5C  0655               	decf	efgtoa@w^0,f,c
  2968   000E5E  A0D8               	btfss	status,0,c
  2969   000E60  0656               	decf	(efgtoa@w+1)^0,f,c
  2970   000E62                     
  2971                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  2972   000E62  C057  F02B         	movff	efgtoa@h,___flsub@b
  2973   000E66  C058  F02C         	movff	efgtoa@h+1,___flsub@b+1
  2974   000E6A  C059  F02D         	movff	efgtoa@h+2,___flsub@b+2
  2975   000E6E  C05A  F02E         	movff	efgtoa@h+3,___flsub@b+3
  2976   000E72  C05B  F016         	movff	efgtoa@l,___flmul@a
  2977   000E76  C05C  F017         	movff	efgtoa@l+1,___flmul@a+1
  2978   000E7A  C05D  F018         	movff	efgtoa@l+2,___flmul@a+2
  2979   000E7E  C05E  F019         	movff	efgtoa@l+3,___flmul@a+3
  2980   000E82  C068  F012         	movff	efgtoa@u,___flmul@b
  2981   000E86  C069  F013         	movff	efgtoa@u+1,___flmul@b+1
  2982   000E8A  C06A  F014         	movff	efgtoa@u+2,___flmul@b+2
  2983   000E8E  C06B  F015         	movff	efgtoa@u+3,___flmul@b+3
  2984   000E92  EC27  F00D         	call	___flmul	;wreg free
  2985   000E96  C012  F02F         	movff	?___flmul,___flsub@a
  2986   000E9A  C013  F030         	movff	?___flmul+1,___flsub@a+1
  2987   000E9E  C014  F031         	movff	?___flmul+2,___flsub@a+2
  2988   000EA2  C015  F032         	movff	?___flmul+3,___flsub@a+3
  2989   000EA6  EC6A  F01A         	call	___flsub	;wreg free
  2990   000EAA  C02B  F057         	movff	?___flsub,efgtoa@h
  2991   000EAE  C02C  F058         	movff	?___flsub+1,efgtoa@h+1
  2992   000EB2  C02D  F059         	movff	?___flsub+2,efgtoa@h+2
  2993   000EB6  C02E  F05A         	movff	?___flsub+3,efgtoa@h+3
  2994   000EBA                     
  2995                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  2996   000EBA  C068  F004         	movff	efgtoa@u,___fldiv@b
  2997   000EBE  C069  F005         	movff	efgtoa@u+1,___fldiv@b+1
  2998   000EC2  C06A  F006         	movff	efgtoa@u+2,___fldiv@b+2
  2999   000EC6  C06B  F007         	movff	efgtoa@u+3,___fldiv@b+3
  3000   000ECA  0E00               	movlw	0
  3001   000ECC  6E08               	movwf	___fldiv@a^0,c
  3002   000ECE  0E00               	movlw	0
  3003   000ED0  6E09               	movwf	(___fldiv@a+1)^0,c
  3004   000ED2  0E20               	movlw	32
  3005   000ED4  6E0A               	movwf	(___fldiv@a+2)^0,c
  3006   000ED6  0E41               	movlw	65
  3007   000ED8  6E0B               	movwf	(___fldiv@a+3)^0,c
  3008   000EDA  EC3C  F00F         	call	___fldiv	;wreg free
  3009   000EDE  C004  F068         	movff	?___fldiv,efgtoa@u
  3010   000EE2  C005  F069         	movff	?___fldiv+1,efgtoa@u+1
  3011   000EE6  C006  F06A         	movff	?___fldiv+2,efgtoa@u+2
  3012   000EEA  C007  F06B         	movff	?___fldiv+3,efgtoa@u+3
  3013   000EEE                     
  3014                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  3015   000EEE  0640               	decf	efgtoa@ne^0,f,c
  3016   000EF0  A0D8               	btfss	status,0,c
  3017   000EF2  0641               	decf	(efgtoa@ne+1)^0,f,c
  3018   000EF4                     
  3019                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  3020   000EF4  4A5F               	infsnz	efgtoa@i^0,f,c
  3021   000EF6  2A60               	incf	(efgtoa@i+1)^0,f,c
  3022   000EF8                     l5185:
  3023                           
  3024                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3025   000EF8  504D               	movf	efgtoa@m^0,w,c
  3026   000EFA  5C5F               	subwf	efgtoa@i^0,w,c
  3027   000EFC  5060               	movf	(efgtoa@i+1)^0,w,c
  3028   000EFE  0A80               	xorlw	128
  3029   000F00  6E3E               	movwf	??_efgtoa^0,c
  3030   000F02  504E               	movf	(efgtoa@m+1)^0,w,c
  3031   000F04  0A80               	xorlw	128
  3032   000F06  583E               	subwfb	??_efgtoa^0,w,c
  3033   000F08  B0D8               	btfsc	status,0,c
  3034   000F0A  EF89  F007         	goto	u6411
  3035   000F0E  EF8B  F007         	goto	u6410
  3036   000F12                     u6411:
  3037   000F12  EF99  F007         	goto	l5189
  3038   000F16                     u6410:
  3039   000F16  BE67               	btfsc	(efgtoa@n+1)^0,7,c
  3040   000F18  EF97  F007         	goto	u6421
  3041   000F1C  5067               	movf	(efgtoa@n+1)^0,w,c
  3042   000F1E  E109               	bnz	u6420
  3043   000F20  0E4B               	movlw	75
  3044   000F22  5C66               	subwf	efgtoa@n^0,w,c
  3045   000F24  A0D8               	btfss	status,0,c
  3046   000F26  EF97  F007         	goto	u6421
  3047   000F2A  EF99  F007         	goto	u6420
  3048   000F2E                     u6421:
  3049   000F2E  EF9A  F006         	goto	l5145
  3050   000F32                     u6420:
  3051   000F32                     l5189:
  3052                           
  3053                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  3054   000F32  0E00               	movlw	0
  3055   000F34  6E60               	movwf	(efgtoa@i+1)^0,c
  3056   000F36  0E4F               	movlw	79
  3057   000F38  6E5F               	movwf	efgtoa@i^0,c
  3058   000F3A                     
  3059                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  3060   000F3A  0E00               	movlw	low _dbuf
  3061   000F3C  245F               	addwf	efgtoa@i^0,w,c
  3062   000F3E  6ED9               	movwf	fsr2l,c
  3063   000F40  0E01               	movlw	high _dbuf
  3064   000F42  2060               	addwfc	(efgtoa@i+1)^0,w,c
  3065   000F44  6EDA               	movwf	fsr2h,c
  3066   000F46  0E00               	movlw	0
  3067   000F48  6EDF               	movwf	indf2,c
  3068   000F4A                     
  3069                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  3070   000F4A  0E00               	movlw	low _dbuf
  3071   000F4C  6E3E               	movwf	??_efgtoa^0,c
  3072   000F4E  0E01               	movlw	high _dbuf
  3073   000F50  6E3F               	movwf	(??_efgtoa+1)^0,c
  3074   000F52  5066               	movf	efgtoa@n^0,w,c
  3075   000F54  5E3E               	subwf	??_efgtoa^0,f,c
  3076   000F56  5067               	movf	(efgtoa@n+1)^0,w,c
  3077   000F58  5A3F               	subwfb	(??_efgtoa+1)^0,f,c
  3078   000F5A  505F               	movf	efgtoa@i^0,w,c
  3079   000F5C  243E               	addwf	??_efgtoa^0,w,c
  3080   000F5E  6E04               	movwf	memcpy@d1^0,c
  3081   000F60  5060               	movf	(efgtoa@i+1)^0,w,c
  3082   000F62  203F               	addwfc	(??_efgtoa+1)^0,w,c
  3083   000F64  6E05               	movwf	(memcpy@d1+1)^0,c
  3084   000F66  0E00               	movlw	low _dbuf
  3085   000F68  6E06               	movwf	memcpy@s1^0,c
  3086   000F6A  0E01               	movlw	high _dbuf
  3087   000F6C  6E07               	movwf	(memcpy@s1+1)^0,c
  3088   000F6E  C066  F008         	movff	efgtoa@n,memcpy@n
  3089   000F72  C067  F009         	movff	efgtoa@n+1,memcpy@n+1
  3090   000F76  EC42  F01A         	call	_memcpy	;wreg free
  3091   000F7A                     
  3092                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  3093   000F7A  5066               	movf	efgtoa@n^0,w,c
  3094   000F7C  5C5F               	subwf	efgtoa@i^0,w,c
  3095   000F7E  6E66               	movwf	efgtoa@n^0,c
  3096   000F80  5067               	movf	(efgtoa@n+1)^0,w,c
  3097   000F82  5860               	subwfb	(efgtoa@i+1)^0,w,c
  3098   000F84  6E67               	movwf	(efgtoa@n+1)^0,c
  3099   000F86                     
  3100                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  3101   000F86  5061               	movf	efgtoa@sign^0,w,c
  3102   000F88  A4D8               	btfss	status,2,c
  3103   000F8A  EFC9  F007         	goto	u6431
  3104   000F8E  EFCC  F007         	goto	u6430
  3105   000F92                     u6431:
  3106   000F92  0E01               	movlw	1
  3107   000F94  EFCD  F007         	goto	u6440
  3108   000F98                     u6430:
  3109   000F98  0E00               	movlw	0
  3110   000F9A                     u6440:
  3111   000F9A  6E5F               	movwf	efgtoa@i^0,c
  3112   000F9C  6A60               	clrf	(efgtoa@i+1)^0,c
  3113   000F9E                     
  3114                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 772:  if (flags &
      +                           (1 << 1)) {
  3115   000F9E  A279               	btfss	_flags^0,1,c
  3116   000FA0  EFD4  F007         	goto	u6451
  3117   000FA4  EFD6  F007         	goto	u6450
  3118   000FA8                     u6451:
  3119   000FA8  EF04  F008         	goto	l5211
  3120   000FAC                     u6450:
  3121   000FAC  EFE6  F007         	goto	l5207
  3122   000FB0                     l5203:
  3123                           
  3124                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 774:    dbuf[--n]
      +                           = '0';
  3125   000FB0  0666               	decf	efgtoa@n^0,f,c
  3126   000FB2  A0D8               	btfss	status,0,c
  3127   000FB4  0667               	decf	(efgtoa@n+1)^0,f,c
  3128   000FB6  0E00               	movlw	low _dbuf
  3129   000FB8  2466               	addwf	efgtoa@n^0,w,c
  3130   000FBA  6ED9               	movwf	fsr2l,c
  3131   000FBC  0E01               	movlw	high _dbuf
  3132   000FBE  2067               	addwfc	(efgtoa@n+1)^0,w,c
  3133   000FC0  6EDA               	movwf	fsr2h,c
  3134   000FC2  0E30               	movlw	48
  3135   000FC4  6EDF               	movwf	indf2,c
  3136   000FC6                     
  3137                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 775:    w--;
  3138   000FC6  0655               	decf	efgtoa@w^0,f,c
  3139   000FC8  A0D8               	btfss	status,0,c
  3140   000FCA  0656               	decf	(efgtoa@w+1)^0,f,c
  3141   000FCC                     l5207:
  3142                           
  3143                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 773:   while (w >
      +                           i && n > i) {
  3144   000FCC  5055               	movf	efgtoa@w^0,w,c
  3145   000FCE  5C5F               	subwf	efgtoa@i^0,w,c
  3146   000FD0  5060               	movf	(efgtoa@i+1)^0,w,c
  3147   000FD2  0A80               	xorlw	128
  3148   000FD4  6E3E               	movwf	??_efgtoa^0,c
  3149   000FD6  5056               	movf	(efgtoa@w+1)^0,w,c
  3150   000FD8  0A80               	xorlw	128
  3151   000FDA  583E               	subwfb	??_efgtoa^0,w,c
  3152   000FDC  B0D8               	btfsc	status,0,c
  3153   000FDE  EFF3  F007         	goto	u6461
  3154   000FE2  EFF5  F007         	goto	u6460
  3155   000FE6                     u6461:
  3156   000FE6  EF04  F008         	goto	l5211
  3157   000FEA                     u6460:
  3158   000FEA  5066               	movf	efgtoa@n^0,w,c
  3159   000FEC  5C5F               	subwf	efgtoa@i^0,w,c
  3160   000FEE  5060               	movf	(efgtoa@i+1)^0,w,c
  3161   000FF0  0A80               	xorlw	128
  3162   000FF2  6E3E               	movwf	??_efgtoa^0,c
  3163   000FF4  5067               	movf	(efgtoa@n+1)^0,w,c
  3164   000FF6  0A80               	xorlw	128
  3165   000FF8  583E               	subwfb	??_efgtoa^0,w,c
  3166   000FFA  A0D8               	btfss	status,0,c
  3167   000FFC  EF02  F008         	goto	u6471
  3168   001000  EF04  F008         	goto	u6470
  3169   001004                     u6471:
  3170   001004  EFD8  F007         	goto	l5203
  3171   001008                     u6470:
  3172   001008                     l5211:
  3173                           
  3174                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  3175   001008  5061               	movf	efgtoa@sign^0,w,c
  3176   00100A  B4D8               	btfsc	status,2,c
  3177   00100C  EF0A  F008         	goto	u6481
  3178   001010  EF0C  F008         	goto	u6480
  3179   001014                     u6481:
  3180   001014  EF17  F008         	goto	l5215
  3181   001018                     u6480:
  3182   001018                     
  3183                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  3184   001018  0666               	decf	efgtoa@n^0,f,c
  3185   00101A  A0D8               	btfss	status,0,c
  3186   00101C  0667               	decf	(efgtoa@n+1)^0,f,c
  3187   00101E  0E00               	movlw	low _dbuf
  3188   001020  2466               	addwf	efgtoa@n^0,w,c
  3189   001022  6ED9               	movwf	fsr2l,c
  3190   001024  0E01               	movlw	high _dbuf
  3191   001026  2067               	addwfc	(efgtoa@n+1)^0,w,c
  3192   001028  6EDA               	movwf	fsr2h,c
  3193   00102A  C061  FFDF         	movff	efgtoa@sign,indf2
  3194   00102E                     l5215:
  3195                           
  3196                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  3197   00102E  505F               	movf	efgtoa@i^0,w,c
  3198   001030  5E55               	subwf	efgtoa@w^0,f,c
  3199   001032  5060               	movf	(efgtoa@i+1)^0,w,c
  3200   001034  5A56               	subwfb	(efgtoa@w+1)^0,f,c
  3201   001036                     
  3202                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  3203   001036  C037  F014         	movff	efgtoa@fp,pad@fp
  3204   00103A  C038  F015         	movff	efgtoa@fp+1,pad@fp+1
  3205   00103E  0E00               	movlw	low _dbuf
  3206   001040  2466               	addwf	efgtoa@n^0,w,c
  3207   001042  6E16               	movwf	pad@buf^0,c
  3208   001044  0E01               	movlw	high _dbuf
  3209   001046  2067               	addwfc	(efgtoa@n+1)^0,w,c
  3210   001048  6E17               	movwf	(pad@buf+1)^0,c
  3211   00104A  C055  F018         	movff	efgtoa@w,pad@p
  3212   00104E  C056  F019         	movff	efgtoa@w+1,pad@p+1
  3213   001052  ECFC  F018         	call	_pad	;wreg free
  3214   001056                     l884:
  3215   001056  0012               	return		;funcret
  3216   001058                     __end_of_efgtoa:
  3217                           	callstack 0
  3218                           
  3219 ;; *************** function _strcpy *****************
  3220 ;; Defined at:
  3221 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  3222 ;; Parameters:    Size  Location     Type
  3223 ;;  dest            2    3[COMRAM] PTR unsigned char 
  3224 ;;		 -> dbuf(80), 
  3225 ;;  src             2    5[COMRAM] PTR const unsigned char 
  3226 ;;		 -> STR_5(4), STR_2(4), 
  3227 ;; Auto vars:     Size  Location     Type
  3228 ;;  d               2    9[COMRAM] PTR unsigned char 
  3229 ;;		 -> dbuf(80), 
  3230 ;;  s               2    7[COMRAM] PTR const unsigned char 
  3231 ;;		 -> STR_5(4), STR_2(4), 
  3232 ;; Return value:  Size  Location     Type
  3233 ;;                  2    3[COMRAM] PTR unsigned char 
  3234 ;; Registers used:
  3235 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3236 ;; Tracked objects:
  3237 ;;		On entry : 0/0
  3238 ;;		On exit  : 0/0
  3239 ;;		Unchanged: 0/0
  3240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3241 ;;      Params:         4       0       0       0       0       0       0
  3242 ;;      Locals:         4       0       0       0       0       0       0
  3243 ;;      Temps:          0       0       0       0       0       0       0
  3244 ;;      Totals:         8       0       0       0       0       0       0
  3245 ;;Total ram usage:        8 bytes
  3246 ;; Hardware stack levels used: 1
  3247 ;; Hardware stack levels required when called: 2
  3248 ;; This function calls:
  3249 ;;		Nothing
  3250 ;; This function is called by:
  3251 ;;		_efgtoa
  3252 ;; This function uses a non-reentrant model
  3253 ;;
  3254                           
  3255                           	psect	text6
  3256   0035A4                     __ptext6:
  3257                           	callstack 0
  3258   0035A4                     _strcpy:
  3259                           	callstack 23
  3260   0035A4  C006  F008         	movff	strcpy@src,strcpy@s
  3261   0035A8  C007  F009         	movff	strcpy@src+1,strcpy@s+1
  3262   0035AC  C004  F00A         	movff	strcpy@dest,strcpy@d
  3263   0035B0  C005  F00B         	movff	strcpy@dest+1,strcpy@d+1
  3264   0035B4                     l4865:
  3265   0035B4  C008  FFF6         	movff	strcpy@s,tblptrl
  3266   0035B8  C009  FFF7         	movff	strcpy@s+1,tblptrh
  3267   0035BC  4A08               	infsnz	strcpy@s^0,f,c
  3268   0035BE  2A09               	incf	(strcpy@s+1)^0,f,c
  3269   0035C0                     	if	0	;tblptru may be non-zero
  3270   0035C0                     	endif
  3271   0035C0                     	if	0	;tblptru may be non-zero
  3272   0035C0                     	endif
  3273   0035C0  C00A  FFD9         	movff	strcpy@d,fsr2l
  3274   0035C4  C00B  FFDA         	movff	strcpy@d+1,fsr2h
  3275   0035C8  4A0A               	infsnz	strcpy@d^0,f,c
  3276   0035CA  2A0B               	incf	(strcpy@d+1)^0,f,c
  3277   0035CC  0008               	tblrd		*
  3278   0035CE  CFF5 FFDF          	movff	tablat,indf2
  3279   0035D2  50DF               	movf	indf2,w,c
  3280   0035D4  A4D8               	btfss	status,2,c
  3281   0035D6  EFEF  F01A         	goto	u5841
  3282   0035DA  EFF1  F01A         	goto	u5840
  3283   0035DE                     u5841:
  3284   0035DE  EFDA  F01A         	goto	l4865
  3285   0035E2                     u5840:
  3286   0035E2  0012               	return		;funcret
  3287   0035E4                     __end_of_strcpy:
  3288                           	callstack 0
  3289                           
  3290 ;; *************** function _memcpy *****************
  3291 ;; Defined at:
  3292 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  3293 ;; Parameters:    Size  Location     Type
  3294 ;;  d1              2    3[COMRAM] PTR void 
  3295 ;;		 -> dbuf(80), 
  3296 ;;  s1              2    5[COMRAM] PTR const void 
  3297 ;;		 -> dbuf(80), 
  3298 ;;  n               2    7[COMRAM] unsigned int 
  3299 ;; Auto vars:     Size  Location     Type
  3300 ;;  s               2   12[COMRAM] PTR const unsigned char 
  3301 ;;		 -> dbuf(80), 
  3302 ;;  d               2   10[COMRAM] PTR unsigned char 
  3303 ;;		 -> dbuf(80), 
  3304 ;;  tmp             1    9[COMRAM] unsigned char 
  3305 ;; Return value:  Size  Location     Type
  3306 ;;                  2    3[COMRAM] PTR void 
  3307 ;; Registers used:
  3308 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3309 ;; Tracked objects:
  3310 ;;		On entry : 0/0
  3311 ;;		On exit  : 0/0
  3312 ;;		Unchanged: 0/0
  3313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3314 ;;      Params:         6       0       0       0       0       0       0
  3315 ;;      Locals:         5       0       0       0       0       0       0
  3316 ;;      Temps:          0       0       0       0       0       0       0
  3317 ;;      Totals:        11       0       0       0       0       0       0
  3318 ;;Total ram usage:       11 bytes
  3319 ;; Hardware stack levels used: 1
  3320 ;; Hardware stack levels required when called: 2
  3321 ;; This function calls:
  3322 ;;		Nothing
  3323 ;; This function is called by:
  3324 ;;		_efgtoa
  3325 ;; This function uses a non-reentrant model
  3326 ;;
  3327                           
  3328                           	psect	text7
  3329   003484                     __ptext7:
  3330                           	callstack 0
  3331   003484                     _memcpy:
  3332                           	callstack 23
  3333   003484  C006  F00D         	movff	memcpy@s1,memcpy@s
  3334   003488  C007  F00E         	movff	memcpy@s1+1,memcpy@s+1
  3335   00348C  C004  F00B         	movff	memcpy@d1,memcpy@d
  3336   003490  C005  F00C         	movff	memcpy@d1+1,memcpy@d+1
  3337   003494  EF5C  F01A         	goto	l4909
  3338   003498                     l4901:
  3339   003498  C00D  FFD9         	movff	memcpy@s,fsr2l
  3340   00349C  C00E  FFDA         	movff	memcpy@s+1,fsr2h
  3341   0034A0  50DF               	movf	indf2,w,c
  3342   0034A2  6E0A               	movwf	memcpy@tmp^0,c
  3343   0034A4  4A0D               	infsnz	memcpy@s^0,f,c
  3344   0034A6  2A0E               	incf	(memcpy@s+1)^0,f,c
  3345   0034A8  C00B  FFD9         	movff	memcpy@d,fsr2l
  3346   0034AC  C00C  FFDA         	movff	memcpy@d+1,fsr2h
  3347   0034B0  C00A  FFDF         	movff	memcpy@tmp,indf2
  3348   0034B4  4A0B               	infsnz	memcpy@d^0,f,c
  3349   0034B6  2A0C               	incf	(memcpy@d+1)^0,f,c
  3350   0034B8                     l4909:
  3351   0034B8  0608               	decf	memcpy@n^0,f,c
  3352   0034BA  A0D8               	btfss	status,0,c
  3353   0034BC  0609               	decf	(memcpy@n+1)^0,f,c
  3354   0034BE  2808               	incf	memcpy@n^0,w,c
  3355   0034C0  E106               	bnz	u5961
  3356   0034C2  2809               	incf	(memcpy@n+1)^0,w,c
  3357   0034C4  A4D8               	btfss	status,2,c
  3358   0034C6  EF67  F01A         	goto	u5961
  3359   0034CA  EF69  F01A         	goto	u5960
  3360   0034CE                     u5961:
  3361   0034CE  EF4C  F01A         	goto	l4901
  3362   0034D2                     u5960:
  3363   0034D2  0012               	return		;funcret
  3364   0034D4                     __end_of_memcpy:
  3365                           	callstack 0
  3366                           
  3367 ;; *************** function _labs *****************
  3368 ;; Defined at:
  3369 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  3370 ;; Parameters:    Size  Location     Type
  3371 ;;  a               4    3[COMRAM] long 
  3372 ;; Auto vars:     Size  Location     Type
  3373 ;;		None
  3374 ;; Return value:  Size  Location     Type
  3375 ;;                  4    3[COMRAM] long 
  3376 ;; Registers used:
  3377 ;;		wreg, status,2, status,0
  3378 ;; Tracked objects:
  3379 ;;		On entry : 0/0
  3380 ;;		On exit  : 0/0
  3381 ;;		Unchanged: 0/0
  3382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3383 ;;      Params:         4       0       0       0       0       0       0
  3384 ;;      Locals:         0       0       0       0       0       0       0
  3385 ;;      Temps:          4       0       0       0       0       0       0
  3386 ;;      Totals:         8       0       0       0       0       0       0
  3387 ;;Total ram usage:        8 bytes
  3388 ;; Hardware stack levels used: 1
  3389 ;; Hardware stack levels required when called: 2
  3390 ;; This function calls:
  3391 ;;		Nothing
  3392 ;; This function is called by:
  3393 ;;		_efgtoa
  3394 ;; This function uses a non-reentrant model
  3395 ;;
  3396                           
  3397                           	psect	text8
  3398   003326                     __ptext8:
  3399                           	callstack 0
  3400   003326                     _labs:
  3401                           	callstack 23
  3402   003326  BE07               	btfsc	(labs@a+3)^0,7,c
  3403   003328  EFA2  F019         	goto	u5850
  3404   00332C  5007               	movf	(labs@a+3)^0,w,c
  3405   00332E  1006               	iorwf	(labs@a+2)^0,w,c
  3406   003330  1005               	iorwf	(labs@a+1)^0,w,c
  3407   003332  E106               	bnz	u5851
  3408   003334  0404               	decf	labs@a^0,w,c
  3409   003336  B0D8               	btfsc	status,0,c
  3410   003338  EFA0  F019         	goto	u5851
  3411   00333C  EFA2  F019         	goto	u5850
  3412   003340                     u5851:
  3413   003340  EFBD  F019         	goto	l1057
  3414   003344                     u5850:
  3415   003344  C004  F008         	movff	labs@a,??_labs
  3416   003348  C005  F009         	movff	labs@a+1,??_labs+1
  3417   00334C  C006  F00A         	movff	labs@a+2,??_labs+2
  3418   003350  C007  F00B         	movff	labs@a+3,??_labs+3
  3419   003354  1E08               	comf	??_labs^0,f,c
  3420   003356  1E09               	comf	(??_labs+1)^0,f,c
  3421   003358  1E0A               	comf	(??_labs+2)^0,f,c
  3422   00335A  1E0B               	comf	(??_labs+3)^0,f,c
  3423   00335C  2A08               	incf	??_labs^0,f,c
  3424   00335E  0E00               	movlw	0
  3425   003360  2209               	addwfc	(??_labs+1)^0,f,c
  3426   003362  220A               	addwfc	(??_labs+2)^0,f,c
  3427   003364  220B               	addwfc	(??_labs+3)^0,f,c
  3428   003366  C008  F004         	movff	??_labs,?_labs
  3429   00336A  C009  F005         	movff	??_labs+1,?_labs+1
  3430   00336E  C00A  F006         	movff	??_labs+2,?_labs+2
  3431   003372  C00B  F007         	movff	??_labs+3,?_labs+3
  3432   003376  EFC5  F019         	goto	l1060
  3433   00337A                     l1057:
  3434   00337A  C004  F004         	movff	labs@a,?_labs
  3435   00337E  C005  F005         	movff	labs@a+1,?_labs+1
  3436   003382  C006  F006         	movff	labs@a+2,?_labs+2
  3437   003386  C007  F007         	movff	labs@a+3,?_labs+3
  3438   00338A                     l1060:
  3439   00338A  0012               	return		;funcret
  3440   00338C                     __end_of_labs:
  3441                           	callstack 0
  3442                           
  3443 ;; *************** function _floorf *****************
  3444 ;; Defined at:
  3445 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  3446 ;; Parameters:    Size  Location     Type
  3447 ;;  x               4   28[COMRAM] float 
  3448 ;; Auto vars:     Size  Location     Type
  3449 ;;  u               4   44[COMRAM] struct .
  3450 ;;  m               4   38[COMRAM] unsigned long 
  3451 ;;  e               2   42[COMRAM] int 
  3452 ;; Return value:  Size  Location     Type
  3453 ;;                  4   28[COMRAM] float 
  3454 ;; Registers used:
  3455 ;;		wreg, status,2, status,0
  3456 ;; Tracked objects:
  3457 ;;		On entry : 0/0
  3458 ;;		On exit  : 0/0
  3459 ;;		Unchanged: 0/0
  3460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3461 ;;      Params:         4       0       0       0       0       0       0
  3462 ;;      Locals:        10       0       0       0       0       0       0
  3463 ;;      Temps:          6       0       0       0       0       0       0
  3464 ;;      Totals:        20       0       0       0       0       0       0
  3465 ;;Total ram usage:       20 bytes
  3466 ;; Hardware stack levels used: 1
  3467 ;; Hardware stack levels required when called: 2
  3468 ;; This function calls:
  3469 ;;		Nothing
  3470 ;; This function is called by:
  3471 ;;		_efgtoa
  3472 ;; This function uses a non-reentrant model
  3473 ;;
  3474                           
  3475                           	psect	text9
  3476   0024C6                     __ptext9:
  3477                           	callstack 0
  3478   0024C6                     _floorf:
  3479                           	callstack 23
  3480   0024C6  C088  F02D         	movff	floorf@F526,floorf@u
  3481   0024CA  C089  F02E         	movff	floorf@F526+1,floorf@u+1
  3482   0024CE  C08A  F02F         	movff	floorf@F526+2,floorf@u+2
  3483   0024D2  C08B  F030         	movff	floorf@F526+3,floorf@u+3
  3484   0024D6  C01D  F02D         	movff	floorf@x,floorf@u
  3485   0024DA  C01E  F02E         	movff	floorf@x+1,floorf@u+1
  3486   0024DE  C01F  F02F         	movff	floorf@x+2,floorf@u+2
  3487   0024E2  C020  F030         	movff	floorf@x+3,floorf@u+3
  3488   0024E6  0E81               	movlw	129
  3489   0024E8  6E21               	movwf	??_floorf^0,c
  3490   0024EA  0EFF               	movlw	255
  3491   0024EC  6E22               	movwf	(??_floorf+1)^0,c
  3492   0024EE  C02D  F023         	movff	floorf@u,??_floorf+2
  3493   0024F2  C02E  F024         	movff	floorf@u+1,??_floorf+3
  3494   0024F6  C02F  F025         	movff	floorf@u+2,??_floorf+4
  3495   0024FA  C030  F026         	movff	floorf@u+3,??_floorf+5
  3496   0024FE  0E18               	movlw	24
  3497   002500  EF87  F012         	goto	u5860
  3498   002504                     u5865:
  3499   002504  90D8               	bcf	status,0,c
  3500   002506  3226               	rrcf	(??_floorf+5)^0,f,c
  3501   002508  3225               	rrcf	(??_floorf+4)^0,f,c
  3502   00250A  3224               	rrcf	(??_floorf+3)^0,f,c
  3503   00250C  3223               	rrcf	(??_floorf+2)^0,f,c
  3504   00250E                     u5860:
  3505   00250E  2EE8               	decfsz	wreg,f,c
  3506   002510  EF82  F012         	goto	u5865
  3507   002514  5023               	movf	(??_floorf+2)^0,w,c
  3508   002516  2421               	addwf	??_floorf^0,w,c
  3509   002518  6E2B               	movwf	floorf@e^0,c
  3510   00251A  0E00               	movlw	0
  3511   00251C  2022               	addwfc	(??_floorf+1)^0,w,c
  3512   00251E  6E2C               	movwf	(floorf@e+1)^0,c
  3513   002520  BE2C               	btfsc	(floorf@e+1)^0,7,c
  3514   002522  EF9C  F012         	goto	u5871
  3515   002526  502C               	movf	(floorf@e+1)^0,w,c
  3516   002528  E109               	bnz	u5870
  3517   00252A  0E17               	movlw	23
  3518   00252C  5C2B               	subwf	floorf@e^0,w,c
  3519   00252E  A0D8               	btfss	status,0,c
  3520   002530  EF9C  F012         	goto	u5871
  3521   002534  EF9E  F012         	goto	u5870
  3522   002538                     u5871:
  3523   002538  EFA8  F012         	goto	l4877
  3524   00253C                     u5870:
  3525   00253C                     l4875:
  3526   00253C  C01D  F01D         	movff	floorf@x,?_floorf
  3527   002540  C01E  F01E         	movff	floorf@x+1,?_floorf+1
  3528   002544  C01F  F01F         	movff	floorf@x+2,?_floorf+2
  3529   002548  C020  F020         	movff	floorf@x+3,?_floorf+3
  3530   00254C  EF6B  F013         	goto	l1032
  3531   002550                     l4877:
  3532   002550  BE2C               	btfsc	(floorf@e+1)^0,7,c
  3533   002552  EFAD  F012         	goto	u5881
  3534   002556  EFAF  F012         	goto	u5880
  3535   00255A                     u5881:
  3536   00255A  EF1F  F013         	goto	l4887
  3537   00255E                     u5880:
  3538   00255E  C02B  F021         	movff	floorf@e,??_floorf
  3539   002562  0EFF               	movlw	255
  3540   002564  6E22               	movwf	(??_floorf+1)^0,c
  3541   002566  0EFF               	movlw	255
  3542   002568  6E23               	movwf	(??_floorf+2)^0,c
  3543   00256A  0E7F               	movlw	127
  3544   00256C  6E24               	movwf	(??_floorf+3)^0,c
  3545   00256E  0E00               	movlw	0
  3546   002570  6E25               	movwf	(??_floorf+4)^0,c
  3547   002572                     u5895:
  3548   002572  6621               	tstfsz	??_floorf^0,c
  3549   002574  EFBE  F012         	goto	u5896
  3550   002578  EFC6  F012         	goto	u5897
  3551   00257C                     u5896:
  3552   00257C  3425               	rlcf	(??_floorf+4)^0,w,c
  3553   00257E  3225               	rrcf	(??_floorf+4)^0,f,c
  3554   002580  3224               	rrcf	(??_floorf+3)^0,f,c
  3555   002582  3223               	rrcf	(??_floorf+2)^0,f,c
  3556   002584  3222               	rrcf	(??_floorf+1)^0,f,c
  3557   002586  2E21               	decfsz	??_floorf^0,f,c
  3558   002588  EFB9  F012         	goto	u5895
  3559   00258C                     u5897:
  3560   00258C  C022  F027         	movff	??_floorf+1,floorf@m
  3561   002590  C023  F028         	movff	??_floorf+2,floorf@m+1
  3562   002594  C024  F029         	movff	??_floorf+3,floorf@m+2
  3563   002598  C025  F02A         	movff	??_floorf+4,floorf@m+3
  3564   00259C  5027               	movf	floorf@m^0,w,c
  3565   00259E  142D               	andwf	floorf@u^0,w,c
  3566   0025A0  6E21               	movwf	??_floorf^0,c
  3567   0025A2  5028               	movf	(floorf@m+1)^0,w,c
  3568   0025A4  142E               	andwf	(floorf@u+1)^0,w,c
  3569   0025A6  6E22               	movwf	(??_floorf+1)^0,c
  3570   0025A8  5029               	movf	(floorf@m+2)^0,w,c
  3571   0025AA  142F               	andwf	(floorf@u+2)^0,w,c
  3572   0025AC  6E23               	movwf	(??_floorf+2)^0,c
  3573   0025AE  502A               	movf	(floorf@m+3)^0,w,c
  3574   0025B0  1430               	andwf	(floorf@u+3)^0,w,c
  3575   0025B2  6E24               	movwf	(??_floorf+3)^0,c
  3576   0025B4  5021               	movf	??_floorf^0,w,c
  3577   0025B6  1022               	iorwf	(??_floorf+1)^0,w,c
  3578   0025B8  1023               	iorwf	(??_floorf+2)^0,w,c
  3579   0025BA  1024               	iorwf	(??_floorf+3)^0,w,c
  3580   0025BC  A4D8               	btfss	status,2,c
  3581   0025BE  EFE3  F012         	goto	u5901
  3582   0025C2  EFE5  F012         	goto	u5900
  3583   0025C6                     u5901:
  3584   0025C6  EFE7  F012         	goto	l4883
  3585   0025CA                     u5900:
  3586   0025CA  EF9E  F012         	goto	l4875
  3587   0025CE                     l4883:
  3588   0025CE  C02D  F021         	movff	floorf@u,??_floorf
  3589   0025D2  C02E  F022         	movff	floorf@u+1,??_floorf+1
  3590   0025D6  C02F  F023         	movff	floorf@u+2,??_floorf+2
  3591   0025DA  C030  F024         	movff	floorf@u+3,??_floorf+3
  3592   0025DE  0E20               	movlw	32
  3593   0025E0  EFF7  F012         	goto	u5910
  3594   0025E4                     u5915:
  3595   0025E4  90D8               	bcf	status,0,c
  3596   0025E6  3224               	rrcf	(??_floorf+3)^0,f,c
  3597   0025E8  3223               	rrcf	(??_floorf+2)^0,f,c
  3598   0025EA  3222               	rrcf	(??_floorf+1)^0,f,c
  3599   0025EC  3221               	rrcf	??_floorf^0,f,c
  3600   0025EE                     u5910:
  3601   0025EE  2EE8               	decfsz	wreg,f,c
  3602   0025F0  EFF2  F012         	goto	u5915
  3603   0025F4  5021               	movf	??_floorf^0,w,c
  3604   0025F6  1022               	iorwf	(??_floorf+1)^0,w,c
  3605   0025F8  1023               	iorwf	(??_floorf+2)^0,w,c
  3606   0025FA  1024               	iorwf	(??_floorf+3)^0,w,c
  3607   0025FC  B4D8               	btfsc	status,2,c
  3608   0025FE  EF03  F013         	goto	u5921
  3609   002602  EF05  F013         	goto	u5920
  3610   002606                     u5921:
  3611   002606  EF0D  F013         	goto	l1035
  3612   00260A                     u5920:
  3613   00260A  5027               	movf	floorf@m^0,w,c
  3614   00260C  262D               	addwf	floorf@u^0,f,c
  3615   00260E  5028               	movf	(floorf@m+1)^0,w,c
  3616   002610  222E               	addwfc	(floorf@u+1)^0,f,c
  3617   002612  5029               	movf	(floorf@m+2)^0,w,c
  3618   002614  222F               	addwfc	(floorf@u+2)^0,f,c
  3619   002616  502A               	movf	(floorf@m+3)^0,w,c
  3620   002618  2230               	addwfc	(floorf@u+3)^0,f,c
  3621   00261A                     l1035:
  3622   00261A  1C27               	comf	floorf@m^0,w,c
  3623   00261C  6E21               	movwf	??_floorf^0,c
  3624   00261E  1C28               	comf	(floorf@m+1)^0,w,c
  3625   002620  6E22               	movwf	(??_floorf+1)^0,c
  3626   002622  1C29               	comf	(floorf@m+2)^0,w,c
  3627   002624  6E23               	movwf	(??_floorf+2)^0,c
  3628   002626  1C2A               	comf	(floorf@m+3)^0,w,c
  3629   002628  6E24               	movwf	(??_floorf+3)^0,c
  3630   00262A  5021               	movf	??_floorf^0,w,c
  3631   00262C  162D               	andwf	floorf@u^0,f,c
  3632   00262E  5022               	movf	(??_floorf+1)^0,w,c
  3633   002630  162E               	andwf	(floorf@u+1)^0,f,c
  3634   002632  5023               	movf	(??_floorf+2)^0,w,c
  3635   002634  162F               	andwf	(floorf@u+2)^0,f,c
  3636   002636  5024               	movf	(??_floorf+3)^0,w,c
  3637   002638  1630               	andwf	(floorf@u+3)^0,f,c
  3638   00263A  EF63  F013         	goto	l4895
  3639   00263E                     l4887:
  3640   00263E  C02D  F021         	movff	floorf@u,??_floorf
  3641   002642  C02E  F022         	movff	floorf@u+1,??_floorf+1
  3642   002646  C02F  F023         	movff	floorf@u+2,??_floorf+2
  3643   00264A  C030  F024         	movff	floorf@u+3,??_floorf+3
  3644   00264E  0E20               	movlw	32
  3645   002650  EF2F  F013         	goto	u5930
  3646   002654                     u5935:
  3647   002654  90D8               	bcf	status,0,c
  3648   002656  3224               	rrcf	(??_floorf+3)^0,f,c
  3649   002658  3223               	rrcf	(??_floorf+2)^0,f,c
  3650   00265A  3222               	rrcf	(??_floorf+1)^0,f,c
  3651   00265C  3221               	rrcf	??_floorf^0,f,c
  3652   00265E                     u5930:
  3653   00265E  2EE8               	decfsz	wreg,f,c
  3654   002660  EF2A  F013         	goto	u5935
  3655   002664  5021               	movf	??_floorf^0,w,c
  3656   002666  1022               	iorwf	(??_floorf+1)^0,w,c
  3657   002668  1023               	iorwf	(??_floorf+2)^0,w,c
  3658   00266A  1024               	iorwf	(??_floorf+3)^0,w,c
  3659   00266C  A4D8               	btfss	status,2,c
  3660   00266E  EF3B  F013         	goto	u5941
  3661   002672  EF3D  F013         	goto	u5940
  3662   002676                     u5941:
  3663   002676  EF47  F013         	goto	l4891
  3664   00267A                     u5940:
  3665   00267A  0E00               	movlw	0
  3666   00267C  6E2D               	movwf	floorf@u^0,c
  3667   00267E  0E00               	movlw	0
  3668   002680  6E2E               	movwf	(floorf@u+1)^0,c
  3669   002682  0E00               	movlw	0
  3670   002684  6E2F               	movwf	(floorf@u+2)^0,c
  3671   002686  0E00               	movlw	0
  3672   002688  6E30               	movwf	(floorf@u+3)^0,c
  3673   00268A  EF63  F013         	goto	l4895
  3674   00268E                     l4891:
  3675   00268E  90D8               	bcf	status,0,c
  3676   002690  342D               	rlcf	floorf@u^0,w,c
  3677   002692  6E21               	movwf	??_floorf^0,c
  3678   002694  342E               	rlcf	(floorf@u+1)^0,w,c
  3679   002696  6E22               	movwf	(??_floorf+1)^0,c
  3680   002698  342F               	rlcf	(floorf@u+2)^0,w,c
  3681   00269A  6E23               	movwf	(??_floorf+2)^0,c
  3682   00269C  3430               	rlcf	(floorf@u+3)^0,w,c
  3683   00269E  6E24               	movwf	(??_floorf+3)^0,c
  3684   0026A0  5021               	movf	??_floorf^0,w,c
  3685   0026A2  1022               	iorwf	(??_floorf+1)^0,w,c
  3686   0026A4  1023               	iorwf	(??_floorf+2)^0,w,c
  3687   0026A6  1024               	iorwf	(??_floorf+3)^0,w,c
  3688   0026A8  B4D8               	btfsc	status,2,c
  3689   0026AA  EF59  F013         	goto	u5951
  3690   0026AE  EF5B  F013         	goto	u5950
  3691   0026B2                     u5951:
  3692   0026B2  EF63  F013         	goto	l4895
  3693   0026B6                     u5950:
  3694   0026B6  0E00               	movlw	0
  3695   0026B8  6E2D               	movwf	floorf@u^0,c
  3696   0026BA  0E00               	movlw	0
  3697   0026BC  6E2E               	movwf	(floorf@u+1)^0,c
  3698   0026BE  0E80               	movlw	128
  3699   0026C0  6E2F               	movwf	(floorf@u+2)^0,c
  3700   0026C2  0EBF               	movlw	191
  3701   0026C4  6E30               	movwf	(floorf@u+3)^0,c
  3702   0026C6                     l4895:
  3703   0026C6  C02D  F01D         	movff	floorf@u,?_floorf
  3704   0026CA  C02E  F01E         	movff	floorf@u+1,?_floorf+1
  3705   0026CE  C02F  F01F         	movff	floorf@u+2,?_floorf+2
  3706   0026D2  C030  F020         	movff	floorf@u+3,?_floorf+3
  3707   0026D6                     l1032:
  3708   0026D6  0012               	return		;funcret
  3709   0026D8                     __end_of_floorf:
  3710                           	callstack 0
  3711                           
  3712 ;; *************** function ___fpclassifyf *****************
  3713 ;; Defined at:
  3714 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  3715 ;; Parameters:    Size  Location     Type
  3716 ;;  x               4    3[COMRAM] float 
  3717 ;; Auto vars:     Size  Location     Type
  3718 ;;  u               4   13[COMRAM] struct .
  3719 ;;  e               2   11[COMRAM] int 
  3720 ;; Return value:  Size  Location     Type
  3721 ;;                  2    3[COMRAM] int 
  3722 ;; Registers used:
  3723 ;;		wreg, status,2, status,0
  3724 ;; Tracked objects:
  3725 ;;		On entry : 0/0
  3726 ;;		On exit  : 0/0
  3727 ;;		Unchanged: 0/0
  3728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3729 ;;      Params:         4       0       0       0       0       0       0
  3730 ;;      Locals:         6       0       0       0       0       0       0
  3731 ;;      Temps:          4       0       0       0       0       0       0
  3732 ;;      Totals:        14       0       0       0       0       0       0
  3733 ;;Total ram usage:       14 bytes
  3734 ;; Hardware stack levels used: 1
  3735 ;; Hardware stack levels required when called: 2
  3736 ;; This function calls:
  3737 ;;		Nothing
  3738 ;; This function is called by:
  3739 ;;		_efgtoa
  3740 ;; This function uses a non-reentrant model
  3741 ;;
  3742                           
  3743                           	psect	text10
  3744   002ECC                     __ptext10:
  3745                           	callstack 0
  3746   002ECC                     ___fpclassifyf:
  3747                           	callstack 23
  3748   002ECC  C08C  F00E         	movff	___fpclassifyf@F465,___fpclassifyf@u
  3749   002ED0  C08D  F00F         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  3750   002ED4  C08E  F010         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  3751   002ED8  C08F  F011         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  3752   002EDC  C004  F00E         	movff	___fpclassifyf@x,___fpclassifyf@u
  3753   002EE0  C005  F00F         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  3754   002EE4  C006  F010         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  3755   002EE8  C007  F011         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  3756   002EEC  C00E  F008         	movff	___fpclassifyf@u,??___fpclassifyf
  3757   002EF0  C00F  F009         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  3758   002EF4  C010  F00A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  3759   002EF8  C011  F00B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  3760   002EFC  0E18               	movlw	24
  3761   002EFE  EF86  F017         	goto	u5770
  3762   002F02                     u5775:
  3763   002F02  90D8               	bcf	status,0,c
  3764   002F04  320B               	rrcf	(??___fpclassifyf+3)^0,f,c
  3765   002F06  320A               	rrcf	(??___fpclassifyf+2)^0,f,c
  3766   002F08  3209               	rrcf	(??___fpclassifyf+1)^0,f,c
  3767   002F0A  3208               	rrcf	??___fpclassifyf^0,f,c
  3768   002F0C                     u5770:
  3769   002F0C  2EE8               	decfsz	wreg,f,c
  3770   002F0E  EF81  F017         	goto	u5775
  3771   002F12  5008               	movf	??___fpclassifyf^0,w,c
  3772   002F14  6E0C               	movwf	___fpclassifyf@e^0,c
  3773   002F16  6A0D               	clrf	(___fpclassifyf@e+1)^0,c
  3774   002F18  500C               	movf	___fpclassifyf@e^0,w,c
  3775   002F1A  100D               	iorwf	(___fpclassifyf@e+1)^0,w,c
  3776   002F1C  A4D8               	btfss	status,2,c
  3777   002F1E  EF93  F017         	goto	u5781
  3778   002F22  EF95  F017         	goto	u5780
  3779   002F26                     u5781:
  3780   002F26  EFB5  F017         	goto	l4853
  3781   002F2A                     u5780:
  3782   002F2A  90D8               	bcf	status,0,c
  3783   002F2C  340E               	rlcf	___fpclassifyf@u^0,w,c
  3784   002F2E  6E08               	movwf	??___fpclassifyf^0,c
  3785   002F30  340F               	rlcf	(___fpclassifyf@u+1)^0,w,c
  3786   002F32  6E09               	movwf	(??___fpclassifyf+1)^0,c
  3787   002F34  3410               	rlcf	(___fpclassifyf@u+2)^0,w,c
  3788   002F36  6E0A               	movwf	(??___fpclassifyf+2)^0,c
  3789   002F38  3411               	rlcf	(___fpclassifyf@u+3)^0,w,c
  3790   002F3A  6E0B               	movwf	(??___fpclassifyf+3)^0,c
  3791   002F3C  5008               	movf	??___fpclassifyf^0,w,c
  3792   002F3E  1009               	iorwf	(??___fpclassifyf+1)^0,w,c
  3793   002F40  100A               	iorwf	(??___fpclassifyf+2)^0,w,c
  3794   002F42  100B               	iorwf	(??___fpclassifyf+3)^0,w,c
  3795   002F44  A4D8               	btfss	status,2,c
  3796   002F46  EFA7  F017         	goto	u5791
  3797   002F4A  EFA9  F017         	goto	u5790
  3798   002F4E                     u5791:
  3799   002F4E  EFAF  F017         	goto	l4849
  3800   002F52                     u5790:
  3801   002F52  0E00               	movlw	0
  3802   002F54  6E05               	movwf	(?___fpclassifyf+1)^0,c
  3803   002F56  0E02               	movlw	2
  3804   002F58  6E04               	movwf	?___fpclassifyf^0,c
  3805   002F5A  EFE4  F017         	goto	l993
  3806   002F5E                     l4849:
  3807   002F5E  0E00               	movlw	0
  3808   002F60  6E05               	movwf	(?___fpclassifyf+1)^0,c
  3809   002F62  0E03               	movlw	3
  3810   002F64  6E04               	movwf	?___fpclassifyf^0,c
  3811   002F66  EFE4  F017         	goto	l993
  3812   002F6A                     l4853:
  3813   002F6A  280C               	incf	___fpclassifyf@e^0,w,c
  3814   002F6C  100D               	iorwf	(___fpclassifyf@e+1)^0,w,c
  3815   002F6E  A4D8               	btfss	status,2,c
  3816   002F70  EFBC  F017         	goto	u5801
  3817   002F74  EFBE  F017         	goto	u5800
  3818   002F78                     u5801:
  3819   002F78  EFE0  F017         	goto	l4859
  3820   002F7C                     u5800:
  3821   002F7C  C00E  F008         	movff	___fpclassifyf@u,??___fpclassifyf
  3822   002F80  C00F  F009         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  3823   002F84  C010  F00A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  3824   002F88  C011  F00B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  3825   002F8C  0E09               	movlw	9
  3826   002F8E                     u5815:
  3827   002F8E  90D8               	bcf	status,0,c
  3828   002F90  3608               	rlcf	??___fpclassifyf^0,f,c
  3829   002F92  3609               	rlcf	(??___fpclassifyf+1)^0,f,c
  3830   002F94  360A               	rlcf	(??___fpclassifyf+2)^0,f,c
  3831   002F96  360B               	rlcf	(??___fpclassifyf+3)^0,f,c
  3832   002F98  2EE8               	decfsz	wreg,f,c
  3833   002F9A  EFC7  F017         	goto	u5815
  3834   002F9E  5008               	movf	??___fpclassifyf^0,w,c
  3835   002FA0  1009               	iorwf	(??___fpclassifyf+1)^0,w,c
  3836   002FA2  100A               	iorwf	(??___fpclassifyf+2)^0,w,c
  3837   002FA4  100B               	iorwf	(??___fpclassifyf+3)^0,w,c
  3838   002FA6  B4D8               	btfsc	status,2,c
  3839   002FA8  EFD8  F017         	goto	u5821
  3840   002FAC  EFDB  F017         	goto	u5820
  3841   002FB0                     u5821:
  3842   002FB0  0E01               	movlw	1
  3843   002FB2  EFDC  F017         	goto	u5830
  3844   002FB6                     u5820:
  3845   002FB6  0E00               	movlw	0
  3846   002FB8                     u5830:
  3847   002FB8  6E04               	movwf	?___fpclassifyf^0,c
  3848   002FBA  6A05               	clrf	(?___fpclassifyf+1)^0,c
  3849   002FBC  EFE4  F017         	goto	l993
  3850   002FC0                     l4859:
  3851   002FC0  0E00               	movlw	0
  3852   002FC2  6E05               	movwf	(?___fpclassifyf+1)^0,c
  3853   002FC4  0E04               	movlw	4
  3854   002FC6  6E04               	movwf	?___fpclassifyf^0,c
  3855   002FC8                     l993:
  3856   002FC8  0012               	return		;funcret
  3857   002FCA                     __end_of___fpclassifyf:
  3858                           	callstack 0
  3859                           
  3860 ;; *************** function ___fltol *****************
  3861 ;; Defined at:
  3862 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  3863 ;; Parameters:    Size  Location     Type
  3864 ;;  f1              4    3[COMRAM] int 
  3865 ;; Auto vars:     Size  Location     Type
  3866 ;;  exp1            1   12[COMRAM] unsigned char 
  3867 ;;  sign1           1   11[COMRAM] unsigned char 
  3868 ;; Return value:  Size  Location     Type
  3869 ;;                  4    3[COMRAM] long 
  3870 ;; Registers used:
  3871 ;;		wreg, status,2, status,0
  3872 ;; Tracked objects:
  3873 ;;		On entry : 0/0
  3874 ;;		On exit  : 0/0
  3875 ;;		Unchanged: 0/0
  3876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3877 ;;      Params:         4       0       0       0       0       0       0
  3878 ;;      Locals:         2       0       0       0       0       0       0
  3879 ;;      Temps:          4       0       0       0       0       0       0
  3880 ;;      Totals:        10       0       0       0       0       0       0
  3881 ;;Total ram usage:       10 bytes
  3882 ;; Hardware stack levels used: 1
  3883 ;; Hardware stack levels required when called: 2
  3884 ;; This function calls:
  3885 ;;		Nothing
  3886 ;; This function is called by:
  3887 ;;		_efgtoa
  3888 ;; This function uses a non-reentrant model
  3889 ;;
  3890                           
  3891                           	psect	text11
  3892   002CC2                     __ptext11:
  3893                           	callstack 0
  3894   002CC2                     ___fltol:
  3895                           	callstack 23
  3896   002CC2  3406               	rlcf	(___fltol@f1+2)^0,w,c
  3897   002CC4  3407               	rlcf	(___fltol@f1+3)^0,w,c
  3898   002CC6  6E0D               	movwf	___fltol@exp1^0,c
  3899   002CC8  500D               	movf	___fltol@exp1^0,w,c
  3900   002CCA  A4D8               	btfss	status,2,c
  3901   002CCC  EF6A  F016         	goto	u5651
  3902   002CD0  EF6C  F016         	goto	u5650
  3903   002CD4                     u5651:
  3904   002CD4  EF76  F016         	goto	l4781
  3905   002CD8                     u5650:
  3906   002CD8                     l4777:
  3907   002CD8  0E00               	movlw	0
  3908   002CDA  6E04               	movwf	?___fltol^0,c
  3909   002CDC  0E00               	movlw	0
  3910   002CDE  6E05               	movwf	(?___fltol+1)^0,c
  3911   002CE0  0E00               	movlw	0
  3912   002CE2  6E06               	movwf	(?___fltol+2)^0,c
  3913   002CE4  0E00               	movlw	0
  3914   002CE6  6E07               	movwf	(?___fltol+3)^0,c
  3915   002CE8  EFE3  F016         	goto	l428
  3916   002CEC                     l4781:
  3917   002CEC  C004  F008         	movff	___fltol@f1,??___fltol
  3918   002CF0  C005  F009         	movff	___fltol@f1+1,??___fltol+1
  3919   002CF4  C006  F00A         	movff	___fltol@f1+2,??___fltol+2
  3920   002CF8  C007  F00B         	movff	___fltol@f1+3,??___fltol+3
  3921   002CFC  0E20               	movlw	32
  3922   002CFE  EF86  F016         	goto	u5660
  3923   002D02                     u5665:
  3924   002D02  90D8               	bcf	status,0,c
  3925   002D04  320B               	rrcf	(??___fltol+3)^0,f,c
  3926   002D06  320A               	rrcf	(??___fltol+2)^0,f,c
  3927   002D08  3209               	rrcf	(??___fltol+1)^0,f,c
  3928   002D0A  3208               	rrcf	??___fltol^0,f,c
  3929   002D0C                     u5660:
  3930   002D0C  2EE8               	decfsz	wreg,f,c
  3931   002D0E  EF81  F016         	goto	u5665
  3932   002D12  5008               	movf	??___fltol^0,w,c
  3933   002D14  6E0C               	movwf	___fltol@sign1^0,c
  3934   002D16  8E06               	bsf	(___fltol@f1+2)^0,7,c
  3935   002D18  0EFF               	movlw	255
  3936   002D1A  1604               	andwf	___fltol@f1^0,f,c
  3937   002D1C  0EFF               	movlw	255
  3938   002D1E  1605               	andwf	(___fltol@f1+1)^0,f,c
  3939   002D20  0EFF               	movlw	255
  3940   002D22  1606               	andwf	(___fltol@f1+2)^0,f,c
  3941   002D24  0E00               	movlw	0
  3942   002D26  1607               	andwf	(___fltol@f1+3)^0,f,c
  3943   002D28  0E96               	movlw	150
  3944   002D2A  5E0D               	subwf	___fltol@exp1^0,f,c
  3945   002D2C  BE0D               	btfsc	___fltol@exp1^0,7,c
  3946   002D2E  EF9D  F016         	goto	u5670
  3947   002D32  EF9B  F016         	goto	u5671
  3948   002D36                     u5671:
  3949   002D36  EFB3  F016         	goto	l4801
  3950   002D3A                     u5670:
  3951   002D3A  500D               	movf	___fltol@exp1^0,w,c
  3952   002D3C  0A80               	xorlw	128
  3953   002D3E  0F97               	addlw	151
  3954   002D40  B0D8               	btfsc	status,0,c
  3955   002D42  EFA5  F016         	goto	u5681
  3956   002D46  EFA7  F016         	goto	u5680
  3957   002D4A                     u5681:
  3958   002D4A  EFA9  F016         	goto	l4797
  3959   002D4E                     u5680:
  3960   002D4E  EF6C  F016         	goto	l4777
  3961   002D52                     l4797:
  3962   002D52  90D8               	bcf	status,0,c
  3963   002D54  3207               	rrcf	(___fltol@f1+3)^0,f,c
  3964   002D56  3206               	rrcf	(___fltol@f1+2)^0,f,c
  3965   002D58  3205               	rrcf	(___fltol@f1+1)^0,f,c
  3966   002D5A  3204               	rrcf	___fltol@f1^0,f,c
  3967   002D5C  3E0D               	incfsz	___fltol@exp1^0,f,c
  3968   002D5E  EFA9  F016         	goto	l4797
  3969   002D62  EFCB  F016         	goto	l4811
  3970   002D66                     l4801:
  3971   002D66  0E1F               	movlw	31
  3972   002D68  640D               	cpfsgt	___fltol@exp1^0,c
  3973   002D6A  EFB9  F016         	goto	u5691
  3974   002D6E  EFBB  F016         	goto	u5690
  3975   002D72                     u5691:
  3976   002D72  EFC3  F016         	goto	l4809
  3977   002D76                     u5690:
  3978   002D76  EF6C  F016         	goto	l4777
  3979   002D7A                     l4807:
  3980   002D7A  90D8               	bcf	status,0,c
  3981   002D7C  3604               	rlcf	___fltol@f1^0,f,c
  3982   002D7E  3605               	rlcf	(___fltol@f1+1)^0,f,c
  3983   002D80  3606               	rlcf	(___fltol@f1+2)^0,f,c
  3984   002D82  3607               	rlcf	(___fltol@f1+3)^0,f,c
  3985   002D84  060D               	decf	___fltol@exp1^0,f,c
  3986   002D86                     l4809:
  3987   002D86  500D               	movf	___fltol@exp1^0,w,c
  3988   002D88  A4D8               	btfss	status,2,c
  3989   002D8A  EFC9  F016         	goto	u5701
  3990   002D8E  EFCB  F016         	goto	u5700
  3991   002D92                     u5701:
  3992   002D92  EFBD  F016         	goto	l4807
  3993   002D96                     u5700:
  3994   002D96                     l4811:
  3995   002D96  500C               	movf	___fltol@sign1^0,w,c
  3996   002D98  B4D8               	btfsc	status,2,c
  3997   002D9A  EFD1  F016         	goto	u5711
  3998   002D9E  EFD3  F016         	goto	u5710
  3999   002DA2                     u5711:
  4000   002DA2  EFDB  F016         	goto	l4815
  4001   002DA6                     u5710:
  4002   002DA6  1E07               	comf	(___fltol@f1+3)^0,f,c
  4003   002DA8  1E06               	comf	(___fltol@f1+2)^0,f,c
  4004   002DAA  1E05               	comf	(___fltol@f1+1)^0,f,c
  4005   002DAC  6C04               	negf	___fltol@f1^0,c
  4006   002DAE  0E00               	movlw	0
  4007   002DB0  2205               	addwfc	(___fltol@f1+1)^0,f,c
  4008   002DB2  2206               	addwfc	(___fltol@f1+2)^0,f,c
  4009   002DB4  2207               	addwfc	(___fltol@f1+3)^0,f,c
  4010   002DB6                     l4815:
  4011   002DB6  C004  F004         	movff	___fltol@f1,?___fltol
  4012   002DBA  C005  F005         	movff	___fltol@f1+1,?___fltol+1
  4013   002DBE  C006  F006         	movff	___fltol@f1+2,?___fltol+2
  4014   002DC2  C007  F007         	movff	___fltol@f1+3,?___fltol+3
  4015   002DC6                     l428:
  4016   002DC6  0012               	return		;funcret
  4017   002DC8                     __end_of___fltol:
  4018                           	callstack 0
  4019                           
  4020 ;; *************** function ___flsub *****************
  4021 ;; Defined at:
  4022 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  4023 ;; Parameters:    Size  Location     Type
  4024 ;;  b               4   42[COMRAM] long 
  4025 ;;  a               4   46[COMRAM] long 
  4026 ;; Auto vars:     Size  Location     Type
  4027 ;;		None
  4028 ;; Return value:  Size  Location     Type
  4029 ;;                  4   42[COMRAM] long 
  4030 ;; Registers used:
  4031 ;;		wreg, status,2, status,0, cstack
  4032 ;; Tracked objects:
  4033 ;;		On entry : 0/0
  4034 ;;		On exit  : 0/0
  4035 ;;		Unchanged: 0/0
  4036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4037 ;;      Params:         8       0       0       0       0       0       0
  4038 ;;      Locals:         0       0       0       0       0       0       0
  4039 ;;      Temps:          0       0       0       0       0       0       0
  4040 ;;      Totals:         8       0       0       0       0       0       0
  4041 ;;Total ram usage:        8 bytes
  4042 ;; Hardware stack levels used: 1
  4043 ;; Hardware stack levels required when called: 3
  4044 ;; This function calls:
  4045 ;;		___fladd
  4046 ;; This function is called by:
  4047 ;;		_efgtoa
  4048 ;; This function uses a non-reentrant model
  4049 ;;
  4050                           
  4051                           	psect	text12
  4052   0034D4                     __ptext12:
  4053                           	callstack 0
  4054   0034D4                     ___flsub:
  4055                           	callstack 22
  4056   0034D4  0E00               	movlw	0
  4057   0034D6  1A2F               	xorwf	___flsub@a^0,f,c
  4058   0034D8  0E00               	movlw	0
  4059   0034DA  1A30               	xorwf	(___flsub@a+1)^0,f,c
  4060   0034DC  0E00               	movlw	0
  4061   0034DE  1A31               	xorwf	(___flsub@a+2)^0,f,c
  4062   0034E0  0E80               	movlw	128
  4063   0034E2  1A32               	xorwf	(___flsub@a+3)^0,f,c
  4064   0034E4  C02B  F004         	movff	___flsub@b,___fladd@b
  4065   0034E8  C02C  F005         	movff	___flsub@b+1,___fladd@b+1
  4066   0034EC  C02D  F006         	movff	___flsub@b+2,___fladd@b+2
  4067   0034F0  C02E  F007         	movff	___flsub@b+3,___fladd@b+3
  4068   0034F4  C02F  F008         	movff	___flsub@a,___fladd@a
  4069   0034F8  C030  F009         	movff	___flsub@a+1,___fladd@a+1
  4070   0034FC  C031  F00A         	movff	___flsub@a+2,___fladd@a+2
  4071   003500  C032  F00B         	movff	___flsub@a+3,___fladd@a+3
  4072   003504  ECC7  F00A         	call	___fladd	;wreg free
  4073   003508  C004  F02B         	movff	?___fladd,?___flsub
  4074   00350C  C005  F02C         	movff	?___fladd+1,?___flsub+1
  4075   003510  C006  F02D         	movff	?___fladd+2,?___flsub+2
  4076   003514  C007  F02E         	movff	?___fladd+3,?___flsub+3
  4077   003518  0012               	return		;funcret
  4078   00351A                     __end_of___flsub:
  4079                           	callstack 0
  4080                           
  4081 ;; *************** function ___fladd *****************
  4082 ;; Defined at:
  4083 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  4084 ;; Parameters:    Size  Location     Type
  4085 ;;  b               4    3[COMRAM] long 
  4086 ;;  a               4    7[COMRAM] long 
  4087 ;; Auto vars:     Size  Location     Type
  4088 ;;  grs             1   18[COMRAM] unsigned char 
  4089 ;;  bexp            1   17[COMRAM] unsigned char 
  4090 ;;  aexp            1   16[COMRAM] unsigned char 
  4091 ;;  signs           1   15[COMRAM] unsigned char 
  4092 ;; Return value:  Size  Location     Type
  4093 ;;                  4    3[COMRAM] unsigned char 
  4094 ;; Registers used:
  4095 ;;		wreg, status,2, status,0
  4096 ;; Tracked objects:
  4097 ;;		On entry : 0/0
  4098 ;;		On exit  : 0/0
  4099 ;;		Unchanged: 0/0
  4100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4101 ;;      Params:         8       0       0       0       0       0       0
  4102 ;;      Locals:         4       0       0       0       0       0       0
  4103 ;;      Temps:          4       0       0       0       0       0       0
  4104 ;;      Totals:        16       0       0       0       0       0       0
  4105 ;;Total ram usage:       16 bytes
  4106 ;; Hardware stack levels used: 1
  4107 ;; Hardware stack levels required when called: 2
  4108 ;; This function calls:
  4109 ;;		Nothing
  4110 ;; This function is called by:
  4111 ;;		___flsub
  4112 ;;		_efgtoa
  4113 ;; This function uses a non-reentrant model
  4114 ;;
  4115                           
  4116                           	psect	text13
  4117   00158E                     __ptext13:
  4118                           	callstack 0
  4119   00158E                     ___fladd:
  4120                           	callstack 22
  4121   00158E  5007               	movf	(___fladd@b+3)^0,w,c
  4122   001590  0B80               	andlw	128
  4123   001592  6E10               	movwf	___fladd@signs^0,c
  4124   001594  5007               	movf	(___fladd@b+3)^0,w,c
  4125   001596  2407               	addwf	(___fladd@b+3)^0,w,c
  4126   001598  6E12               	movwf	___fladd@bexp^0,c
  4127   00159A  AE06               	btfss	(___fladd@b+2)^0,7,c
  4128   00159C  EFD2  F00A         	goto	u4611
  4129   0015A0  EFD4  F00A         	goto	u4610
  4130   0015A4                     u4611:
  4131   0015A4  EFD5  F00A         	goto	l4165
  4132   0015A8                     u4610:
  4133   0015A8  8012               	bsf	___fladd@bexp^0,0,c
  4134   0015AA                     l4165:
  4135   0015AA  5012               	movf	___fladd@bexp^0,w,c
  4136   0015AC  B4D8               	btfsc	status,2,c
  4137   0015AE  EFDB  F00A         	goto	u4621
  4138   0015B2  EFDD  F00A         	goto	u4620
  4139   0015B6                     u4621:
  4140   0015B6  EFF2  F00A         	goto	l4175
  4141   0015BA                     u4620:
  4142   0015BA  2812               	incf	___fladd@bexp^0,w,c
  4143   0015BC  A4D8               	btfss	status,2,c
  4144   0015BE  EFE3  F00A         	goto	u4631
  4145   0015C2  EFE5  F00A         	goto	u4630
  4146   0015C6                     u4631:
  4147   0015C6  EFED  F00A         	goto	l4171
  4148   0015CA                     u4630:
  4149   0015CA  0E00               	movlw	0
  4150   0015CC  6E04               	movwf	___fladd@b^0,c
  4151   0015CE  0E00               	movlw	0
  4152   0015D0  6E05               	movwf	(___fladd@b+1)^0,c
  4153   0015D2  0E00               	movlw	0
  4154   0015D4  6E06               	movwf	(___fladd@b+2)^0,c
  4155   0015D6  0E00               	movlw	0
  4156   0015D8  6E07               	movwf	(___fladd@b+3)^0,c
  4157   0015DA                     l4171:
  4158   0015DA  8E06               	bsf	(___fladd@b+2)^0,7,c
  4159   0015DC  0E00               	movlw	0
  4160   0015DE  6E07               	movwf	(___fladd@b+3)^0,c
  4161   0015E0  EFFA  F00A         	goto	l4177
  4162   0015E4                     l4175:
  4163   0015E4  0E00               	movlw	0
  4164   0015E6  6E04               	movwf	___fladd@b^0,c
  4165   0015E8  0E00               	movlw	0
  4166   0015EA  6E05               	movwf	(___fladd@b+1)^0,c
  4167   0015EC  0E00               	movlw	0
  4168   0015EE  6E06               	movwf	(___fladd@b+2)^0,c
  4169   0015F0  0E00               	movlw	0
  4170   0015F2  6E07               	movwf	(___fladd@b+3)^0,c
  4171   0015F4                     l4177:
  4172   0015F4  500B               	movf	(___fladd@a+3)^0,w,c
  4173   0015F6  0B80               	andlw	128
  4174   0015F8  6E11               	movwf	___fladd@aexp^0,c
  4175   0015FA  5010               	movf	___fladd@signs^0,w,c
  4176   0015FC  1811               	xorwf	___fladd@aexp^0,w,c
  4177   0015FE  B4D8               	btfsc	status,2,c
  4178   001600  EF04  F00B         	goto	u4641
  4179   001604  EF06  F00B         	goto	u4640
  4180   001608                     u4641:
  4181   001608  EF07  F00B         	goto	l4183
  4182   00160C                     u4640:
  4183   00160C  8C10               	bsf	___fladd@signs^0,6,c
  4184   00160E                     l4183:
  4185   00160E  500B               	movf	(___fladd@a+3)^0,w,c
  4186   001610  240B               	addwf	(___fladd@a+3)^0,w,c
  4187   001612  6E11               	movwf	___fladd@aexp^0,c
  4188   001614  AE0A               	btfss	(___fladd@a+2)^0,7,c
  4189   001616  EF0F  F00B         	goto	u4651
  4190   00161A  EF11  F00B         	goto	u4650
  4191   00161E                     u4651:
  4192   00161E  EF12  F00B         	goto	l4189
  4193   001622                     u4650:
  4194   001622  8011               	bsf	___fladd@aexp^0,0,c
  4195   001624                     l4189:
  4196   001624  5011               	movf	___fladd@aexp^0,w,c
  4197   001626  B4D8               	btfsc	status,2,c
  4198   001628  EF18  F00B         	goto	u4661
  4199   00162C  EF1A  F00B         	goto	u4660
  4200   001630                     u4661:
  4201   001630  EF2F  F00B         	goto	l4199
  4202   001634                     u4660:
  4203   001634  2811               	incf	___fladd@aexp^0,w,c
  4204   001636  A4D8               	btfss	status,2,c
  4205   001638  EF20  F00B         	goto	u4671
  4206   00163C  EF22  F00B         	goto	u4670
  4207   001640                     u4671:
  4208   001640  EF2A  F00B         	goto	l4195
  4209   001644                     u4670:
  4210   001644  0E00               	movlw	0
  4211   001646  6E08               	movwf	___fladd@a^0,c
  4212   001648  0E00               	movlw	0
  4213   00164A  6E09               	movwf	(___fladd@a+1)^0,c
  4214   00164C  0E00               	movlw	0
  4215   00164E  6E0A               	movwf	(___fladd@a+2)^0,c
  4216   001650  0E00               	movlw	0
  4217   001652  6E0B               	movwf	(___fladd@a+3)^0,c
  4218   001654                     l4195:
  4219   001654  8E0A               	bsf	(___fladd@a+2)^0,7,c
  4220   001656  0E00               	movlw	0
  4221   001658  6E0B               	movwf	(___fladd@a+3)^0,c
  4222   00165A  EF37  F00B         	goto	l4201
  4223   00165E                     l4199:
  4224   00165E  0E00               	movlw	0
  4225   001660  6E08               	movwf	___fladd@a^0,c
  4226   001662  0E00               	movlw	0
  4227   001664  6E09               	movwf	(___fladd@a+1)^0,c
  4228   001666  0E00               	movlw	0
  4229   001668  6E0A               	movwf	(___fladd@a+2)^0,c
  4230   00166A  0E00               	movlw	0
  4231   00166C  6E0B               	movwf	(___fladd@a+3)^0,c
  4232   00166E                     l4201:
  4233   00166E  5012               	movf	___fladd@bexp^0,w,c
  4234   001670  5C11               	subwf	___fladd@aexp^0,w,c
  4235   001672  B0D8               	btfsc	status,0,c
  4236   001674  EF3E  F00B         	goto	u4681
  4237   001678  EF40  F00B         	goto	u4680
  4238   00167C                     u4681:
  4239   00167C  EF67  F00B         	goto	l4237
  4240   001680                     u4680:
  4241   001680  AC10               	btfss	___fladd@signs^0,6,c
  4242   001682  EF45  F00B         	goto	u4691
  4243   001686  EF47  F00B         	goto	u4690
  4244   00168A                     u4691:
  4245   00168A  EF49  F00B         	goto	l4207
  4246   00168E                     u4690:
  4247   00168E  0E80               	movlw	128
  4248   001690  1A10               	xorwf	___fladd@signs^0,f,c
  4249   001692                     l4207:
  4250   001692  C012  F013         	movff	___fladd@bexp,___fladd@grs
  4251   001696  C011  F012         	movff	___fladd@aexp,___fladd@bexp
  4252   00169A  C013  F011         	movff	___fladd@grs,___fladd@aexp
  4253   00169E  C004  F013         	movff	___fladd@b,___fladd@grs
  4254   0016A2  C008  F004         	movff	___fladd@a,___fladd@b
  4255   0016A6  C013  F008         	movff	___fladd@grs,___fladd@a
  4256   0016AA  C005  F013         	movff	___fladd@b+1,___fladd@grs
  4257   0016AE  C009  F005         	movff	___fladd@a+1,___fladd@b+1
  4258   0016B2  C013  F009         	movff	___fladd@grs,___fladd@a+1
  4259   0016B6  C006  F013         	movff	___fladd@b+2,___fladd@grs
  4260   0016BA  C00A  F006         	movff	___fladd@a+2,___fladd@b+2
  4261   0016BE  C013  F00A         	movff	___fladd@grs,___fladd@a+2
  4262   0016C2  C007  F013         	movff	___fladd@b+3,___fladd@grs
  4263   0016C6  C00B  F007         	movff	___fladd@a+3,___fladd@b+3
  4264   0016CA  C013  F00B         	movff	___fladd@grs,___fladd@a+3
  4265   0016CE                     l4237:
  4266   0016CE  0E00               	movlw	0
  4267   0016D0  6E13               	movwf	___fladd@grs^0,c
  4268   0016D2  5012               	movf	___fladd@bexp^0,w,c
  4269   0016D4  C011  F00C         	movff	___fladd@aexp,??___fladd
  4270   0016D8  6A0D               	clrf	(??___fladd+1)^0,c
  4271   0016DA  5E0C               	subwf	??___fladd^0,f,c
  4272   0016DC  0E00               	movlw	0
  4273   0016DE  5A0D               	subwfb	(??___fladd+1)^0,f,c
  4274   0016E0  BE0D               	btfsc	(??___fladd+1)^0,7,c
  4275   0016E2  EF7C  F00B         	goto	u4701
  4276   0016E6  500D               	movf	(??___fladd+1)^0,w,c
  4277   0016E8  E109               	bnz	u4700
  4278   0016EA  0E1A               	movlw	26
  4279   0016EC  5C0C               	subwf	??___fladd^0,w,c
  4280   0016EE  A0D8               	btfss	status,0,c
  4281   0016F0  EF7C  F00B         	goto	u4701
  4282   0016F4  EF7E  F00B         	goto	u4700
  4283   0016F8                     u4701:
  4284   0016F8  EFB5  F00B         	goto	l660
  4285   0016FC                     u4700:
  4286   0016FC  5004               	movf	___fladd@b^0,w,c
  4287   0016FE  1005               	iorwf	(___fladd@b+1)^0,w,c
  4288   001700  1006               	iorwf	(___fladd@b+2)^0,w,c
  4289   001702  1007               	iorwf	(___fladd@b+3)^0,w,c
  4290   001704  A4D8               	btfss	status,2,c
  4291   001706  EF87  F00B         	goto	u4711
  4292   00170A  EF8A  F00B         	goto	u4710
  4293   00170E                     u4711:
  4294   00170E  0E01               	movlw	1
  4295   001710  EF8B  F00B         	goto	u4720
  4296   001714                     u4710:
  4297   001714  0E00               	movlw	0
  4298   001716                     u4720:
  4299   001716  6E13               	movwf	___fladd@grs^0,c
  4300   001718  0E00               	movlw	0
  4301   00171A  6E04               	movwf	___fladd@b^0,c
  4302   00171C  0E00               	movlw	0
  4303   00171E  6E05               	movwf	(___fladd@b+1)^0,c
  4304   001720  0E00               	movlw	0
  4305   001722  6E06               	movwf	(___fladd@b+2)^0,c
  4306   001724  0E00               	movlw	0
  4307   001726  6E07               	movwf	(___fladd@b+3)^0,c
  4308   001728  C011  F012         	movff	___fladd@aexp,___fladd@bexp
  4309   00172C  EFBE  F00B         	goto	l659
  4310   001730                     l661:
  4311   001730  A013               	btfss	___fladd@grs^0,0,c
  4312   001732  EF9D  F00B         	goto	u4731
  4313   001736  EF9F  F00B         	goto	u4730
  4314   00173A                     u4731:
  4315   00173A  EFA5  F00B         	goto	l4249
  4316   00173E                     u4730:
  4317   00173E  90D8               	bcf	status,0,c
  4318   001740  3013               	rrcf	___fladd@grs^0,w,c
  4319   001742  0901               	iorlw	1
  4320   001744  6E13               	movwf	___fladd@grs^0,c
  4321   001746  EFA7  F00B         	goto	l4251
  4322   00174A                     l4249:
  4323   00174A  90D8               	bcf	status,0,c
  4324   00174C  3213               	rrcf	___fladd@grs^0,f,c
  4325   00174E                     l4251:
  4326   00174E  A004               	btfss	___fladd@b^0,0,c
  4327   001750  EFAC  F00B         	goto	u4741
  4328   001754  EFAE  F00B         	goto	u4740
  4329   001758                     u4741:
  4330   001758  EFAF  F00B         	goto	l4255
  4331   00175C                     u4740:
  4332   00175C  8E13               	bsf	___fladd@grs^0,7,c
  4333   00175E                     l4255:
  4334   00175E  3407               	rlcf	(___fladd@b+3)^0,w,c
  4335   001760  3207               	rrcf	(___fladd@b+3)^0,f,c
  4336   001762  3206               	rrcf	(___fladd@b+2)^0,f,c
  4337   001764  3205               	rrcf	(___fladd@b+1)^0,f,c
  4338   001766  3204               	rrcf	___fladd@b^0,f,c
  4339   001768  2A12               	incf	___fladd@bexp^0,f,c
  4340   00176A                     l660:
  4341   00176A  5011               	movf	___fladd@aexp^0,w,c
  4342   00176C  5C12               	subwf	___fladd@bexp^0,w,c
  4343   00176E  A0D8               	btfss	status,0,c
  4344   001770  EFBC  F00B         	goto	u4751
  4345   001774  EFBE  F00B         	goto	u4750
  4346   001778                     u4751:
  4347   001778  EF98  F00B         	goto	l661
  4348   00177C                     u4750:
  4349   00177C                     l659:
  4350   00177C  BC10               	btfsc	___fladd@signs^0,6,c
  4351   00177E  EFC3  F00B         	goto	u4761
  4352   001782  EFC5  F00B         	goto	u4760
  4353   001786                     u4761:
  4354   001786  EF05  F00C         	goto	l4283
  4355   00178A                     u4760:
  4356   00178A  5012               	movf	___fladd@bexp^0,w,c
  4357   00178C  A4D8               	btfss	status,2,c
  4358   00178E  EFCB  F00B         	goto	u4771
  4359   001792  EFCD  F00B         	goto	u4770
  4360   001796                     u4771:
  4361   001796  EFD7  F00B         	goto	l4265
  4362   00179A                     u4770:
  4363   00179A  0E00               	movlw	0
  4364   00179C  6E04               	movwf	?___fladd^0,c
  4365   00179E  0E00               	movlw	0
  4366   0017A0  6E05               	movwf	(?___fladd+1)^0,c
  4367   0017A2  0E00               	movlw	0
  4368   0017A4  6E06               	movwf	(?___fladd+2)^0,c
  4369   0017A6  0E00               	movlw	0
  4370   0017A8  6E07               	movwf	(?___fladd+3)^0,c
  4371   0017AA  EF26  F00D         	goto	l668
  4372   0017AE                     l4265:
  4373   0017AE  5008               	movf	___fladd@a^0,w,c
  4374   0017B0  2604               	addwf	___fladd@b^0,f,c
  4375   0017B2  5009               	movf	(___fladd@a+1)^0,w,c
  4376   0017B4  2205               	addwfc	(___fladd@b+1)^0,f,c
  4377   0017B6  500A               	movf	(___fladd@a+2)^0,w,c
  4378   0017B8  2206               	addwfc	(___fladd@b+2)^0,f,c
  4379   0017BA  500B               	movf	(___fladd@a+3)^0,w,c
  4380   0017BC  2207               	addwfc	(___fladd@b+3)^0,f,c
  4381   0017BE  A007               	btfss	(___fladd@b+3)^0,0,c
  4382   0017C0  EFE4  F00B         	goto	u4781
  4383   0017C4  EFE6  F00B         	goto	u4780
  4384   0017C8                     u4781:
  4385   0017C8  EF92  F00C         	goto	l4319
  4386   0017CC                     u4780:
  4387   0017CC  A013               	btfss	___fladd@grs^0,0,c
  4388   0017CE  EFEB  F00B         	goto	u4791
  4389   0017D2  EFED  F00B         	goto	u4790
  4390   0017D6                     u4791:
  4391   0017D6  EFF3  F00B         	goto	l4273
  4392   0017DA                     u4790:
  4393   0017DA  90D8               	bcf	status,0,c
  4394   0017DC  3013               	rrcf	___fladd@grs^0,w,c
  4395   0017DE  0901               	iorlw	1
  4396   0017E0  6E13               	movwf	___fladd@grs^0,c
  4397   0017E2  EFF5  F00B         	goto	l4275
  4398   0017E6                     l4273:
  4399   0017E6  90D8               	bcf	status,0,c
  4400   0017E8  3213               	rrcf	___fladd@grs^0,f,c
  4401   0017EA                     l4275:
  4402   0017EA  A004               	btfss	___fladd@b^0,0,c
  4403   0017EC  EFFA  F00B         	goto	u4801
  4404   0017F0  EFFC  F00B         	goto	u4800
  4405   0017F4                     u4801:
  4406   0017F4  EFFD  F00B         	goto	l4279
  4407   0017F8                     u4800:
  4408   0017F8  8E13               	bsf	___fladd@grs^0,7,c
  4409   0017FA                     l4279:
  4410   0017FA  3407               	rlcf	(___fladd@b+3)^0,w,c
  4411   0017FC  3207               	rrcf	(___fladd@b+3)^0,f,c
  4412   0017FE  3206               	rrcf	(___fladd@b+2)^0,f,c
  4413   001800  3205               	rrcf	(___fladd@b+1)^0,f,c
  4414   001802  3204               	rrcf	___fladd@b^0,f,c
  4415   001804  2A12               	incf	___fladd@bexp^0,f,c
  4416   001806  EF92  F00C         	goto	l4319
  4417   00180A                     l4283:
  4418   00180A  5008               	movf	___fladd@a^0,w,c
  4419   00180C  5C04               	subwf	___fladd@b^0,w,c
  4420   00180E  5009               	movf	(___fladd@a+1)^0,w,c
  4421   001810  5805               	subwfb	(___fladd@b+1)^0,w,c
  4422   001812  500A               	movf	(___fladd@a+2)^0,w,c
  4423   001814  5806               	subwfb	(___fladd@b+2)^0,w,c
  4424   001816  5007               	movf	(___fladd@b+3)^0,w,c
  4425   001818  0A80               	xorlw	128
  4426   00181A  6E0C               	movwf	??___fladd^0,c
  4427   00181C  500B               	movf	(___fladd@a+3)^0,w,c
  4428   00181E  0A80               	xorlw	128
  4429   001820  580C               	subwfb	??___fladd^0,w,c
  4430   001822  B0D8               	btfsc	status,0,c
  4431   001824  EF16  F00C         	goto	u4811
  4432   001828  EF18  F00C         	goto	u4810
  4433   00182C                     u4811:
  4434   00182C  EF43  F00C         	goto	l4293
  4435   001830                     u4810:
  4436   001830  5004               	movf	___fladd@b^0,w,c
  4437   001832  5C08               	subwf	___fladd@a^0,w,c
  4438   001834  6E0C               	movwf	??___fladd^0,c
  4439   001836  5005               	movf	(___fladd@b+1)^0,w,c
  4440   001838  5809               	subwfb	(___fladd@a+1)^0,w,c
  4441   00183A  6E0D               	movwf	(??___fladd+1)^0,c
  4442   00183C  5006               	movf	(___fladd@b+2)^0,w,c
  4443   00183E  580A               	subwfb	(___fladd@a+2)^0,w,c
  4444   001840  6E0E               	movwf	(??___fladd+2)^0,c
  4445   001842  5007               	movf	(___fladd@b+3)^0,w,c
  4446   001844  580B               	subwfb	(___fladd@a+3)^0,w,c
  4447   001846  6E0F               	movwf	(??___fladd+3)^0,c
  4448   001848  0EFF               	movlw	255
  4449   00184A  240C               	addwf	??___fladd^0,w,c
  4450   00184C  6E04               	movwf	___fladd@b^0,c
  4451   00184E  0EFF               	movlw	255
  4452   001850  200D               	addwfc	(??___fladd+1)^0,w,c
  4453   001852  6E05               	movwf	(___fladd@b+1)^0,c
  4454   001854  0EFF               	movlw	255
  4455   001856  200E               	addwfc	(??___fladd+2)^0,w,c
  4456   001858  6E06               	movwf	(___fladd@b+2)^0,c
  4457   00185A  0EFF               	movlw	255
  4458   00185C  200F               	addwfc	(??___fladd+3)^0,w,c
  4459   00185E  6E07               	movwf	(___fladd@b+3)^0,c
  4460   001860  0E80               	movlw	128
  4461   001862  1A10               	xorwf	___fladd@signs^0,f,c
  4462   001864  6C13               	negf	___fladd@grs^0,c
  4463   001866  5013               	movf	___fladd@grs^0,w,c
  4464   001868  A4D8               	btfss	status,2,c
  4465   00186A  EF39  F00C         	goto	u4821
  4466   00186E  EF3B  F00C         	goto	u4820
  4467   001872                     u4821:
  4468   001872  EF4B  F00C         	goto	l676
  4469   001876                     u4820:
  4470   001876  0E01               	movlw	1
  4471   001878  2604               	addwf	___fladd@b^0,f,c
  4472   00187A  0E00               	movlw	0
  4473   00187C  2205               	addwfc	(___fladd@b+1)^0,f,c
  4474   00187E  2206               	addwfc	(___fladd@b+2)^0,f,c
  4475   001880  2207               	addwfc	(___fladd@b+3)^0,f,c
  4476   001882  EF4B  F00C         	goto	l676
  4477   001886                     l4293:
  4478   001886  5008               	movf	___fladd@a^0,w,c
  4479   001888  5E04               	subwf	___fladd@b^0,f,c
  4480   00188A  5009               	movf	(___fladd@a+1)^0,w,c
  4481   00188C  5A05               	subwfb	(___fladd@b+1)^0,f,c
  4482   00188E  500A               	movf	(___fladd@a+2)^0,w,c
  4483   001890  5A06               	subwfb	(___fladd@b+2)^0,f,c
  4484   001892  500B               	movf	(___fladd@a+3)^0,w,c
  4485   001894  5A07               	subwfb	(___fladd@b+3)^0,f,c
  4486   001896                     l676:
  4487   001896  5004               	movf	___fladd@b^0,w,c
  4488   001898  1005               	iorwf	(___fladd@b+1)^0,w,c
  4489   00189A  1006               	iorwf	(___fladd@b+2)^0,w,c
  4490   00189C  1007               	iorwf	(___fladd@b+3)^0,w,c
  4491   00189E  A4D8               	btfss	status,2,c
  4492   0018A0  EF54  F00C         	goto	u4831
  4493   0018A4  EF56  F00C         	goto	u4830
  4494   0018A8                     u4831:
  4495   0018A8  EF8B  F00C         	goto	l4317
  4496   0018AC                     u4830:
  4497   0018AC  5013               	movf	___fladd@grs^0,w,c
  4498   0018AE  A4D8               	btfss	status,2,c
  4499   0018B0  EF5C  F00C         	goto	u4841
  4500   0018B4  EF5E  F00C         	goto	u4840
  4501   0018B8                     u4841:
  4502   0018B8  EF8B  F00C         	goto	l4317
  4503   0018BC                     u4840:
  4504   0018BC  0E00               	movlw	0
  4505   0018BE  6E04               	movwf	?___fladd^0,c
  4506   0018C0  0E00               	movlw	0
  4507   0018C2  6E05               	movwf	(?___fladd+1)^0,c
  4508   0018C4  0E00               	movlw	0
  4509   0018C6  6E06               	movwf	(?___fladd+2)^0,c
  4510   0018C8  0E00               	movlw	0
  4511   0018CA  6E07               	movwf	(?___fladd+3)^0,c
  4512   0018CC  EF26  F00D         	goto	l668
  4513   0018D0                     l4301:
  4514   0018D0  90D8               	bcf	status,0,c
  4515   0018D2  3604               	rlcf	___fladd@b^0,f,c
  4516   0018D4  3605               	rlcf	(___fladd@b+1)^0,f,c
  4517   0018D6  3606               	rlcf	(___fladd@b+2)^0,f,c
  4518   0018D8  3607               	rlcf	(___fladd@b+3)^0,f,c
  4519   0018DA  AE13               	btfss	___fladd@grs^0,7,c
  4520   0018DC  EF72  F00C         	goto	u4851
  4521   0018E0  EF74  F00C         	goto	u4850
  4522   0018E4                     u4851:
  4523   0018E4  EF75  F00C         	goto	l4307
  4524   0018E8                     u4850:
  4525   0018E8  8004               	bsf	___fladd@b^0,0,c
  4526   0018EA                     l4307:
  4527   0018EA  A013               	btfss	___fladd@grs^0,0,c
  4528   0018EC  EF7A  F00C         	goto	u4861
  4529   0018F0  EF7C  F00C         	goto	u4860
  4530   0018F4                     u4861:
  4531   0018F4  EF80  F00C         	goto	l4311
  4532   0018F8                     u4860:
  4533   0018F8  80D8               	bsf	status,0,c
  4534   0018FA  3613               	rlcf	___fladd@grs^0,f,c
  4535   0018FC  EF82  F00C         	goto	l4313
  4536   001900                     l4311:
  4537   001900  90D8               	bcf	status,0,c
  4538   001902  3613               	rlcf	___fladd@grs^0,f,c
  4539   001904                     l4313:
  4540   001904  5012               	movf	___fladd@bexp^0,w,c
  4541   001906  B4D8               	btfsc	status,2,c
  4542   001908  EF88  F00C         	goto	u4871
  4543   00190C  EF8A  F00C         	goto	u4870
  4544   001910                     u4871:
  4545   001910  EF8B  F00C         	goto	l4317
  4546   001914                     u4870:
  4547   001914  0612               	decf	___fladd@bexp^0,f,c
  4548   001916                     l4317:
  4549   001916  AE06               	btfss	(___fladd@b+2)^0,7,c
  4550   001918  EF90  F00C         	goto	u4881
  4551   00191C  EF92  F00C         	goto	u4880
  4552   001920                     u4881:
  4553   001920  EF68  F00C         	goto	l4301
  4554   001924                     u4880:
  4555   001924                     l4319:
  4556   001924  0E00               	movlw	0
  4557   001926  6E11               	movwf	___fladd@aexp^0,c
  4558   001928  AE13               	btfss	___fladd@grs^0,7,c
  4559   00192A  EF99  F00C         	goto	u4891
  4560   00192E  EF9B  F00C         	goto	u4890
  4561   001932                     u4891:
  4562   001932  EFB3  F00C         	goto	l685
  4563   001936                     u4890:
  4564   001936  C013  F00C         	movff	___fladd@grs,??___fladd
  4565   00193A  0E7F               	movlw	127
  4566   00193C  160C               	andwf	??___fladd^0,f,c
  4567   00193E  B4D8               	btfsc	status,2,c
  4568   001940  EFA4  F00C         	goto	u4901
  4569   001944  EFA6  F00C         	goto	u4900
  4570   001948                     u4901:
  4571   001948  EFAA  F00C         	goto	l686
  4572   00194C                     u4900:
  4573   00194C                     l4325:
  4574   00194C  0E01               	movlw	1
  4575   00194E  6E11               	movwf	___fladd@aexp^0,c
  4576   001950  EFB3  F00C         	goto	l685
  4577   001954                     l686:
  4578   001954  A004               	btfss	___fladd@b^0,0,c
  4579   001956  EFAF  F00C         	goto	u4911
  4580   00195A  EFB1  F00C         	goto	u4910
  4581   00195E                     u4911:
  4582   00195E  EFB3  F00C         	goto	l685
  4583   001962                     u4910:
  4584   001962  EFA6  F00C         	goto	l4325
  4585   001966                     l685:
  4586   001966  5011               	movf	___fladd@aexp^0,w,c
  4587   001968  B4D8               	btfsc	status,2,c
  4588   00196A  EFB9  F00C         	goto	u4921
  4589   00196E  EFBB  F00C         	goto	u4920
  4590   001972                     u4921:
  4591   001972  EFE6  F00C         	goto	l4337
  4592   001976                     u4920:
  4593   001976  0E01               	movlw	1
  4594   001978  2604               	addwf	___fladd@b^0,f,c
  4595   00197A  0E00               	movlw	0
  4596   00197C  2205               	addwfc	(___fladd@b+1)^0,f,c
  4597   00197E  2206               	addwfc	(___fladd@b+2)^0,f,c
  4598   001980  2207               	addwfc	(___fladd@b+3)^0,f,c
  4599   001982  A007               	btfss	(___fladd@b+3)^0,0,c
  4600   001984  EFC6  F00C         	goto	u4931
  4601   001988  EFC8  F00C         	goto	u4930
  4602   00198C                     u4931:
  4603   00198C  EFE6  F00C         	goto	l4337
  4604   001990                     u4930:
  4605   001990  C004  F00C         	movff	___fladd@b,??___fladd
  4606   001994  C005  F00D         	movff	___fladd@b+1,??___fladd+1
  4607   001998  C006  F00E         	movff	___fladd@b+2,??___fladd+2
  4608   00199C  C007  F00F         	movff	___fladd@b+3,??___fladd+3
  4609   0019A0  340F               	rlcf	(??___fladd+3)^0,w,c
  4610   0019A2  320F               	rrcf	(??___fladd+3)^0,f,c
  4611   0019A4  320E               	rrcf	(??___fladd+2)^0,f,c
  4612   0019A6  320D               	rrcf	(??___fladd+1)^0,f,c
  4613   0019A8  320C               	rrcf	??___fladd^0,f,c
  4614   0019AA  C00C  F004         	movff	??___fladd,___fladd@b
  4615   0019AE  C00D  F005         	movff	??___fladd+1,___fladd@b+1
  4616   0019B2  C00E  F006         	movff	??___fladd+2,___fladd@b+2
  4617   0019B6  C00F  F007         	movff	??___fladd+3,___fladd@b+3
  4618   0019BA  2812               	incf	___fladd@bexp^0,w,c
  4619   0019BC  B4D8               	btfsc	status,2,c
  4620   0019BE  EFE3  F00C         	goto	u4941
  4621   0019C2  EFE5  F00C         	goto	u4940
  4622   0019C6                     u4941:
  4623   0019C6  EFE6  F00C         	goto	l4337
  4624   0019CA                     u4940:
  4625   0019CA  2A12               	incf	___fladd@bexp^0,f,c
  4626   0019CC                     l4337:
  4627   0019CC  2812               	incf	___fladd@bexp^0,w,c
  4628   0019CE  B4D8               	btfsc	status,2,c
  4629   0019D0  EFEC  F00C         	goto	u4951
  4630   0019D4  EFEE  F00C         	goto	u4950
  4631   0019D8                     u4951:
  4632   0019D8  EFF6  F00C         	goto	l4341
  4633   0019DC                     u4950:
  4634   0019DC  5012               	movf	___fladd@bexp^0,w,c
  4635   0019DE  A4D8               	btfss	status,2,c
  4636   0019E0  EFF4  F00C         	goto	u4961
  4637   0019E4  EFF6  F00C         	goto	u4960
  4638   0019E8                     u4961:
  4639   0019E8  EF08  F00D         	goto	l4345
  4640   0019EC                     u4960:
  4641   0019EC                     l4341:
  4642   0019EC  0E00               	movlw	0
  4643   0019EE  6E04               	movwf	___fladd@b^0,c
  4644   0019F0  0E00               	movlw	0
  4645   0019F2  6E05               	movwf	(___fladd@b+1)^0,c
  4646   0019F4  0E00               	movlw	0
  4647   0019F6  6E06               	movwf	(___fladd@b+2)^0,c
  4648   0019F8  0E00               	movlw	0
  4649   0019FA  6E07               	movwf	(___fladd@b+3)^0,c
  4650   0019FC  5012               	movf	___fladd@bexp^0,w,c
  4651   0019FE  A4D8               	btfss	status,2,c
  4652   001A00  EF04  F00D         	goto	u4971
  4653   001A04  EF06  F00D         	goto	u4970
  4654   001A08                     u4971:
  4655   001A08  EF08  F00D         	goto	l4345
  4656   001A0C                     u4970:
  4657   001A0C  0E00               	movlw	0
  4658   001A0E  6E10               	movwf	___fladd@signs^0,c
  4659   001A10                     l4345:
  4660   001A10  A012               	btfss	___fladd@bexp^0,0,c
  4661   001A12  EF0D  F00D         	goto	u4981
  4662   001A16  EF0F  F00D         	goto	u4980
  4663   001A1A                     u4981:
  4664   001A1A  EF12  F00D         	goto	l4349
  4665   001A1E                     u4980:
  4666   001A1E  8E06               	bsf	(___fladd@b+2)^0,7,c
  4667   001A20  EF13  F00D         	goto	l4351
  4668   001A24                     l4349:
  4669   001A24  9E06               	bcf	(___fladd@b+2)^0,7,c
  4670   001A26                     l4351:
  4671   001A26  90D8               	bcf	status,0,c
  4672   001A28  3012               	rrcf	___fladd@bexp^0,w,c
  4673   001A2A  6E07               	movwf	(___fladd@b+3)^0,c
  4674   001A2C  AE10               	btfss	___fladd@signs^0,7,c
  4675   001A2E  EF1B  F00D         	goto	u4991
  4676   001A32  EF1D  F00D         	goto	u4990
  4677   001A36                     u4991:
  4678   001A36  EF1E  F00D         	goto	l4357
  4679   001A3A                     u4990:
  4680   001A3A  8E07               	bsf	(___fladd@b+3)^0,7,c
  4681   001A3C                     l4357:
  4682   001A3C  C004  F004         	movff	___fladd@b,?___fladd
  4683   001A40  C005  F005         	movff	___fladd@b+1,?___fladd+1
  4684   001A44  C006  F006         	movff	___fladd@b+2,?___fladd+2
  4685   001A48  C007  F007         	movff	___fladd@b+3,?___fladd+3
  4686   001A4C                     l668:
  4687   001A4C  0012               	return		;funcret
  4688   001A4E                     __end_of___fladd:
  4689                           	callstack 0
  4690                           
  4691 ;; *************** function ___flneg *****************
  4692 ;; Defined at:
  4693 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  4694 ;; Parameters:    Size  Location     Type
  4695 ;;  f1              4    3[COMRAM] unsigned char 
  4696 ;; Auto vars:     Size  Location     Type
  4697 ;;		None
  4698 ;; Return value:  Size  Location     Type
  4699 ;;                  4    3[COMRAM] unsigned char 
  4700 ;; Registers used:
  4701 ;;		wreg, status,2, status,0
  4702 ;; Tracked objects:
  4703 ;;		On entry : 0/0
  4704 ;;		On exit  : 0/0
  4705 ;;		Unchanged: 0/0
  4706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4707 ;;      Params:         4       0       0       0       0       0       0
  4708 ;;      Locals:         0       0       0       0       0       0       0
  4709 ;;      Temps:          0       0       0       0       0       0       0
  4710 ;;      Totals:         4       0       0       0       0       0       0
  4711 ;;Total ram usage:        4 bytes
  4712 ;; Hardware stack levels used: 1
  4713 ;; Hardware stack levels required when called: 2
  4714 ;; This function calls:
  4715 ;;		Nothing
  4716 ;; This function is called by:
  4717 ;;		_efgtoa
  4718 ;; This function uses a non-reentrant model
  4719 ;;
  4720                           
  4721                           	psect	text14
  4722   003624                     __ptext14:
  4723                           	callstack 0
  4724   003624                     ___flneg:
  4725                           	callstack 23
  4726   003624  5004               	movf	___flneg@f1^0,w,c
  4727   003626  1005               	iorwf	(___flneg@f1+1)^0,w,c
  4728   003628  1006               	iorwf	(___flneg@f1+2)^0,w,c
  4729   00362A  1007               	iorwf	(___flneg@f1+3)^0,w,c
  4730   00362C  B4D8               	btfsc	status,2,c
  4731   00362E  EF1B  F01B         	goto	u5641
  4732   003632  EF1D  F01B         	goto	u5640
  4733   003636                     u5641:
  4734   003636  EF25  F01B         	goto	l4771
  4735   00363A                     u5640:
  4736   00363A  0E00               	movlw	0
  4737   00363C  1A04               	xorwf	___flneg@f1^0,f,c
  4738   00363E  0E00               	movlw	0
  4739   003640  1A05               	xorwf	(___flneg@f1+1)^0,f,c
  4740   003642  0E00               	movlw	0
  4741   003644  1A06               	xorwf	(___flneg@f1+2)^0,f,c
  4742   003646  0E80               	movlw	128
  4743   003648  1A07               	xorwf	(___flneg@f1+3)^0,f,c
  4744   00364A                     l4771:
  4745   00364A  C004  F004         	movff	___flneg@f1,?___flneg
  4746   00364E  C005  F005         	movff	___flneg@f1+1,?___flneg+1
  4747   003652  C006  F006         	movff	___flneg@f1+2,?___flneg+2
  4748   003656  C007  F007         	movff	___flneg@f1+3,?___flneg+3
  4749   00365A  0012               	return		;funcret
  4750   00365C                     __end_of___flneg:
  4751                           	callstack 0
  4752                           
  4753 ;; *************** function ___flge *****************
  4754 ;; Defined at:
  4755 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  4756 ;; Parameters:    Size  Location     Type
  4757 ;;  ff1             4   42[COMRAM] unsigned char 
  4758 ;;  ff2             4   46[COMRAM] unsigned char 
  4759 ;; Auto vars:     Size  Location     Type
  4760 ;;		None
  4761 ;; Return value:  Size  Location     Type
  4762 ;;		None               void
  4763 ;; Registers used:
  4764 ;;		wreg, status,2, status,0
  4765 ;; Tracked objects:
  4766 ;;		On entry : 0/0
  4767 ;;		On exit  : 0/0
  4768 ;;		Unchanged: 0/0
  4769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4770 ;;      Params:         8       0       0       0       0       0       0
  4771 ;;      Locals:         0       0       0       0       0       0       0
  4772 ;;      Temps:          4       0       0       0       0       0       0
  4773 ;;      Totals:        12       0       0       0       0       0       0
  4774 ;;Total ram usage:       12 bytes
  4775 ;; Hardware stack levels used: 1
  4776 ;; Hardware stack levels required when called: 2
  4777 ;; This function calls:
  4778 ;;		Nothing
  4779 ;; This function is called by:
  4780 ;;		_efgtoa
  4781 ;; This function uses a non-reentrant model
  4782 ;;
  4783                           
  4784                           	psect	text15
  4785   002DC8                     __ptext15:
  4786                           	callstack 0
  4787   002DC8                     ___flge:
  4788                           	callstack 23
  4789   002DC8  0E00               	movlw	0
  4790   002DCA  142B               	andwf	___flge@ff1^0,w,c
  4791   002DCC  6E33               	movwf	??___flge^0,c
  4792   002DCE  0E00               	movlw	0
  4793   002DD0  142C               	andwf	(___flge@ff1+1)^0,w,c
  4794   002DD2  6E34               	movwf	(??___flge+1)^0,c
  4795   002DD4  0E80               	movlw	128
  4796   002DD6  142D               	andwf	(___flge@ff1+2)^0,w,c
  4797   002DD8  6E35               	movwf	(??___flge+2)^0,c
  4798   002DDA  0E7F               	movlw	127
  4799   002DDC  142E               	andwf	(___flge@ff1+3)^0,w,c
  4800   002DDE  6E36               	movwf	(??___flge+3)^0,c
  4801   002DE0  5033               	movf	??___flge^0,w,c
  4802   002DE2  1034               	iorwf	(??___flge+1)^0,w,c
  4803   002DE4  1035               	iorwf	(??___flge+2)^0,w,c
  4804   002DE6  1036               	iorwf	(??___flge+3)^0,w,c
  4805   002DE8  A4D8               	btfss	status,2,c
  4806   002DEA  EFF9  F016         	goto	u5591
  4807   002DEE  EFFB  F016         	goto	u5590
  4808   002DF2                     u5591:
  4809   002DF2  EF03  F017         	goto	l4749
  4810   002DF6                     u5590:
  4811   002DF6  0E00               	movlw	0
  4812   002DF8  6E2B               	movwf	___flge@ff1^0,c
  4813   002DFA  0E00               	movlw	0
  4814   002DFC  6E2C               	movwf	(___flge@ff1+1)^0,c
  4815   002DFE  0E00               	movlw	0
  4816   002E00  6E2D               	movwf	(___flge@ff1+2)^0,c
  4817   002E02  0E00               	movlw	0
  4818   002E04  6E2E               	movwf	(___flge@ff1+3)^0,c
  4819   002E06                     l4749:
  4820   002E06  0E00               	movlw	0
  4821   002E08  142F               	andwf	___flge@ff2^0,w,c
  4822   002E0A  6E33               	movwf	??___flge^0,c
  4823   002E0C  0E00               	movlw	0
  4824   002E0E  1430               	andwf	(___flge@ff2+1)^0,w,c
  4825   002E10  6E34               	movwf	(??___flge+1)^0,c
  4826   002E12  0E80               	movlw	128
  4827   002E14  1431               	andwf	(___flge@ff2+2)^0,w,c
  4828   002E16  6E35               	movwf	(??___flge+2)^0,c
  4829   002E18  0E7F               	movlw	127
  4830   002E1A  1432               	andwf	(___flge@ff2+3)^0,w,c
  4831   002E1C  6E36               	movwf	(??___flge+3)^0,c
  4832   002E1E  5033               	movf	??___flge^0,w,c
  4833   002E20  1034               	iorwf	(??___flge+1)^0,w,c
  4834   002E22  1035               	iorwf	(??___flge+2)^0,w,c
  4835   002E24  1036               	iorwf	(??___flge+3)^0,w,c
  4836   002E26  A4D8               	btfss	status,2,c
  4837   002E28  EF18  F017         	goto	u5601
  4838   002E2C  EF1A  F017         	goto	u5600
  4839   002E30                     u5601:
  4840   002E30  EF22  F017         	goto	l4753
  4841   002E34                     u5600:
  4842   002E34  0E00               	movlw	0
  4843   002E36  6E2F               	movwf	___flge@ff2^0,c
  4844   002E38  0E00               	movlw	0
  4845   002E3A  6E30               	movwf	(___flge@ff2+1)^0,c
  4846   002E3C  0E00               	movlw	0
  4847   002E3E  6E31               	movwf	(___flge@ff2+2)^0,c
  4848   002E40  0E00               	movlw	0
  4849   002E42  6E32               	movwf	(___flge@ff2+3)^0,c
  4850   002E44                     l4753:
  4851   002E44  AE2E               	btfss	(___flge@ff1+3)^0,7,c
  4852   002E46  EF27  F017         	goto	u5611
  4853   002E4A  EF29  F017         	goto	u5610
  4854   002E4E                     u5611:
  4855   002E4E  EF32  F017         	goto	l4757
  4856   002E52                     u5610:
  4857   002E52  6C2B               	negf	___flge@ff1^0,c
  4858   002E54  1E2C               	comf	(___flge@ff1+1)^0,f,c
  4859   002E56  B0D8               	btfsc	status,0,c
  4860   002E58  2A2C               	incf	(___flge@ff1+1)^0,f,c
  4861   002E5A  1E2D               	comf	(___flge@ff1+2)^0,f,c
  4862   002E5C  B0D8               	btfsc	status,0,c
  4863   002E5E  2A2D               	incf	(___flge@ff1+2)^0,f,c
  4864   002E60  0E80               	movlw	128
  4865   002E62  562E               	subfwb	(___flge@ff1+3)^0,f,c
  4866   002E64                     l4757:
  4867   002E64  AE32               	btfss	(___flge@ff2+3)^0,7,c
  4868   002E66  EF37  F017         	goto	u5621
  4869   002E6A  EF39  F017         	goto	u5620
  4870   002E6E                     u5621:
  4871   002E6E  EF42  F017         	goto	l396
  4872   002E72                     u5620:
  4873   002E72  6C2F               	negf	___flge@ff2^0,c
  4874   002E74  1E30               	comf	(___flge@ff2+1)^0,f,c
  4875   002E76  B0D8               	btfsc	status,0,c
  4876   002E78  2A30               	incf	(___flge@ff2+1)^0,f,c
  4877   002E7A  1E31               	comf	(___flge@ff2+2)^0,f,c
  4878   002E7C  B0D8               	btfsc	status,0,c
  4879   002E7E  2A31               	incf	(___flge@ff2+2)^0,f,c
  4880   002E80  0E80               	movlw	128
  4881   002E82  5632               	subfwb	(___flge@ff2+3)^0,f,c
  4882   002E84                     l396:
  4883   002E84  0E00               	movlw	0
  4884   002E86  1A2B               	xorwf	___flge@ff1^0,f,c
  4885   002E88  0E00               	movlw	0
  4886   002E8A  1A2C               	xorwf	(___flge@ff1+1)^0,f,c
  4887   002E8C  0E00               	movlw	0
  4888   002E8E  1A2D               	xorwf	(___flge@ff1+2)^0,f,c
  4889   002E90  0E80               	movlw	128
  4890   002E92  1A2E               	xorwf	(___flge@ff1+3)^0,f,c
  4891   002E94  0E00               	movlw	0
  4892   002E96  1A2F               	xorwf	___flge@ff2^0,f,c
  4893   002E98  0E00               	movlw	0
  4894   002E9A  1A30               	xorwf	(___flge@ff2+1)^0,f,c
  4895   002E9C  0E00               	movlw	0
  4896   002E9E  1A31               	xorwf	(___flge@ff2+2)^0,f,c
  4897   002EA0  0E80               	movlw	128
  4898   002EA2  1A32               	xorwf	(___flge@ff2+3)^0,f,c
  4899   002EA4  502F               	movf	___flge@ff2^0,w,c
  4900   002EA6  5C2B               	subwf	___flge@ff1^0,w,c
  4901   002EA8  5030               	movf	(___flge@ff2+1)^0,w,c
  4902   002EAA  582C               	subwfb	(___flge@ff1+1)^0,w,c
  4903   002EAC  5031               	movf	(___flge@ff2+2)^0,w,c
  4904   002EAE  582D               	subwfb	(___flge@ff1+2)^0,w,c
  4905   002EB0  5032               	movf	(___flge@ff2+3)^0,w,c
  4906   002EB2  582E               	subwfb	(___flge@ff1+3)^0,w,c
  4907   002EB4  B0D8               	btfsc	status,0,c
  4908   002EB6  EF5F  F017         	goto	u5631
  4909   002EBA  EF61  F017         	goto	u5630
  4910   002EBE                     u5631:
  4911   002EBE  EF64  F017         	goto	l4763
  4912   002EC2                     u5630:
  4913   002EC2  90D8               	bcf	status,0,c
  4914   002EC4  EF65  F017         	goto	l401
  4915   002EC8                     l4763:
  4916   002EC8  80D8               	bsf	status,0,c
  4917   002ECA                     l401:
  4918   002ECA  0012               	return		;funcret
  4919   002ECC                     __end_of___flge:
  4920                           	callstack 0
  4921                           
  4922 ;; *************** function ___fleq *****************
  4923 ;; Defined at:
  4924 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
  4925 ;; Parameters:    Size  Location     Type
  4926 ;;  ff1             4    3[COMRAM] unsigned char 
  4927 ;;  ff2             4    7[COMRAM] unsigned char 
  4928 ;; Auto vars:     Size  Location     Type
  4929 ;;		None
  4930 ;; Return value:  Size  Location     Type
  4931 ;;		None               void
  4932 ;; Registers used:
  4933 ;;		wreg, status,2, status,0
  4934 ;; Tracked objects:
  4935 ;;		On entry : 0/0
  4936 ;;		On exit  : 0/0
  4937 ;;		Unchanged: 0/0
  4938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4939 ;;      Params:         8       0       0       0       0       0       0
  4940 ;;      Locals:         0       0       0       0       0       0       0
  4941 ;;      Temps:          4       0       0       0       0       0       0
  4942 ;;      Totals:        12       0       0       0       0       0       0
  4943 ;;Total ram usage:       12 bytes
  4944 ;; Hardware stack levels used: 1
  4945 ;; Hardware stack levels required when called: 2
  4946 ;; This function calls:
  4947 ;;		Nothing
  4948 ;; This function is called by:
  4949 ;;		_efgtoa
  4950 ;; This function uses a non-reentrant model
  4951 ;;
  4952                           
  4953                           	psect	text16
  4954   00314E                     __ptext16:
  4955                           	callstack 0
  4956   00314E                     ___fleq:
  4957                           	callstack 23
  4958   00314E  0E00               	movlw	0
  4959   003150  1404               	andwf	___fleq@ff1^0,w,c
  4960   003152  6E0C               	movwf	??___fleq^0,c
  4961   003154  0E00               	movlw	0
  4962   003156  1405               	andwf	(___fleq@ff1+1)^0,w,c
  4963   003158  6E0D               	movwf	(??___fleq+1)^0,c
  4964   00315A  0E80               	movlw	128
  4965   00315C  1406               	andwf	(___fleq@ff1+2)^0,w,c
  4966   00315E  6E0E               	movwf	(??___fleq+2)^0,c
  4967   003160  0E7F               	movlw	127
  4968   003162  1407               	andwf	(___fleq@ff1+3)^0,w,c
  4969   003164  6E0F               	movwf	(??___fleq+3)^0,c
  4970   003166  500C               	movf	??___fleq^0,w,c
  4971   003168  100D               	iorwf	(??___fleq+1)^0,w,c
  4972   00316A  100E               	iorwf	(??___fleq+2)^0,w,c
  4973   00316C  100F               	iorwf	(??___fleq+3)^0,w,c
  4974   00316E  A4D8               	btfss	status,2,c
  4975   003170  EFBC  F018         	goto	u5561
  4976   003174  EFBE  F018         	goto	u5560
  4977   003178                     u5561:
  4978   003178  EFC6  F018         	goto	l4733
  4979   00317C                     u5560:
  4980   00317C  0E00               	movlw	0
  4981   00317E  6E04               	movwf	___fleq@ff1^0,c
  4982   003180  0E00               	movlw	0
  4983   003182  6E05               	movwf	(___fleq@ff1+1)^0,c
  4984   003184  0E00               	movlw	0
  4985   003186  6E06               	movwf	(___fleq@ff1+2)^0,c
  4986   003188  0E00               	movlw	0
  4987   00318A  6E07               	movwf	(___fleq@ff1+3)^0,c
  4988   00318C                     l4733:
  4989   00318C  0E00               	movlw	0
  4990   00318E  1408               	andwf	___fleq@ff2^0,w,c
  4991   003190  6E0C               	movwf	??___fleq^0,c
  4992   003192  0E00               	movlw	0
  4993   003194  1409               	andwf	(___fleq@ff2+1)^0,w,c
  4994   003196  6E0D               	movwf	(??___fleq+1)^0,c
  4995   003198  0E80               	movlw	128
  4996   00319A  140A               	andwf	(___fleq@ff2+2)^0,w,c
  4997   00319C  6E0E               	movwf	(??___fleq+2)^0,c
  4998   00319E  0E7F               	movlw	127
  4999   0031A0  140B               	andwf	(___fleq@ff2+3)^0,w,c
  5000   0031A2  6E0F               	movwf	(??___fleq+3)^0,c
  5001   0031A4  500C               	movf	??___fleq^0,w,c
  5002   0031A6  100D               	iorwf	(??___fleq+1)^0,w,c
  5003   0031A8  100E               	iorwf	(??___fleq+2)^0,w,c
  5004   0031AA  100F               	iorwf	(??___fleq+3)^0,w,c
  5005   0031AC  A4D8               	btfss	status,2,c
  5006   0031AE  EFDB  F018         	goto	u5571
  5007   0031B2  EFDD  F018         	goto	u5570
  5008   0031B6                     u5571:
  5009   0031B6  EFE5  F018         	goto	l4737
  5010   0031BA                     u5570:
  5011   0031BA  0E00               	movlw	0
  5012   0031BC  6E08               	movwf	___fleq@ff2^0,c
  5013   0031BE  0E00               	movlw	0
  5014   0031C0  6E09               	movwf	(___fleq@ff2+1)^0,c
  5015   0031C2  0E00               	movlw	0
  5016   0031C4  6E0A               	movwf	(___fleq@ff2+2)^0,c
  5017   0031C6  0E00               	movlw	0
  5018   0031C8  6E0B               	movwf	(___fleq@ff2+3)^0,c
  5019   0031CA                     l4737:
  5020   0031CA  5008               	movf	___fleq@ff2^0,w,c
  5021   0031CC  1804               	xorwf	___fleq@ff1^0,w,c
  5022   0031CE  E10F               	bnz	u5580
  5023   0031D0  5009               	movf	(___fleq@ff2+1)^0,w,c
  5024   0031D2  1805               	xorwf	(___fleq@ff1+1)^0,w,c
  5025   0031D4  E10C               	bnz	u5580
  5026   0031D6  500A               	movf	(___fleq@ff2+2)^0,w,c
  5027   0031D8  1806               	xorwf	(___fleq@ff1+2)^0,w,c
  5028   0031DA  E109               	bnz	u5580
  5029   0031DC  500B               	movf	(___fleq@ff2+3)^0,w,c
  5030   0031DE  1807               	xorwf	(___fleq@ff1+3)^0,w,c
  5031   0031E0  B4D8               	btfsc	status,2,c
  5032   0031E2  EFF5  F018         	goto	u5581
  5033   0031E6  EFF7  F018         	goto	u5580
  5034   0031EA                     u5581:
  5035   0031EA  EFFA  F018         	goto	l4741
  5036   0031EE                     u5580:
  5037   0031EE  90D8               	bcf	status,0,c
  5038   0031F0  EFFB  F018         	goto	l390
  5039   0031F4                     l4741:
  5040   0031F4  80D8               	bsf	status,0,c
  5041   0031F6                     l390:
  5042   0031F6  0012               	return		;funcret
  5043   0031F8                     __end_of___fleq:
  5044                           	callstack 0
  5045                           
  5046 ;; *************** function ___fldiv *****************
  5047 ;; Defined at:
  5048 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  5049 ;; Parameters:    Size  Location     Type
  5050 ;;  b               4    3[COMRAM] unsigned char 
  5051 ;;  a               4    7[COMRAM] unsigned char 
  5052 ;; Auto vars:     Size  Location     Type
  5053 ;;  grs             4   22[COMRAM] unsigned long 
  5054 ;;  rem             4   15[COMRAM] unsigned long 
  5055 ;;  new_exp         2   20[COMRAM] short 
  5056 ;;  aexp            1   27[COMRAM] unsigned char 
  5057 ;;  bexp            1   26[COMRAM] unsigned char 
  5058 ;;  sign            1   19[COMRAM] unsigned char 
  5059 ;; Return value:  Size  Location     Type
  5060 ;;                  4    3[COMRAM] unsigned char 
  5061 ;; Registers used:
  5062 ;;		wreg, status,2, status,0
  5063 ;; Tracked objects:
  5064 ;;		On entry : 0/0
  5065 ;;		On exit  : 0/0
  5066 ;;		Unchanged: 0/0
  5067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5068 ;;      Params:         8       0       0       0       0       0       0
  5069 ;;      Locals:        13       0       0       0       0       0       0
  5070 ;;      Temps:          4       0       0       0       0       0       0
  5071 ;;      Totals:        25       0       0       0       0       0       0
  5072 ;;Total ram usage:       25 bytes
  5073 ;; Hardware stack levels used: 1
  5074 ;; Hardware stack levels required when called: 2
  5075 ;; This function calls:
  5076 ;;		Nothing
  5077 ;; This function is called by:
  5078 ;;		_efgtoa
  5079 ;; This function uses a non-reentrant model
  5080 ;;
  5081                           
  5082                           	psect	text17
  5083   001E78                     __ptext17:
  5084                           	callstack 0
  5085   001E78                     ___fldiv:
  5086                           	callstack 23
  5087   001E78  5007               	movf	(___fldiv@b+3)^0,w,c
  5088   001E7A  0B80               	andlw	128
  5089   001E7C  6E14               	movwf	___fldiv@sign^0,c
  5090   001E7E  5007               	movf	(___fldiv@b+3)^0,w,c
  5091   001E80  2407               	addwf	(___fldiv@b+3)^0,w,c
  5092   001E82  6E1B               	movwf	___fldiv@bexp^0,c
  5093   001E84  AE06               	btfss	(___fldiv@b+2)^0,7,c
  5094   001E86  EF47  F00F         	goto	u5141
  5095   001E8A  EF49  F00F         	goto	u5140
  5096   001E8E                     u5141:
  5097   001E8E  EF4A  F00F         	goto	l4461
  5098   001E92                     u5140:
  5099   001E92  801B               	bsf	___fldiv@bexp^0,0,c
  5100   001E94                     l4461:
  5101   001E94  501B               	movf	___fldiv@bexp^0,w,c
  5102   001E96  B4D8               	btfsc	status,2,c
  5103   001E98  EF50  F00F         	goto	u5151
  5104   001E9C  EF52  F00F         	goto	u5150
  5105   001EA0                     u5151:
  5106   001EA0  EF67  F00F         	goto	l4471
  5107   001EA4                     u5150:
  5108   001EA4  281B               	incf	___fldiv@bexp^0,w,c
  5109   001EA6  A4D8               	btfss	status,2,c
  5110   001EA8  EF58  F00F         	goto	u5161
  5111   001EAC  EF5A  F00F         	goto	u5160
  5112   001EB0                     u5161:
  5113   001EB0  EF62  F00F         	goto	l4467
  5114   001EB4                     u5160:
  5115   001EB4  0E00               	movlw	0
  5116   001EB6  6E04               	movwf	___fldiv@b^0,c
  5117   001EB8  0E00               	movlw	0
  5118   001EBA  6E05               	movwf	(___fldiv@b+1)^0,c
  5119   001EBC  0E00               	movlw	0
  5120   001EBE  6E06               	movwf	(___fldiv@b+2)^0,c
  5121   001EC0  0E00               	movlw	0
  5122   001EC2  6E07               	movwf	(___fldiv@b+3)^0,c
  5123   001EC4                     l4467:
  5124   001EC4  8E06               	bsf	(___fldiv@b+2)^0,7,c
  5125   001EC6  0E00               	movlw	0
  5126   001EC8  6E07               	movwf	(___fldiv@b+3)^0,c
  5127   001ECA  EF6F  F00F         	goto	l4473
  5128   001ECE                     l4471:
  5129   001ECE  0E00               	movlw	0
  5130   001ED0  6E04               	movwf	___fldiv@b^0,c
  5131   001ED2  0E00               	movlw	0
  5132   001ED4  6E05               	movwf	(___fldiv@b+1)^0,c
  5133   001ED6  0E00               	movlw	0
  5134   001ED8  6E06               	movwf	(___fldiv@b+2)^0,c
  5135   001EDA  0E00               	movlw	0
  5136   001EDC  6E07               	movwf	(___fldiv@b+3)^0,c
  5137   001EDE                     l4473:
  5138   001EDE  500B               	movf	(___fldiv@a+3)^0,w,c
  5139   001EE0  0B80               	andlw	128
  5140   001EE2  1A14               	xorwf	___fldiv@sign^0,f,c
  5141   001EE4  500B               	movf	(___fldiv@a+3)^0,w,c
  5142   001EE6  240B               	addwf	(___fldiv@a+3)^0,w,c
  5143   001EE8  6E1C               	movwf	___fldiv@aexp^0,c
  5144   001EEA  AE0A               	btfss	(___fldiv@a+2)^0,7,c
  5145   001EEC  EF7A  F00F         	goto	u5171
  5146   001EF0  EF7C  F00F         	goto	u5170
  5147   001EF4                     u5171:
  5148   001EF4  EF7D  F00F         	goto	l4481
  5149   001EF8                     u5170:
  5150   001EF8  801C               	bsf	___fldiv@aexp^0,0,c
  5151   001EFA                     l4481:
  5152   001EFA  501C               	movf	___fldiv@aexp^0,w,c
  5153   001EFC  B4D8               	btfsc	status,2,c
  5154   001EFE  EF83  F00F         	goto	u5181
  5155   001F02  EF85  F00F         	goto	u5180
  5156   001F06                     u5181:
  5157   001F06  EF9A  F00F         	goto	l4491
  5158   001F0A                     u5180:
  5159   001F0A  281C               	incf	___fldiv@aexp^0,w,c
  5160   001F0C  A4D8               	btfss	status,2,c
  5161   001F0E  EF8B  F00F         	goto	u5191
  5162   001F12  EF8D  F00F         	goto	u5190
  5163   001F16                     u5191:
  5164   001F16  EF95  F00F         	goto	l4487
  5165   001F1A                     u5190:
  5166   001F1A  0E00               	movlw	0
  5167   001F1C  6E08               	movwf	___fldiv@a^0,c
  5168   001F1E  0E00               	movlw	0
  5169   001F20  6E09               	movwf	(___fldiv@a+1)^0,c
  5170   001F22  0E00               	movlw	0
  5171   001F24  6E0A               	movwf	(___fldiv@a+2)^0,c
  5172   001F26  0E00               	movlw	0
  5173   001F28  6E0B               	movwf	(___fldiv@a+3)^0,c
  5174   001F2A                     l4487:
  5175   001F2A  8E0A               	bsf	(___fldiv@a+2)^0,7,c
  5176   001F2C  0E00               	movlw	0
  5177   001F2E  6E0B               	movwf	(___fldiv@a+3)^0,c
  5178   001F30  EFA2  F00F         	goto	l4493
  5179   001F34                     l4491:
  5180   001F34  0E00               	movlw	0
  5181   001F36  6E08               	movwf	___fldiv@a^0,c
  5182   001F38  0E00               	movlw	0
  5183   001F3A  6E09               	movwf	(___fldiv@a+1)^0,c
  5184   001F3C  0E00               	movlw	0
  5185   001F3E  6E0A               	movwf	(___fldiv@a+2)^0,c
  5186   001F40  0E00               	movlw	0
  5187   001F42  6E0B               	movwf	(___fldiv@a+3)^0,c
  5188   001F44                     l4493:
  5189   001F44  5008               	movf	___fldiv@a^0,w,c
  5190   001F46  1009               	iorwf	(___fldiv@a+1)^0,w,c
  5191   001F48  100A               	iorwf	(___fldiv@a+2)^0,w,c
  5192   001F4A  100B               	iorwf	(___fldiv@a+3)^0,w,c
  5193   001F4C  A4D8               	btfss	status,2,c
  5194   001F4E  EFAB  F00F         	goto	u5201
  5195   001F52  EFAD  F00F         	goto	u5200
  5196   001F56                     u5201:
  5197   001F56  EFC5  F00F         	goto	l4505
  5198   001F5A                     u5200:
  5199   001F5A  0E00               	movlw	0
  5200   001F5C  6E04               	movwf	___fldiv@b^0,c
  5201   001F5E  0E00               	movlw	0
  5202   001F60  6E05               	movwf	(___fldiv@b+1)^0,c
  5203   001F62  0E00               	movlw	0
  5204   001F64  6E06               	movwf	(___fldiv@b+2)^0,c
  5205   001F66  0E00               	movlw	0
  5206   001F68  6E07               	movwf	(___fldiv@b+3)^0,c
  5207   001F6A  0E80               	movlw	128
  5208   001F6C  1206               	iorwf	(___fldiv@b+2)^0,f,c
  5209   001F6E  0E7F               	movlw	127
  5210   001F70  1207               	iorwf	(___fldiv@b+3)^0,f,c
  5211   001F72                     l4499:
  5212   001F72  5014               	movf	___fldiv@sign^0,w,c
  5213   001F74  1207               	iorwf	(___fldiv@b+3)^0,f,c
  5214   001F76  C004  F004         	movff	___fldiv@b,?___fldiv
  5215   001F7A  C005  F005         	movff	___fldiv@b+1,?___fldiv+1
  5216   001F7E  C006  F006         	movff	___fldiv@b+2,?___fldiv+2
  5217   001F82  C007  F007         	movff	___fldiv@b+3,?___fldiv+3
  5218   001F86  EF08  F011         	goto	l713
  5219   001F8A                     l4505:
  5220   001F8A  501B               	movf	___fldiv@bexp^0,w,c
  5221   001F8C  A4D8               	btfss	status,2,c
  5222   001F8E  EFCB  F00F         	goto	u5211
  5223   001F92  EFCD  F00F         	goto	u5210
  5224   001F96                     u5211:
  5225   001F96  EFD7  F00F         	goto	l4513
  5226   001F9A                     u5210:
  5227   001F9A  0E00               	movlw	0
  5228   001F9C  6E04               	movwf	?___fldiv^0,c
  5229   001F9E  0E00               	movlw	0
  5230   001FA0  6E05               	movwf	(?___fldiv+1)^0,c
  5231   001FA2  0E00               	movlw	0
  5232   001FA4  6E06               	movwf	(?___fldiv+2)^0,c
  5233   001FA6  0E00               	movlw	0
  5234   001FA8  6E07               	movwf	(?___fldiv+3)^0,c
  5235   001FAA  EF08  F011         	goto	l713
  5236   001FAE                     l4513:
  5237   001FAE  501C               	movf	___fldiv@aexp^0,w,c
  5238   001FB0  C01B  F00C         	movff	___fldiv@bexp,??___fldiv
  5239   001FB4  6A0D               	clrf	(??___fldiv+1)^0,c
  5240   001FB6  5E0C               	subwf	??___fldiv^0,f,c
  5241   001FB8  0E00               	movlw	0
  5242   001FBA  5A0D               	subwfb	(??___fldiv+1)^0,f,c
  5243   001FBC  0E7F               	movlw	127
  5244   001FBE  240C               	addwf	??___fldiv^0,w,c
  5245   001FC0  6E15               	movwf	___fldiv@new_exp^0,c
  5246   001FC2  0E00               	movlw	0
  5247   001FC4  200D               	addwfc	(??___fldiv+1)^0,w,c
  5248   001FC6  6E16               	movwf	(___fldiv@new_exp+1)^0,c
  5249   001FC8  C004  F010         	movff	___fldiv@b,___fldiv@rem
  5250   001FCC  C005  F011         	movff	___fldiv@b+1,___fldiv@rem+1
  5251   001FD0  C006  F012         	movff	___fldiv@b+2,___fldiv@rem+2
  5252   001FD4  C007  F013         	movff	___fldiv@b+3,___fldiv@rem+3
  5253   001FD8  0E00               	movlw	0
  5254   001FDA  6E04               	movwf	___fldiv@b^0,c
  5255   001FDC  0E00               	movlw	0
  5256   001FDE  6E05               	movwf	(___fldiv@b+1)^0,c
  5257   001FE0  0E00               	movlw	0
  5258   001FE2  6E06               	movwf	(___fldiv@b+2)^0,c
  5259   001FE4  0E00               	movlw	0
  5260   001FE6  6E07               	movwf	(___fldiv@b+3)^0,c
  5261   001FE8  0E00               	movlw	0
  5262   001FEA  6E17               	movwf	___fldiv@grs^0,c
  5263   001FEC  0E00               	movlw	0
  5264   001FEE  6E18               	movwf	(___fldiv@grs+1)^0,c
  5265   001FF0  0E00               	movlw	0
  5266   001FF2  6E19               	movwf	(___fldiv@grs+2)^0,c
  5267   001FF4  0E00               	movlw	0
  5268   001FF6  6E1A               	movwf	(___fldiv@grs+3)^0,c
  5269   001FF8  0E00               	movlw	0
  5270   001FFA  6E1C               	movwf	___fldiv@aexp^0,c
  5271   001FFC  EF38  F010         	goto	l715
  5272   002000                     l4523:
  5273   002000  501C               	movf	___fldiv@aexp^0,w,c
  5274   002002  B4D8               	btfsc	status,2,c
  5275   002004  EF06  F010         	goto	u5221
  5276   002008  EF08  F010         	goto	u5220
  5277   00200C                     u5221:
  5278   00200C  EF1F  F010         	goto	l4531
  5279   002010                     u5220:
  5280   002010  90D8               	bcf	status,0,c
  5281   002012  3610               	rlcf	___fldiv@rem^0,f,c
  5282   002014  3611               	rlcf	(___fldiv@rem+1)^0,f,c
  5283   002016  3612               	rlcf	(___fldiv@rem+2)^0,f,c
  5284   002018  3613               	rlcf	(___fldiv@rem+3)^0,f,c
  5285   00201A  90D8               	bcf	status,0,c
  5286   00201C  3604               	rlcf	___fldiv@b^0,f,c
  5287   00201E  3605               	rlcf	(___fldiv@b+1)^0,f,c
  5288   002020  3606               	rlcf	(___fldiv@b+2)^0,f,c
  5289   002022  3607               	rlcf	(___fldiv@b+3)^0,f,c
  5290   002024  AE1A               	btfss	(___fldiv@grs+3)^0,7,c
  5291   002026  EF17  F010         	goto	u5231
  5292   00202A  EF19  F010         	goto	u5230
  5293   00202E                     u5231:
  5294   00202E  EF1A  F010         	goto	l718
  5295   002032                     u5230:
  5296   002032  8004               	bsf	___fldiv@b^0,0,c
  5297   002034                     l718:
  5298   002034  90D8               	bcf	status,0,c
  5299   002036  3617               	rlcf	___fldiv@grs^0,f,c
  5300   002038  3618               	rlcf	(___fldiv@grs+1)^0,f,c
  5301   00203A  3619               	rlcf	(___fldiv@grs+2)^0,f,c
  5302   00203C  361A               	rlcf	(___fldiv@grs+3)^0,f,c
  5303   00203E                     l4531:
  5304   00203E  5008               	movf	___fldiv@a^0,w,c
  5305   002040  5C10               	subwf	___fldiv@rem^0,w,c
  5306   002042  5009               	movf	(___fldiv@a+1)^0,w,c
  5307   002044  5811               	subwfb	(___fldiv@rem+1)^0,w,c
  5308   002046  500A               	movf	(___fldiv@a+2)^0,w,c
  5309   002048  5812               	subwfb	(___fldiv@rem+2)^0,w,c
  5310   00204A  500B               	movf	(___fldiv@a+3)^0,w,c
  5311   00204C  5813               	subwfb	(___fldiv@rem+3)^0,w,c
  5312   00204E  A0D8               	btfss	status,0,c
  5313   002050  EF2C  F010         	goto	u5241
  5314   002054  EF2E  F010         	goto	u5240
  5315   002058                     u5241:
  5316   002058  EF37  F010         	goto	l4537
  5317   00205C                     u5240:
  5318   00205C  8C1A               	bsf	(___fldiv@grs+3)^0,6,c
  5319   00205E  5008               	movf	___fldiv@a^0,w,c
  5320   002060  5E10               	subwf	___fldiv@rem^0,f,c
  5321   002062  5009               	movf	(___fldiv@a+1)^0,w,c
  5322   002064  5A11               	subwfb	(___fldiv@rem+1)^0,f,c
  5323   002066  500A               	movf	(___fldiv@a+2)^0,w,c
  5324   002068  5A12               	subwfb	(___fldiv@rem+2)^0,f,c
  5325   00206A  500B               	movf	(___fldiv@a+3)^0,w,c
  5326   00206C  5A13               	subwfb	(___fldiv@rem+3)^0,f,c
  5327   00206E                     l4537:
  5328   00206E  2A1C               	incf	___fldiv@aexp^0,f,c
  5329   002070                     l715:
  5330   002070  0E19               	movlw	25
  5331   002072  641C               	cpfsgt	___fldiv@aexp^0,c
  5332   002074  EF3E  F010         	goto	u5251
  5333   002078  EF40  F010         	goto	u5250
  5334   00207C                     u5251:
  5335   00207C  EF00  F010         	goto	l4523
  5336   002080                     u5250:
  5337   002080  5010               	movf	___fldiv@rem^0,w,c
  5338   002082  1011               	iorwf	(___fldiv@rem+1)^0,w,c
  5339   002084  1012               	iorwf	(___fldiv@rem+2)^0,w,c
  5340   002086  1013               	iorwf	(___fldiv@rem+3)^0,w,c
  5341   002088  B4D8               	btfsc	status,2,c
  5342   00208A  EF49  F010         	goto	u5261
  5343   00208E  EF4B  F010         	goto	u5260
  5344   002092                     u5261:
  5345   002092  EF63  F010         	goto	l4549
  5346   002096                     u5260:
  5347   002096  8017               	bsf	___fldiv@grs^0,0,c
  5348   002098  EF63  F010         	goto	l4549
  5349   00209C                     l4543:
  5350   00209C  90D8               	bcf	status,0,c
  5351   00209E  3604               	rlcf	___fldiv@b^0,f,c
  5352   0020A0  3605               	rlcf	(___fldiv@b+1)^0,f,c
  5353   0020A2  3606               	rlcf	(___fldiv@b+2)^0,f,c
  5354   0020A4  3607               	rlcf	(___fldiv@b+3)^0,f,c
  5355   0020A6  AE1A               	btfss	(___fldiv@grs+3)^0,7,c
  5356   0020A8  EF58  F010         	goto	u5271
  5357   0020AC  EF5A  F010         	goto	u5270
  5358   0020B0                     u5271:
  5359   0020B0  EF5B  F010         	goto	l724
  5360   0020B4                     u5270:
  5361   0020B4  8004               	bsf	___fldiv@b^0,0,c
  5362   0020B6                     l724:
  5363   0020B6  90D8               	bcf	status,0,c
  5364   0020B8  3617               	rlcf	___fldiv@grs^0,f,c
  5365   0020BA  3618               	rlcf	(___fldiv@grs+1)^0,f,c
  5366   0020BC  3619               	rlcf	(___fldiv@grs+2)^0,f,c
  5367   0020BE  361A               	rlcf	(___fldiv@grs+3)^0,f,c
  5368   0020C0  0615               	decf	___fldiv@new_exp^0,f,c
  5369   0020C2  A0D8               	btfss	status,0,c
  5370   0020C4  0616               	decf	(___fldiv@new_exp+1)^0,f,c
  5371   0020C6                     l4549:
  5372   0020C6  AE06               	btfss	(___fldiv@b+2)^0,7,c
  5373   0020C8  EF68  F010         	goto	u5281
  5374   0020CC  EF6A  F010         	goto	u5280
  5375   0020D0                     u5281:
  5376   0020D0  EF4E  F010         	goto	l4543
  5377   0020D4                     u5280:
  5378   0020D4  0E00               	movlw	0
  5379   0020D6  6E1C               	movwf	___fldiv@aexp^0,c
  5380   0020D8  AE1A               	btfss	(___fldiv@grs+3)^0,7,c
  5381   0020DA  EF71  F010         	goto	u5291
  5382   0020DE  EF73  F010         	goto	u5290
  5383   0020E2                     u5291:
  5384   0020E2  EF97  F010         	goto	l726
  5385   0020E6                     u5290:
  5386   0020E6  0EFF               	movlw	255
  5387   0020E8  1417               	andwf	___fldiv@grs^0,w,c
  5388   0020EA  6E0C               	movwf	??___fldiv^0,c
  5389   0020EC  0EFF               	movlw	255
  5390   0020EE  1418               	andwf	(___fldiv@grs+1)^0,w,c
  5391   0020F0  6E0D               	movwf	(??___fldiv+1)^0,c
  5392   0020F2  0EFF               	movlw	255
  5393   0020F4  1419               	andwf	(___fldiv@grs+2)^0,w,c
  5394   0020F6  6E0E               	movwf	(??___fldiv+2)^0,c
  5395   0020F8  0E7F               	movlw	127
  5396   0020FA  141A               	andwf	(___fldiv@grs+3)^0,w,c
  5397   0020FC  6E0F               	movwf	(??___fldiv+3)^0,c
  5398   0020FE  500C               	movf	??___fldiv^0,w,c
  5399   002100  100D               	iorwf	(??___fldiv+1)^0,w,c
  5400   002102  100E               	iorwf	(??___fldiv+2)^0,w,c
  5401   002104  100F               	iorwf	(??___fldiv+3)^0,w,c
  5402   002106  B4D8               	btfsc	status,2,c
  5403   002108  EF88  F010         	goto	u5301
  5404   00210C  EF8A  F010         	goto	u5300
  5405   002110                     u5301:
  5406   002110  EF8E  F010         	goto	l727
  5407   002114                     u5300:
  5408   002114                     l4557:
  5409   002114  0E01               	movlw	1
  5410   002116  6E1C               	movwf	___fldiv@aexp^0,c
  5411   002118  EF97  F010         	goto	l726
  5412   00211C                     l727:
  5413   00211C  A004               	btfss	___fldiv@b^0,0,c
  5414   00211E  EF93  F010         	goto	u5311
  5415   002122  EF95  F010         	goto	u5310
  5416   002126                     u5311:
  5417   002126  EF97  F010         	goto	l726
  5418   00212A                     u5310:
  5419   00212A  EF8A  F010         	goto	l4557
  5420   00212E                     l726:
  5421   00212E  501C               	movf	___fldiv@aexp^0,w,c
  5422   002130  B4D8               	btfsc	status,2,c
  5423   002132  EF9D  F010         	goto	u5321
  5424   002136  EF9F  F010         	goto	u5320
  5425   00213A                     u5321:
  5426   00213A  EFC3  F010         	goto	l4569
  5427   00213E                     u5320:
  5428   00213E  0E01               	movlw	1
  5429   002140  2604               	addwf	___fldiv@b^0,f,c
  5430   002142  0E00               	movlw	0
  5431   002144  2205               	addwfc	(___fldiv@b+1)^0,f,c
  5432   002146  2206               	addwfc	(___fldiv@b+2)^0,f,c
  5433   002148  2207               	addwfc	(___fldiv@b+3)^0,f,c
  5434   00214A  A007               	btfss	(___fldiv@b+3)^0,0,c
  5435   00214C  EFAA  F010         	goto	u5331
  5436   002150  EFAC  F010         	goto	u5330
  5437   002154                     u5331:
  5438   002154  EFC3  F010         	goto	l4569
  5439   002158                     u5330:
  5440   002158  C004  F00C         	movff	___fldiv@b,??___fldiv
  5441   00215C  C005  F00D         	movff	___fldiv@b+1,??___fldiv+1
  5442   002160  C006  F00E         	movff	___fldiv@b+2,??___fldiv+2
  5443   002164  C007  F00F         	movff	___fldiv@b+3,??___fldiv+3
  5444   002168  340F               	rlcf	(??___fldiv+3)^0,w,c
  5445   00216A  320F               	rrcf	(??___fldiv+3)^0,f,c
  5446   00216C  320E               	rrcf	(??___fldiv+2)^0,f,c
  5447   00216E  320D               	rrcf	(??___fldiv+1)^0,f,c
  5448   002170  320C               	rrcf	??___fldiv^0,f,c
  5449   002172  C00C  F004         	movff	??___fldiv,___fldiv@b
  5450   002176  C00D  F005         	movff	??___fldiv+1,___fldiv@b+1
  5451   00217A  C00E  F006         	movff	??___fldiv+2,___fldiv@b+2
  5452   00217E  C00F  F007         	movff	??___fldiv+3,___fldiv@b+3
  5453   002182  4A15               	infsnz	___fldiv@new_exp^0,f,c
  5454   002184  2A16               	incf	(___fldiv@new_exp+1)^0,f,c
  5455   002186                     l4569:
  5456   002186  BE16               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5457   002188  EFCE  F010         	goto	u5341
  5458   00218C  5016               	movf	(___fldiv@new_exp+1)^0,w,c
  5459   00218E  E108               	bnz	u5340
  5460   002190  2815               	incf	___fldiv@new_exp^0,w,c
  5461   002192  A0D8               	btfss	status,0,c
  5462   002194  EFCE  F010         	goto	u5341
  5463   002198  EFD0  F010         	goto	u5340
  5464   00219C                     u5341:
  5465   00219C  EFDB  F010         	goto	l4573
  5466   0021A0                     u5340:
  5467   0021A0  0E00               	movlw	0
  5468   0021A2  6E16               	movwf	(___fldiv@new_exp+1)^0,c
  5469   0021A4  6815               	setf	___fldiv@new_exp^0,c
  5470   0021A6  0E00               	movlw	0
  5471   0021A8  6E04               	movwf	___fldiv@b^0,c
  5472   0021AA  0E00               	movlw	0
  5473   0021AC  6E05               	movwf	(___fldiv@b+1)^0,c
  5474   0021AE  0E00               	movlw	0
  5475   0021B0  6E06               	movwf	(___fldiv@b+2)^0,c
  5476   0021B2  0E00               	movlw	0
  5477   0021B4  6E07               	movwf	(___fldiv@b+3)^0,c
  5478   0021B6                     l4573:
  5479   0021B6  BE16               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5480   0021B8  EFE8  F010         	goto	u5350
  5481   0021BC  5016               	movf	(___fldiv@new_exp+1)^0,w,c
  5482   0021BE  E106               	bnz	u5351
  5483   0021C0  0415               	decf	___fldiv@new_exp^0,w,c
  5484   0021C2  B0D8               	btfsc	status,0,c
  5485   0021C4  EFE6  F010         	goto	u5351
  5486   0021C8  EFE8  F010         	goto	u5350
  5487   0021CC                     u5351:
  5488   0021CC  EFF6  F010         	goto	l4577
  5489   0021D0                     u5350:
  5490   0021D0  0E00               	movlw	0
  5491   0021D2  6E16               	movwf	(___fldiv@new_exp+1)^0,c
  5492   0021D4  0E00               	movlw	0
  5493   0021D6  6E15               	movwf	___fldiv@new_exp^0,c
  5494   0021D8  0E00               	movlw	0
  5495   0021DA  6E04               	movwf	___fldiv@b^0,c
  5496   0021DC  0E00               	movlw	0
  5497   0021DE  6E05               	movwf	(___fldiv@b+1)^0,c
  5498   0021E0  0E00               	movlw	0
  5499   0021E2  6E06               	movwf	(___fldiv@b+2)^0,c
  5500   0021E4  0E00               	movlw	0
  5501   0021E6  6E07               	movwf	(___fldiv@b+3)^0,c
  5502   0021E8  0E00               	movlw	0
  5503   0021EA  6E14               	movwf	___fldiv@sign^0,c
  5504   0021EC                     l4577:
  5505   0021EC  C015  F01B         	movff	___fldiv@new_exp,___fldiv@bexp
  5506   0021F0  A01B               	btfss	___fldiv@bexp^0,0,c
  5507   0021F2  EFFD  F010         	goto	u5361
  5508   0021F6  EFFF  F010         	goto	u5360
  5509   0021FA                     u5361:
  5510   0021FA  EF02  F011         	goto	l4583
  5511   0021FE                     u5360:
  5512   0021FE  8E06               	bsf	(___fldiv@b+2)^0,7,c
  5513   002200  EF03  F011         	goto	l4585
  5514   002204                     l4583:
  5515   002204  9E06               	bcf	(___fldiv@b+2)^0,7,c
  5516   002206                     l4585:
  5517   002206  90D8               	bcf	status,0,c
  5518   002208  301B               	rrcf	___fldiv@bexp^0,w,c
  5519   00220A  6E07               	movwf	(___fldiv@b+3)^0,c
  5520   00220C  EFB9  F00F         	goto	l4499
  5521   002210                     l713:
  5522   002210  0012               	return		;funcret
  5523   002212                     __end_of___fldiv:
  5524                           	callstack 0
  5525                           
  5526 ;; *************** function _dtoa *****************
  5527 ;; Defined at:
  5528 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5529 ;; Parameters:    Size  Location     Type
  5530 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  5531 ;;		 -> sprintf@f(11), 
  5532 ;;  d               8   32[COMRAM] long long 
  5533 ;; Auto vars:     Size  Location     Type
  5534 ;;  n               8   54[COMRAM] long long 
  5535 ;;  i               2   63[COMRAM] int 
  5536 ;;  w               2   52[COMRAM] int 
  5537 ;;  p               2   50[COMRAM] int 
  5538 ;;  s               1   62[COMRAM] unsigned char 
  5539 ;; Return value:  Size  Location     Type
  5540 ;;                  1    wreg      void 
  5541 ;; Registers used:
  5542 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5543 ;; Tracked objects:
  5544 ;;		On entry : 0/0
  5545 ;;		On exit  : 0/0
  5546 ;;		Unchanged: 0/0
  5547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5548 ;;      Params:        10       0       0       0       0       0       0
  5549 ;;      Locals:        17       0       0       0       0       0       0
  5550 ;;      Temps:          8       0       0       0       0       0       0
  5551 ;;      Totals:        35       0       0       0       0       0       0
  5552 ;;Total ram usage:       35 bytes
  5553 ;; Hardware stack levels used: 1
  5554 ;; Hardware stack levels required when called: 6
  5555 ;; This function calls:
  5556 ;;		___aodiv
  5557 ;;		___aomod
  5558 ;;		_abs
  5559 ;;		_pad
  5560 ;; This function is called by:
  5561 ;;		_vfpfcnvrt
  5562 ;; This function uses a non-reentrant model
  5563 ;;
  5564                           
  5565                           	psect	text18
  5566   002212                     __ptext18:
  5567                           	callstack 0
  5568   002212                     _dtoa:
  5569                           	callstack 20
  5570   002212                     
  5571                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  5572   002212  C021  F037         	movff	dtoa@d,dtoa@n
  5573   002216  C022  F038         	movff	dtoa@d+1,dtoa@n+1
  5574   00221A  C023  F039         	movff	dtoa@d+2,dtoa@n+2
  5575   00221E  C024  F03A         	movff	dtoa@d+3,dtoa@n+3
  5576   002222  C025  F03B         	movff	dtoa@d+4,dtoa@n+4
  5577   002226  C026  F03C         	movff	dtoa@d+5,dtoa@n+5
  5578   00222A  C027  F03D         	movff	dtoa@d+6,dtoa@n+6
  5579   00222E  C028  F03E         	movff	dtoa@d+7,dtoa@n+7
  5580   002232                     
  5581                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  5582   002232  BE3E               	btfsc	(dtoa@n+7)^0,7,c
  5583   002234  EF1E  F011         	goto	u6011
  5584   002238  EF21  F011         	goto	u6010
  5585   00223C                     u6011:
  5586   00223C  0E01               	movlw	1
  5587   00223E  EF22  F011         	goto	u6020
  5588   002242                     u6010:
  5589   002242  0E00               	movlw	0
  5590   002244                     u6020:
  5591   002244  6E3F               	movwf	dtoa@s^0,c
  5592   002246                     
  5593                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  5594   002246  503F               	movf	dtoa@s^0,w,c
  5595   002248  B4D8               	btfsc	status,2,c
  5596   00224A  EF29  F011         	goto	u6031
  5597   00224E  EF2B  F011         	goto	u6030
  5598   002252                     u6031:
  5599   002252  EF3B  F011         	goto	l4935
  5600   002256                     u6030:
  5601   002256                     
  5602                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  5603   002256  1E3E               	comf	(dtoa@n+7)^0,f,c
  5604   002258  1E3D               	comf	(dtoa@n+6)^0,f,c
  5605   00225A  1E3C               	comf	(dtoa@n+5)^0,f,c
  5606   00225C  1E3B               	comf	(dtoa@n+4)^0,f,c
  5607   00225E  1E3A               	comf	(dtoa@n+3)^0,f,c
  5608   002260  1E39               	comf	(dtoa@n+2)^0,f,c
  5609   002262  1E38               	comf	(dtoa@n+1)^0,f,c
  5610   002264  6C37               	negf	dtoa@n^0,c
  5611   002266  0E00               	movlw	0
  5612   002268  2238               	addwfc	(dtoa@n+1)^0,f,c
  5613   00226A  2239               	addwfc	(dtoa@n+2)^0,f,c
  5614   00226C  223A               	addwfc	(dtoa@n+3)^0,f,c
  5615   00226E  223B               	addwfc	(dtoa@n+4)^0,f,c
  5616   002270  223C               	addwfc	(dtoa@n+5)^0,f,c
  5617   002272  223D               	addwfc	(dtoa@n+6)^0,f,c
  5618   002274  223E               	addwfc	(dtoa@n+7)^0,f,c
  5619   002276                     l4935:
  5620                           
  5621                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 458:     if (!(pr
      +                          ec < 0)) {
  5622   002276  BE78               	btfsc	(_prec+1)^0,7,c
  5623   002278  EF40  F011         	goto	u6041
  5624   00227C  EF42  F011         	goto	u6040
  5625   002280                     u6041:
  5626   002280  EF43  F011         	goto	l4939
  5627   002284                     u6040:
  5628   002284                     
  5629                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 459:         flag
      +                          s &= ~(1 << 1);
  5630   002284  9279               	bcf	_flags^0,1,c
  5631   002286                     l4939:
  5632                           
  5633                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  5634   002286  BE78               	btfsc	(_prec+1)^0,7,c
  5635   002288  EF50  F011         	goto	u6050
  5636   00228C  5078               	movf	(_prec+1)^0,w,c
  5637   00228E  E106               	bnz	u6051
  5638   002290  0477               	decf	_prec^0,w,c
  5639   002292  B0D8               	btfsc	status,0,c
  5640   002294  EF4E  F011         	goto	u6051
  5641   002298  EF50  F011         	goto	u6050
  5642   00229C                     u6051:
  5643   00229C  EF56  F011         	goto	l857
  5644   0022A0                     u6050:
  5645   0022A0  0E00               	movlw	0
  5646   0022A2  6E34               	movwf	(dtoa@p+1)^0,c
  5647   0022A4  0E01               	movlw	1
  5648   0022A6  6E33               	movwf	dtoa@p^0,c
  5649   0022A8  EF5A  F011         	goto	l859
  5650   0022AC                     l857:
  5651   0022AC  C077  F033         	movff	_prec,dtoa@p
  5652   0022B0  C078  F034         	movff	_prec+1,dtoa@p+1
  5653   0022B4                     l859:
  5654                           
  5655                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  5656   0022B4  C094  F035         	movff	_width,dtoa@w
  5657   0022B8  C095  F036         	movff	_width+1,dtoa@w+1
  5658   0022BC                     
  5659                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  5660   0022BC  503F               	movf	dtoa@s^0,w,c
  5661   0022BE  B4D8               	btfsc	status,2,c
  5662   0022C0  EF64  F011         	goto	u6061
  5663   0022C4  EF66  F011         	goto	u6060
  5664   0022C8                     u6061:
  5665   0022C8  EF7D  F011         	goto	l860
  5666   0022CC                     u6060:
  5667   0022CC                     
  5668                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  5669   0022CC  0635               	decf	dtoa@w^0,f,c
  5670   0022CE  A0D8               	btfss	status,0,c
  5671   0022D0  0636               	decf	(dtoa@w+1)^0,f,c
  5672   0022D2                     
  5673                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  5674   0022D2  503F               	movf	dtoa@s^0,w,c
  5675   0022D4  A4D8               	btfss	status,2,c
  5676   0022D6  EF6F  F011         	goto	u6071
  5677   0022DA  EF71  F011         	goto	u6070
  5678   0022DE                     u6071:
  5679   0022DE  EF77  F011         	goto	l4951
  5680   0022E2                     u6070:
  5681   0022E2  0E00               	movlw	0
  5682   0022E4  6E32               	movwf	(_dtoa$1006+1)^0,c
  5683   0022E6  0E2B               	movlw	43
  5684   0022E8  6E31               	movwf	_dtoa$1006^0,c
  5685   0022EA  EF7B  F011         	goto	l4953
  5686   0022EE                     l4951:
  5687   0022EE  0E00               	movlw	0
  5688   0022F0  6E32               	movwf	(_dtoa$1006+1)^0,c
  5689   0022F2  0E2D               	movlw	45
  5690   0022F4  6E31               	movwf	_dtoa$1006^0,c
  5691   0022F6                     l4953:
  5692   0022F6  C031  F03F         	movff	_dtoa$1006,dtoa@s
  5693   0022FA                     l860:
  5694                           
  5695                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  5696   0022FA  0E00               	movlw	0
  5697   0022FC  6E41               	movwf	(dtoa@i+1)^0,c
  5698   0022FE  0E4F               	movlw	79
  5699   002300  6E40               	movwf	dtoa@i^0,c
  5700   002302                     
  5701                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  5702   002302  0E00               	movlw	0
  5703   002304  0101               	movlb	1	; () banked
  5704   002306  6F4F               	movwf	(_dbuf+79)& (0+255),b
  5705                           
  5706                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5707   002308  EF02  F012         	goto	l4967
  5708   00230C                     l4957:
  5709                           
  5710                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  5711   00230C  0640               	decf	dtoa@i^0,f,c
  5712   00230E  A0D8               	btfss	status,0,c
  5713   002310  0641               	decf	(dtoa@i+1)^0,f,c
  5714   002312                     
  5715                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5716   002312  0E00               	movlw	low _dbuf
  5717   002314  2440               	addwf	dtoa@i^0,w,c
  5718   002316  6ED9               	movwf	fsr2l,c
  5719   002318  0E01               	movlw	high _dbuf
  5720   00231A  2041               	addwfc	(dtoa@i+1)^0,w,c
  5721   00231C  6EDA               	movwf	fsr2h,c
  5722   00231E  C037  F004         	movff	dtoa@n,___aomod@dividend
  5723   002322  C038  F005         	movff	dtoa@n+1,___aomod@dividend+1
  5724   002326  C039  F006         	movff	dtoa@n+2,___aomod@dividend+2
  5725   00232A  C03A  F007         	movff	dtoa@n+3,___aomod@dividend+3
  5726   00232E  C03B  F008         	movff	dtoa@n+4,___aomod@dividend+4
  5727   002332  C03C  F009         	movff	dtoa@n+5,___aomod@dividend+5
  5728   002336  C03D  F00A         	movff	dtoa@n+6,___aomod@dividend+6
  5729   00233A  C03E  F00B         	movff	dtoa@n+7,___aomod@dividend+7
  5730   00233E  0E0A               	movlw	10
  5731   002340  6E0C               	movwf	___aomod@divisor^0,c
  5732   002342  0E00               	movlw	0
  5733   002344  6E0D               	movwf	(___aomod@divisor+1)^0,c
  5734   002346  0E00               	movlw	0
  5735   002348  6E0E               	movwf	(___aomod@divisor+2)^0,c
  5736   00234A  0E00               	movlw	0
  5737   00234C  6E0F               	movwf	(___aomod@divisor+3)^0,c
  5738   00234E  0E00               	movlw	0
  5739   002350  6E10               	movwf	(___aomod@divisor+4)^0,c
  5740   002352  0E00               	movlw	0
  5741   002354  6E11               	movwf	(___aomod@divisor+5)^0,c
  5742   002356  0E00               	movlw	0
  5743   002358  6E12               	movwf	(___aomod@divisor+6)^0,c
  5744   00235A  0E00               	movlw	0
  5745   00235C  6E13               	movwf	(___aomod@divisor+7)^0,c
  5746   00235E  EC0A  F015         	call	___aomod	;wreg free
  5747   002362  C004  F029         	movff	?___aomod,??_dtoa
  5748   002366  C005  F02A         	movff	?___aomod+1,??_dtoa+1
  5749   00236A  C006  F02B         	movff	?___aomod+2,??_dtoa+2
  5750   00236E  C007  F02C         	movff	?___aomod+3,??_dtoa+3
  5751   002372  C008  F02D         	movff	?___aomod+4,??_dtoa+4
  5752   002376  C009  F02E         	movff	?___aomod+5,??_dtoa+5
  5753   00237A  C00A  F02F         	movff	?___aomod+6,??_dtoa+6
  5754   00237E  C00B  F030         	movff	?___aomod+7,??_dtoa+7
  5755   002382  C029  F016         	movff	??_dtoa,abs@a
  5756   002386  C02A  F017         	movff	??_dtoa+1,abs@a+1
  5757   00238A  ECF2  F01A         	call	_abs	;wreg free
  5758   00238E  5016               	movf	?_abs^0,w,c
  5759   002390  0F30               	addlw	48
  5760   002392  6EDF               	movwf	indf2,c
  5761   002394                     
  5762                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  5763   002394  0633               	decf	dtoa@p^0,f,c
  5764   002396  A0D8               	btfss	status,0,c
  5765   002398  0634               	decf	(dtoa@p+1)^0,f,c
  5766   00239A                     
  5767                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  5768   00239A  0635               	decf	dtoa@w^0,f,c
  5769   00239C  A0D8               	btfss	status,0,c
  5770   00239E  0636               	decf	(dtoa@w+1)^0,f,c
  5771   0023A0                     
  5772                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  5773   0023A0  C037  F004         	movff	dtoa@n,___aodiv@dividend
  5774   0023A4  C038  F005         	movff	dtoa@n+1,___aodiv@dividend+1
  5775   0023A8  C039  F006         	movff	dtoa@n+2,___aodiv@dividend+2
  5776   0023AC  C03A  F007         	movff	dtoa@n+3,___aodiv@dividend+3
  5777   0023B0  C03B  F008         	movff	dtoa@n+4,___aodiv@dividend+4
  5778   0023B4  C03C  F009         	movff	dtoa@n+5,___aodiv@dividend+5
  5779   0023B8  C03D  F00A         	movff	dtoa@n+6,___aodiv@dividend+6
  5780   0023BC  C03E  F00B         	movff	dtoa@n+7,___aodiv@dividend+7
  5781   0023C0  0E0A               	movlw	10
  5782   0023C2  6E0C               	movwf	___aodiv@divisor^0,c
  5783   0023C4  0E00               	movlw	0
  5784   0023C6  6E0D               	movwf	(___aodiv@divisor+1)^0,c
  5785   0023C8  0E00               	movlw	0
  5786   0023CA  6E0E               	movwf	(___aodiv@divisor+2)^0,c
  5787   0023CC  0E00               	movlw	0
  5788   0023CE  6E0F               	movwf	(___aodiv@divisor+3)^0,c
  5789   0023D0  0E00               	movlw	0
  5790   0023D2  6E10               	movwf	(___aodiv@divisor+4)^0,c
  5791   0023D4  0E00               	movlw	0
  5792   0023D6  6E11               	movwf	(___aodiv@divisor+5)^0,c
  5793   0023D8  0E00               	movlw	0
  5794   0023DA  6E12               	movwf	(___aodiv@divisor+6)^0,c
  5795   0023DC  0E00               	movlw	0
  5796   0023DE  6E13               	movwf	(___aodiv@divisor+7)^0,c
  5797   0023E0  EC46  F014         	call	___aodiv	;wreg free
  5798   0023E4  C004  F037         	movff	?___aodiv,dtoa@n
  5799   0023E8  C005  F038         	movff	?___aodiv+1,dtoa@n+1
  5800   0023EC  C006  F039         	movff	?___aodiv+2,dtoa@n+2
  5801   0023F0  C007  F03A         	movff	?___aodiv+3,dtoa@n+3
  5802   0023F4  C008  F03B         	movff	?___aodiv+4,dtoa@n+4
  5803   0023F8  C009  F03C         	movff	?___aodiv+5,dtoa@n+5
  5804   0023FC  C00A  F03D         	movff	?___aodiv+6,dtoa@n+6
  5805   002400  C00B  F03E         	movff	?___aodiv+7,dtoa@n+7
  5806   002404                     l4967:
  5807                           
  5808                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5809   002404  BE41               	btfsc	(dtoa@i+1)^0,7,c
  5810   002406  EF0D  F012         	goto	u6081
  5811   00240A  5041               	movf	(dtoa@i+1)^0,w,c
  5812   00240C  E108               	bnz	u6080
  5813   00240E  0440               	decf	dtoa@i^0,w,c
  5814   002410  A0D8               	btfss	status,0,c
  5815   002412  EF0D  F012         	goto	u6081
  5816   002416  EF0F  F012         	goto	u6080
  5817   00241A                     u6081:
  5818   00241A  EF3F  F012         	goto	l4977
  5819   00241E                     u6080:
  5820   00241E  5037               	movf	dtoa@n^0,w,c
  5821   002420  1038               	iorwf	(dtoa@n+1)^0,w,c
  5822   002422  1039               	iorwf	(dtoa@n+2)^0,w,c
  5823   002424  103A               	iorwf	(dtoa@n+3)^0,w,c
  5824   002426  103B               	iorwf	(dtoa@n+4)^0,w,c
  5825   002428  103C               	iorwf	(dtoa@n+5)^0,w,c
  5826   00242A  103D               	iorwf	(dtoa@n+6)^0,w,c
  5827   00242C  103E               	iorwf	(dtoa@n+7)^0,w,c
  5828   00242E  A4D8               	btfss	status,2,c
  5829   002430  EF1C  F012         	goto	u6091
  5830   002434  EF1E  F012         	goto	u6090
  5831   002438                     u6091:
  5832   002438  EF86  F011         	goto	l4957
  5833   00243C                     u6090:
  5834   00243C  BE34               	btfsc	(dtoa@p+1)^0,7,c
  5835   00243E  EF2B  F012         	goto	u6100
  5836   002442  5034               	movf	(dtoa@p+1)^0,w,c
  5837   002444  E106               	bnz	u6101
  5838   002446  0433               	decf	dtoa@p^0,w,c
  5839   002448  B0D8               	btfsc	status,0,c
  5840   00244A  EF29  F012         	goto	u6101
  5841   00244E  EF2B  F012         	goto	u6100
  5842   002452                     u6101:
  5843   002452  EF86  F011         	goto	l4957
  5844   002456                     u6100:
  5845   002456  BE36               	btfsc	(dtoa@w+1)^0,7,c
  5846   002458  EF36  F012         	goto	u6111
  5847   00245C  5036               	movf	(dtoa@w+1)^0,w,c
  5848   00245E  E108               	bnz	u6110
  5849   002460  0435               	decf	dtoa@w^0,w,c
  5850   002462  A0D8               	btfss	status,0,c
  5851   002464  EF36  F012         	goto	u6111
  5852   002468  EF38  F012         	goto	u6110
  5853   00246C                     u6111:
  5854   00246C  EF3F  F012         	goto	l4977
  5855   002470                     u6110:
  5856   002470  B279               	btfsc	_flags^0,1,c
  5857   002472  EF3D  F012         	goto	u6121
  5858   002476  EF3F  F012         	goto	u6120
  5859   00247A                     u6121:
  5860   00247A  EF86  F011         	goto	l4957
  5861   00247E                     u6120:
  5862   00247E                     l4977:
  5863                           
  5864                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  5865   00247E  503F               	movf	dtoa@s^0,w,c
  5866   002480  B4D8               	btfsc	status,2,c
  5867   002482  EF45  F012         	goto	u6131
  5868   002486  EF47  F012         	goto	u6130
  5869   00248A                     u6131:
  5870   00248A  EF52  F012         	goto	l4983
  5871   00248E                     u6130:
  5872   00248E                     
  5873                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  5874   00248E  0640               	decf	dtoa@i^0,f,c
  5875   002490  A0D8               	btfss	status,0,c
  5876   002492  0641               	decf	(dtoa@i+1)^0,f,c
  5877   002494                     
  5878                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  5879   002494  0E00               	movlw	low _dbuf
  5880   002496  2440               	addwf	dtoa@i^0,w,c
  5881   002498  6ED9               	movwf	fsr2l,c
  5882   00249A  0E01               	movlw	high _dbuf
  5883   00249C  2041               	addwfc	(dtoa@i+1)^0,w,c
  5884   00249E  6EDA               	movwf	fsr2h,c
  5885   0024A0  C03F  FFDF         	movff	dtoa@s,indf2
  5886   0024A4                     l4983:
  5887                           
  5888                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  5889   0024A4  C01F  F014         	movff	dtoa@fp,pad@fp
  5890   0024A8  C020  F015         	movff	dtoa@fp+1,pad@fp+1
  5891   0024AC  0E00               	movlw	low _dbuf
  5892   0024AE  2440               	addwf	dtoa@i^0,w,c
  5893   0024B0  6E16               	movwf	pad@buf^0,c
  5894   0024B2  0E01               	movlw	high _dbuf
  5895   0024B4  2041               	addwfc	(dtoa@i+1)^0,w,c
  5896   0024B6  6E17               	movwf	(pad@buf+1)^0,c
  5897   0024B8  C035  F018         	movff	dtoa@w,pad@p
  5898   0024BC  C036  F019         	movff	dtoa@w+1,pad@p+1
  5899   0024C0  ECFC  F018         	call	_pad	;wreg free
  5900   0024C4  0012               	return		;funcret
  5901   0024C6                     __end_of_dtoa:
  5902                           	callstack 0
  5903                           
  5904 ;; *************** function _pad *****************
  5905 ;; Defined at:
  5906 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5907 ;; Parameters:    Size  Location     Type
  5908 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
  5909 ;;		 -> sprintf@f(11), 
  5910 ;;  buf             2   21[COMRAM] PTR unsigned char 
  5911 ;;		 -> dbuf(80), 
  5912 ;;  p               2   23[COMRAM] int 
  5913 ;; Auto vars:     Size  Location     Type
  5914 ;;  w               2   28[COMRAM] int 
  5915 ;;  i               2   26[COMRAM] int 
  5916 ;; Return value:  Size  Location     Type
  5917 ;;                  1    wreg      void 
  5918 ;; Registers used:
  5919 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5920 ;; Tracked objects:
  5921 ;;		On entry : 0/0
  5922 ;;		On exit  : 0/0
  5923 ;;		Unchanged: 0/0
  5924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5925 ;;      Params:         6       0       0       0       0       0       0
  5926 ;;      Locals:         4       0       0       0       0       0       0
  5927 ;;      Temps:          1       0       0       0       0       0       0
  5928 ;;      Totals:        11       0       0       0       0       0       0
  5929 ;;Total ram usage:       11 bytes
  5930 ;; Hardware stack levels used: 1
  5931 ;; Hardware stack levels required when called: 5
  5932 ;; This function calls:
  5933 ;;		_fputc
  5934 ;;		_fputs
  5935 ;; This function is called by:
  5936 ;;		_dtoa
  5937 ;;		_efgtoa
  5938 ;; This function uses a non-reentrant model
  5939 ;;
  5940                           
  5941                           	psect	text19
  5942   0031F8                     __ptext19:
  5943                           	callstack 0
  5944   0031F8                     _pad:
  5945                           	callstack 20
  5946   0031F8                     
  5947                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 139:     if (flags & (1 << 0)) {
  5948   0031F8  A079               	btfss	_flags^0,0,c
  5949   0031FA  EF01  F019         	goto	u5721
  5950   0031FE  EF03  F019         	goto	u5720
  5951   003202                     u5721:
  5952   003202  EF0D  F019         	goto	l4823
  5953   003206                     u5720:
  5954   003206                     
  5955                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 140:         fput
      +                          s((const char *)buf, fp);
  5956   003206  C016  F00D         	movff	pad@buf,fputs@s
  5957   00320A  C017  F00E         	movff	pad@buf+1,fputs@s+1
  5958   00320E  C014  F00F         	movff	pad@fp,fputs@fp
  5959   003212  C015  F010         	movff	pad@fp+1,fputs@fp+1
  5960   003216  ECB0  F01A         	call	_fputs	;wreg free
  5961   00321A                     l4823:
  5962                           
  5963                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 145:     w = (p <
      +                           0) ? 0 : p;
  5964   00321A  BE19               	btfsc	(pad@p+1)^0,7,c
  5965   00321C  EF12  F019         	goto	u5731
  5966   003220  EF14  F019         	goto	u5730
  5967   003224                     u5731:
  5968   003224  EF1A  F019         	goto	l4827
  5969   003228                     u5730:
  5970   003228  C018  F01D         	movff	pad@p,pad@w
  5971   00322C  C019  F01E         	movff	pad@p+1,pad@w+1
  5972   003230  EF1E  F019         	goto	l846
  5973   003234                     l4827:
  5974   003234  0E00               	movlw	0
  5975   003236  6E1E               	movwf	(pad@w+1)^0,c
  5976   003238  0E00               	movlw	0
  5977   00323A  6E1D               	movwf	pad@w^0,c
  5978   00323C                     l846:
  5979                           
  5980                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  5981   00323C  0E00               	movlw	0
  5982   00323E  6E1C               	movwf	(pad@i+1)^0,c
  5983   003240  0E00               	movlw	0
  5984   003242  6E1B               	movwf	pad@i^0,c
  5985                           
  5986                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5987   003244  EF30  F019         	goto	l4833
  5988   003248                     l4829:
  5989                           
  5990                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  5991   003248  0E00               	movlw	0
  5992   00324A  6E05               	movwf	(fputc@c+1)^0,c
  5993   00324C  0E20               	movlw	32
  5994   00324E  6E04               	movwf	fputc@c^0,c
  5995   003250  C014  F006         	movff	pad@fp,fputc@fp
  5996   003254  C015  F007         	movff	pad@fp+1,fputc@fp+1
  5997   003258  ECE5  F017         	call	_fputc	;wreg free
  5998   00325C                     
  5999                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  6000   00325C  4A1B               	infsnz	pad@i^0,f,c
  6001   00325E  2A1C               	incf	(pad@i+1)^0,f,c
  6002   003260                     l4833:
  6003                           
  6004                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  6005   003260  501D               	movf	pad@w^0,w,c
  6006   003262  5C1B               	subwf	pad@i^0,w,c
  6007   003264  501C               	movf	(pad@i+1)^0,w,c
  6008   003266  0A80               	xorlw	128
  6009   003268  6E1A               	movwf	??_pad^0,c
  6010   00326A  501E               	movf	(pad@w+1)^0,w,c
  6011   00326C  0A80               	xorlw	128
  6012   00326E  581A               	subwfb	??_pad^0,w,c
  6013   003270  A0D8               	btfss	status,0,c
  6014   003272  EF3D  F019         	goto	u5741
  6015   003276  EF3F  F019         	goto	u5740
  6016   00327A                     u5741:
  6017   00327A  EF24  F019         	goto	l4829
  6018   00327E                     u5740:
  6019   00327E                     
  6020                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 154:     if (!(fl
      +                          ags & (1 << 0))) {
  6021   00327E  B079               	btfsc	_flags^0,0,c
  6022   003280  EF44  F019         	goto	u5751
  6023   003284  EF46  F019         	goto	u5750
  6024   003288                     u5751:
  6025   003288  EF50  F019         	goto	l851
  6026   00328C                     u5750:
  6027   00328C                     
  6028                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  6029   00328C  C016  F00D         	movff	pad@buf,fputs@s
  6030   003290  C017  F00E         	movff	pad@buf+1,fputs@s+1
  6031   003294  C014  F00F         	movff	pad@fp,fputs@fp
  6032   003298  C015  F010         	movff	pad@fp+1,fputs@fp+1
  6033   00329C  ECB0  F01A         	call	_fputs	;wreg free
  6034   0032A0                     l851:
  6035   0032A0  0012               	return		;funcret
  6036   0032A2                     __end_of_pad:
  6037                           	callstack 0
  6038                           
  6039 ;; *************** function _fputs *****************
  6040 ;; Defined at:
  6041 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  6042 ;; Parameters:    Size  Location     Type
  6043 ;;  s               2   12[COMRAM] PTR const unsigned char 
  6044 ;;		 -> dbuf(80), 
  6045 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
  6046 ;;		 -> sprintf@f(11), 
  6047 ;; Auto vars:     Size  Location     Type
  6048 ;;  i               2   17[COMRAM] int 
  6049 ;;  c               1   16[COMRAM] unsigned char 
  6050 ;; Return value:  Size  Location     Type
  6051 ;;                  2   12[COMRAM] int 
  6052 ;; Registers used:
  6053 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6054 ;; Tracked objects:
  6055 ;;		On entry : 0/0
  6056 ;;		On exit  : 0/0
  6057 ;;		Unchanged: 0/0
  6058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6059 ;;      Params:         4       0       0       0       0       0       0
  6060 ;;      Locals:         3       0       0       0       0       0       0
  6061 ;;      Temps:          0       0       0       0       0       0       0
  6062 ;;      Totals:         7       0       0       0       0       0       0
  6063 ;;Total ram usage:        7 bytes
  6064 ;; Hardware stack levels used: 1
  6065 ;; Hardware stack levels required when called: 4
  6066 ;; This function calls:
  6067 ;;		_fputc
  6068 ;; This function is called by:
  6069 ;;		_pad
  6070 ;; This function uses a non-reentrant model
  6071 ;;
  6072                           
  6073                           	psect	text20
  6074   003560                     __ptext20:
  6075                           	callstack 0
  6076   003560                     _fputs:
  6077                           	callstack 20
  6078   003560  0E00               	movlw	0
  6079   003562  6E13               	movwf	(fputs@i+1)^0,c
  6080   003564  0E00               	movlw	0
  6081   003566  6E12               	movwf	fputs@i^0,c
  6082   003568  EFC1  F01A         	goto	l4367
  6083   00356C                     l4363:
  6084   00356C  C011  F004         	movff	fputs@c,fputc@c
  6085   003570  6A05               	clrf	(fputc@c+1)^0,c
  6086   003572  C00F  F006         	movff	fputs@fp,fputc@fp
  6087   003576  C010  F007         	movff	fputs@fp+1,fputc@fp+1
  6088   00357A  ECE5  F017         	call	_fputc	;wreg free
  6089   00357E  4A12               	infsnz	fputs@i^0,f,c
  6090   003580  2A13               	incf	(fputs@i+1)^0,f,c
  6091   003582                     l4367:
  6092   003582  5012               	movf	fputs@i^0,w,c
  6093   003584  240D               	addwf	fputs@s^0,w,c
  6094   003586  6ED9               	movwf	fsr2l,c
  6095   003588  5013               	movf	(fputs@i+1)^0,w,c
  6096   00358A  200E               	addwfc	(fputs@s+1)^0,w,c
  6097   00358C  6EDA               	movwf	fsr2h,c
  6098   00358E  50DF               	movf	indf2,w,c
  6099   003590  6E11               	movwf	fputs@c^0,c
  6100   003592  5011               	movf	fputs@c^0,w,c
  6101   003594  A4D8               	btfss	status,2,c
  6102   003596  EFCF  F01A         	goto	u5001
  6103   00359A  EFD1  F01A         	goto	u5000
  6104   00359E                     u5001:
  6105   00359E  EFB6  F01A         	goto	l4363
  6106   0035A2                     u5000:
  6107   0035A2  0012               	return		;funcret
  6108   0035A4                     __end_of_fputs:
  6109                           	callstack 0
  6110                           
  6111 ;; *************** function _fputc *****************
  6112 ;; Defined at:
  6113 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  6114 ;; Parameters:    Size  Location     Type
  6115 ;;  c               2    3[COMRAM] int 
  6116 ;;  fp              2    5[COMRAM] PTR struct _IO_FILE
  6117 ;;		 -> sprintf@f(11), 
  6118 ;; Auto vars:     Size  Location     Type
  6119 ;;		None
  6120 ;; Return value:  Size  Location     Type
  6121 ;;                  2    3[COMRAM] int 
  6122 ;; Registers used:
  6123 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6124 ;; Tracked objects:
  6125 ;;		On entry : 0/0
  6126 ;;		On exit  : 0/0
  6127 ;;		Unchanged: 0/0
  6128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6129 ;;      Params:         4       0       0       0       0       0       0
  6130 ;;      Locals:         0       0       0       0       0       0       0
  6131 ;;      Temps:          5       0       0       0       0       0       0
  6132 ;;      Totals:         9       0       0       0       0       0       0
  6133 ;;Total ram usage:        9 bytes
  6134 ;; Hardware stack levels used: 1
  6135 ;; Hardware stack levels required when called: 3
  6136 ;; This function calls:
  6137 ;;		_putch
  6138 ;; This function is called by:
  6139 ;;		_pad
  6140 ;;		_vfpfcnvrt
  6141 ;;		_fputs
  6142 ;; This function uses a non-reentrant model
  6143 ;;
  6144                           
  6145                           	psect	text21
  6146   002FCA                     __ptext21:
  6147                           	callstack 0
  6148   002FCA                     _fputc:
  6149                           	callstack 23
  6150   002FCA  5006               	movf	fputc@fp^0,w,c
  6151   002FCC  1007               	iorwf	(fputc@fp+1)^0,w,c
  6152   002FCE  B4D8               	btfsc	status,2,c
  6153   002FD0  EFEC  F017         	goto	u4571
  6154   002FD4  EFEE  F017         	goto	u4570
  6155   002FD8                     u4571:
  6156   002FD8  EFF7  F017         	goto	l4149
  6157   002FDC                     u4570:
  6158   002FDC  5006               	movf	fputc@fp^0,w,c
  6159   002FDE  1007               	iorwf	(fputc@fp+1)^0,w,c
  6160   002FE0  A4D8               	btfss	status,2,c
  6161   002FE2  EFF5  F017         	goto	u4581
  6162   002FE6  EFF7  F017         	goto	u4580
  6163   002FEA                     u4581:
  6164   002FEA  EFFC  F017         	goto	l4151
  6165   002FEE                     u4580:
  6166   002FEE                     l4149:
  6167   002FEE  5004               	movf	fputc@c^0,w,c
  6168   002FF0  ECCB  F01B         	call	_putch
  6169   002FF4  EF49  F018         	goto	l1078
  6170   002FF8                     l4151:
  6171   002FF8  EE20 F009          	lfsr	2,9
  6172   002FFC  5006               	movf	fputc@fp^0,w,c
  6173   002FFE  26D9               	addwf	fsr2l,f,c
  6174   003000  5007               	movf	(fputc@fp+1)^0,w,c
  6175   003002  22DA               	addwfc	fsr2h,f,c
  6176   003004  50DE               	movf	postinc2,w,c
  6177   003006  10DE               	iorwf	postinc2,w,c
  6178   003008  B4D8               	btfsc	status,2,c
  6179   00300A  EF09  F018         	goto	u4591
  6180   00300E  EF0B  F018         	goto	u4590
  6181   003012                     u4591:
  6182   003012  EF26  F018         	goto	l4155
  6183   003016                     u4590:
  6184   003016  EE20 F009          	lfsr	2,9
  6185   00301A  5006               	movf	fputc@fp^0,w,c
  6186   00301C  26D9               	addwf	fsr2l,f,c
  6187   00301E  5007               	movf	(fputc@fp+1)^0,w,c
  6188   003020  22DA               	addwfc	fsr2h,f,c
  6189   003022  EE10 F003          	lfsr	1,3
  6190   003026  5006               	movf	fputc@fp^0,w,c
  6191   003028  26E1               	addwf	fsr1l,f,c
  6192   00302A  5007               	movf	(fputc@fp+1)^0,w,c
  6193   00302C  22E2               	addwfc	fsr1h,f,c
  6194   00302E  50DE               	movf	postinc2,w,c
  6195   003030  5CE6               	subwf	postinc1,w,c
  6196   003032  50E6               	movf	postinc1,w,c
  6197   003034  0A80               	xorlw	128
  6198   003036  6E0C               	movwf	(??_fputc+4)^0,c
  6199   003038  50DE               	movf	postinc2,w,c
  6200   00303A  0A80               	xorlw	128
  6201   00303C  580C               	subwfb	(??_fputc+4)^0,w,c
  6202   00303E  B0D8               	btfsc	status,0,c
  6203   003040  EF24  F018         	goto	u4601
  6204   003044  EF26  F018         	goto	u4600
  6205   003048                     u4601:
  6206   003048  EF49  F018         	goto	l1078
  6207   00304C                     u4600:
  6208   00304C                     l4155:
  6209   00304C  EE20 F003          	lfsr	2,3
  6210   003050  5006               	movf	fputc@fp^0,w,c
  6211   003052  26D9               	addwf	fsr2l,f,c
  6212   003054  5007               	movf	(fputc@fp+1)^0,w,c
  6213   003056  22DA               	addwfc	fsr2h,f,c
  6214   003058  CFDE F008          	movff	postinc2,??_fputc
  6215   00305C  CFDD F009          	movff	postdec2,??_fputc+1
  6216   003060  C006  FFD9         	movff	fputc@fp,fsr2l
  6217   003064  C007  FFDA         	movff	fputc@fp+1,fsr2h
  6218   003068  CFDE F00A          	movff	postinc2,??_fputc+2
  6219   00306C  CFDD F00B          	movff	postdec2,??_fputc+3
  6220   003070  5008               	movf	??_fputc^0,w,c
  6221   003072  240A               	addwf	(??_fputc+2)^0,w,c
  6222   003074  6ED9               	movwf	fsr2l,c
  6223   003076  5009               	movf	(??_fputc+1)^0,w,c
  6224   003078  200B               	addwfc	(??_fputc+3)^0,w,c
  6225   00307A  6EDA               	movwf	fsr2h,c
  6226   00307C  C004  FFDF         	movff	fputc@c,indf2
  6227   003080  EE20 F003          	lfsr	2,3
  6228   003084  5006               	movf	fputc@fp^0,w,c
  6229   003086  26D9               	addwf	fsr2l,f,c
  6230   003088  5007               	movf	(fputc@fp+1)^0,w,c
  6231   00308A  22DA               	addwfc	fsr2h,f,c
  6232   00308C  2ADE               	incf	postinc2,f,c
  6233   00308E  0E00               	movlw	0
  6234   003090  22DD               	addwfc	postdec2,f,c
  6235   003092                     l1078:
  6236   003092  0012               	return		;funcret
  6237   003094                     __end_of_fputc:
  6238                           	callstack 0
  6239                           
  6240 ;; *************** function _putch *****************
  6241 ;; Defined at:
  6242 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  6243 ;; Parameters:    Size  Location     Type
  6244 ;;  c               1    wreg     unsigned char 
  6245 ;; Auto vars:     Size  Location     Type
  6246 ;;  c               1    0[COMRAM] unsigned char 
  6247 ;; Return value:  Size  Location     Type
  6248 ;;                  1    wreg      void 
  6249 ;; Registers used:
  6250 ;;		wreg
  6251 ;; Tracked objects:
  6252 ;;		On entry : 0/0
  6253 ;;		On exit  : 0/0
  6254 ;;		Unchanged: 0/0
  6255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6256 ;;      Params:         0       0       0       0       0       0       0
  6257 ;;      Locals:         0       0       0       0       0       0       0
  6258 ;;      Temps:          0       0       0       0       0       0       0
  6259 ;;      Totals:         0       0       0       0       0       0       0
  6260 ;;Total ram usage:        0 bytes
  6261 ;; Hardware stack levels used: 1
  6262 ;; Hardware stack levels required when called: 2
  6263 ;; This function calls:
  6264 ;;		Nothing
  6265 ;; This function is called by:
  6266 ;;		_fputc
  6267 ;; This function uses a non-reentrant model
  6268 ;;
  6269                           
  6270                           	psect	text22
  6271   003796                     __ptext22:
  6272                           	callstack 0
  6273   003796                     _putch:
  6274                           	callstack 23
  6275   003796  0012               	return		;funcret
  6276   003798                     __end_of_putch:
  6277                           	callstack 0
  6278                           
  6279 ;; *************** function _abs *****************
  6280 ;; Defined at:
  6281 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  6282 ;; Parameters:    Size  Location     Type
  6283 ;;  a               2   21[COMRAM] int 
  6284 ;; Auto vars:     Size  Location     Type
  6285 ;;		None
  6286 ;; Return value:  Size  Location     Type
  6287 ;;                  2   21[COMRAM] int 
  6288 ;; Registers used:
  6289 ;;		wreg, status,2, status,0
  6290 ;; Tracked objects:
  6291 ;;		On entry : 0/0
  6292 ;;		On exit  : 0/0
  6293 ;;		Unchanged: 0/0
  6294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6295 ;;      Params:         2       0       0       0       0       0       0
  6296 ;;      Locals:         0       0       0       0       0       0       0
  6297 ;;      Temps:          2       0       0       0       0       0       0
  6298 ;;      Totals:         4       0       0       0       0       0       0
  6299 ;;Total ram usage:        4 bytes
  6300 ;; Hardware stack levels used: 1
  6301 ;; Hardware stack levels required when called: 2
  6302 ;; This function calls:
  6303 ;;		Nothing
  6304 ;; This function is called by:
  6305 ;;		_dtoa
  6306 ;; This function uses a non-reentrant model
  6307 ;;
  6308                           
  6309                           	psect	text23
  6310   0035E4                     __ptext23:
  6311                           	callstack 0
  6312   0035E4                     _abs:
  6313                           	callstack 23
  6314   0035E4  BE17               	btfsc	(abs@a+1)^0,7,c
  6315   0035E6  EFFF  F01A         	goto	u5760
  6316   0035EA  5017               	movf	(abs@a+1)^0,w,c
  6317   0035EC  E106               	bnz	u5761
  6318   0035EE  0416               	decf	abs@a^0,w,c
  6319   0035F0  B0D8               	btfsc	status,0,c
  6320   0035F2  EFFD  F01A         	goto	u5761
  6321   0035F6  EFFF  F01A         	goto	u5760
  6322   0035FA                     u5761:
  6323   0035FA  EF0D  F01B         	goto	l998
  6324   0035FE                     u5760:
  6325   0035FE  C016  F018         	movff	abs@a,??_abs
  6326   003602  C017  F019         	movff	abs@a+1,??_abs+1
  6327   003606  1E18               	comf	??_abs^0,f,c
  6328   003608  1E19               	comf	(??_abs+1)^0,f,c
  6329   00360A  4A18               	infsnz	??_abs^0,f,c
  6330   00360C  2A19               	incf	(??_abs+1)^0,f,c
  6331   00360E  C018  F016         	movff	??_abs,?_abs
  6332   003612  C019  F017         	movff	??_abs+1,?_abs+1
  6333   003616  EF11  F01B         	goto	l1001
  6334   00361A                     l998:
  6335   00361A  C016  F016         	movff	abs@a,?_abs
  6336   00361E  C017  F017         	movff	abs@a+1,?_abs+1
  6337   003622                     l1001:
  6338   003622  0012               	return		;funcret
  6339   003624                     __end_of_abs:
  6340                           	callstack 0
  6341                           
  6342 ;; *************** function ___aomod *****************
  6343 ;; Defined at:
  6344 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  6345 ;; Parameters:    Size  Location     Type
  6346 ;;  dividend        8    3[COMRAM] long long 
  6347 ;;  divisor         8   11[COMRAM] long long 
  6348 ;; Auto vars:     Size  Location     Type
  6349 ;;  sign            1   20[COMRAM] unsigned char 
  6350 ;;  counter         1   19[COMRAM] unsigned char 
  6351 ;; Return value:  Size  Location     Type
  6352 ;;                  8    3[COMRAM] long long 
  6353 ;; Registers used:
  6354 ;;		wreg, status,2, status,0
  6355 ;; Tracked objects:
  6356 ;;		On entry : 0/0
  6357 ;;		On exit  : 0/0
  6358 ;;		Unchanged: 0/0
  6359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6360 ;;      Params:        16       0       0       0       0       0       0
  6361 ;;      Locals:         2       0       0       0       0       0       0
  6362 ;;      Temps:          0       0       0       0       0       0       0
  6363 ;;      Totals:        18       0       0       0       0       0       0
  6364 ;;Total ram usage:       18 bytes
  6365 ;; Hardware stack levels used: 1
  6366 ;; Hardware stack levels required when called: 2
  6367 ;; This function calls:
  6368 ;;		Nothing
  6369 ;; This function is called by:
  6370 ;;		_dtoa
  6371 ;; This function uses a non-reentrant model
  6372 ;;
  6373                           
  6374                           	psect	text24
  6375   002A14                     __ptext24:
  6376                           	callstack 0
  6377   002A14                     ___aomod:
  6378                           	callstack 23
  6379   002A14  0E00               	movlw	0
  6380   002A16  6E15               	movwf	___aomod@sign^0,c
  6381   002A18  BE0B               	btfsc	(___aomod@dividend+7)^0,7,c
  6382   002A1A  EF13  F015         	goto	u5080
  6383   002A1E  EF11  F015         	goto	u5081
  6384   002A22                     u5081:
  6385   002A22  EF25  F015         	goto	l4427
  6386   002A26                     u5080:
  6387   002A26  1E0B               	comf	(___aomod@dividend+7)^0,f,c
  6388   002A28  1E0A               	comf	(___aomod@dividend+6)^0,f,c
  6389   002A2A  1E09               	comf	(___aomod@dividend+5)^0,f,c
  6390   002A2C  1E08               	comf	(___aomod@dividend+4)^0,f,c
  6391   002A2E  1E07               	comf	(___aomod@dividend+3)^0,f,c
  6392   002A30  1E06               	comf	(___aomod@dividend+2)^0,f,c
  6393   002A32  1E05               	comf	(___aomod@dividend+1)^0,f,c
  6394   002A34  6C04               	negf	___aomod@dividend^0,c
  6395   002A36  0E00               	movlw	0
  6396   002A38  2205               	addwfc	(___aomod@dividend+1)^0,f,c
  6397   002A3A  2206               	addwfc	(___aomod@dividend+2)^0,f,c
  6398   002A3C  2207               	addwfc	(___aomod@dividend+3)^0,f,c
  6399   002A3E  2208               	addwfc	(___aomod@dividend+4)^0,f,c
  6400   002A40  2209               	addwfc	(___aomod@dividend+5)^0,f,c
  6401   002A42  220A               	addwfc	(___aomod@dividend+6)^0,f,c
  6402   002A44  220B               	addwfc	(___aomod@dividend+7)^0,f,c
  6403   002A46  0E01               	movlw	1
  6404   002A48  6E15               	movwf	___aomod@sign^0,c
  6405   002A4A                     l4427:
  6406   002A4A  BE13               	btfsc	(___aomod@divisor+7)^0,7,c
  6407   002A4C  EF2C  F015         	goto	u5090
  6408   002A50  EF2A  F015         	goto	u5091
  6409   002A54                     u5091:
  6410   002A54  EF3C  F015         	goto	l4431
  6411   002A58                     u5090:
  6412   002A58  1E13               	comf	(___aomod@divisor+7)^0,f,c
  6413   002A5A  1E12               	comf	(___aomod@divisor+6)^0,f,c
  6414   002A5C  1E11               	comf	(___aomod@divisor+5)^0,f,c
  6415   002A5E  1E10               	comf	(___aomod@divisor+4)^0,f,c
  6416   002A60  1E0F               	comf	(___aomod@divisor+3)^0,f,c
  6417   002A62  1E0E               	comf	(___aomod@divisor+2)^0,f,c
  6418   002A64  1E0D               	comf	(___aomod@divisor+1)^0,f,c
  6419   002A66  6C0C               	negf	___aomod@divisor^0,c
  6420   002A68  0E00               	movlw	0
  6421   002A6A  220D               	addwfc	(___aomod@divisor+1)^0,f,c
  6422   002A6C  220E               	addwfc	(___aomod@divisor+2)^0,f,c
  6423   002A6E  220F               	addwfc	(___aomod@divisor+3)^0,f,c
  6424   002A70  2210               	addwfc	(___aomod@divisor+4)^0,f,c
  6425   002A72  2211               	addwfc	(___aomod@divisor+5)^0,f,c
  6426   002A74  2212               	addwfc	(___aomod@divisor+6)^0,f,c
  6427   002A76  2213               	addwfc	(___aomod@divisor+7)^0,f,c
  6428   002A78                     l4431:
  6429   002A78  500C               	movf	___aomod@divisor^0,w,c
  6430   002A7A  100D               	iorwf	(___aomod@divisor+1)^0,w,c
  6431   002A7C  100E               	iorwf	(___aomod@divisor+2)^0,w,c
  6432   002A7E  100F               	iorwf	(___aomod@divisor+3)^0,w,c
  6433   002A80  1010               	iorwf	(___aomod@divisor+4)^0,w,c
  6434   002A82  1011               	iorwf	(___aomod@divisor+5)^0,w,c
  6435   002A84  1012               	iorwf	(___aomod@divisor+6)^0,w,c
  6436   002A86  1013               	iorwf	(___aomod@divisor+7)^0,w,c
  6437   002A88  B4D8               	btfsc	status,2,c
  6438   002A8A  EF49  F015         	goto	u5101
  6439   002A8E  EF4B  F015         	goto	u5100
  6440   002A92                     u5101:
  6441   002A92  EF93  F015         	goto	l4447
  6442   002A96                     u5100:
  6443   002A96  0E01               	movlw	1
  6444   002A98  6E14               	movwf	___aomod@counter^0,c
  6445   002A9A  EF59  F015         	goto	l4437
  6446   002A9E                     l4435:
  6447   002A9E  90D8               	bcf	status,0,c
  6448   002AA0  360C               	rlcf	___aomod@divisor^0,f,c
  6449   002AA2  360D               	rlcf	(___aomod@divisor+1)^0,f,c
  6450   002AA4  360E               	rlcf	(___aomod@divisor+2)^0,f,c
  6451   002AA6  360F               	rlcf	(___aomod@divisor+3)^0,f,c
  6452   002AA8  3610               	rlcf	(___aomod@divisor+4)^0,f,c
  6453   002AAA  3611               	rlcf	(___aomod@divisor+5)^0,f,c
  6454   002AAC  3612               	rlcf	(___aomod@divisor+6)^0,f,c
  6455   002AAE  3613               	rlcf	(___aomod@divisor+7)^0,f,c
  6456   002AB0  2A14               	incf	___aomod@counter^0,f,c
  6457   002AB2                     l4437:
  6458   002AB2  AE13               	btfss	(___aomod@divisor+7)^0,7,c
  6459   002AB4  EF5E  F015         	goto	u5111
  6460   002AB8  EF60  F015         	goto	u5110
  6461   002ABC                     u5111:
  6462   002ABC  EF4F  F015         	goto	l4435
  6463   002AC0                     u5110:
  6464   002AC0                     l4439:
  6465   002AC0  500C               	movf	___aomod@divisor^0,w,c
  6466   002AC2  5C04               	subwf	___aomod@dividend^0,w,c
  6467   002AC4  500D               	movf	(___aomod@divisor+1)^0,w,c
  6468   002AC6  5805               	subwfb	(___aomod@dividend+1)^0,w,c
  6469   002AC8  500E               	movf	(___aomod@divisor+2)^0,w,c
  6470   002ACA  5806               	subwfb	(___aomod@dividend+2)^0,w,c
  6471   002ACC  500F               	movf	(___aomod@divisor+3)^0,w,c
  6472   002ACE  5807               	subwfb	(___aomod@dividend+3)^0,w,c
  6473   002AD0  5010               	movf	(___aomod@divisor+4)^0,w,c
  6474   002AD2  5808               	subwfb	(___aomod@dividend+4)^0,w,c
  6475   002AD4  5011               	movf	(___aomod@divisor+5)^0,w,c
  6476   002AD6  5809               	subwfb	(___aomod@dividend+5)^0,w,c
  6477   002AD8  5012               	movf	(___aomod@divisor+6)^0,w,c
  6478   002ADA  580A               	subwfb	(___aomod@dividend+6)^0,w,c
  6479   002ADC  5013               	movf	(___aomod@divisor+7)^0,w,c
  6480   002ADE  580B               	subwfb	(___aomod@dividend+7)^0,w,c
  6481   002AE0  A0D8               	btfss	status,0,c
  6482   002AE2  EF75  F015         	goto	u5121
  6483   002AE6  EF77  F015         	goto	u5120
  6484   002AEA                     u5121:
  6485   002AEA  EF87  F015         	goto	l4443
  6486   002AEE                     u5120:
  6487   002AEE  500C               	movf	___aomod@divisor^0,w,c
  6488   002AF0  5E04               	subwf	___aomod@dividend^0,f,c
  6489   002AF2  500D               	movf	(___aomod@divisor+1)^0,w,c
  6490   002AF4  5A05               	subwfb	(___aomod@dividend+1)^0,f,c
  6491   002AF6  500E               	movf	(___aomod@divisor+2)^0,w,c
  6492   002AF8  5A06               	subwfb	(___aomod@dividend+2)^0,f,c
  6493   002AFA  500F               	movf	(___aomod@divisor+3)^0,w,c
  6494   002AFC  5A07               	subwfb	(___aomod@dividend+3)^0,f,c
  6495   002AFE  5010               	movf	(___aomod@divisor+4)^0,w,c
  6496   002B00  5A08               	subwfb	(___aomod@dividend+4)^0,f,c
  6497   002B02  5011               	movf	(___aomod@divisor+5)^0,w,c
  6498   002B04  5A09               	subwfb	(___aomod@dividend+5)^0,f,c
  6499   002B06  5012               	movf	(___aomod@divisor+6)^0,w,c
  6500   002B08  5A0A               	subwfb	(___aomod@dividend+6)^0,f,c
  6501   002B0A  5013               	movf	(___aomod@divisor+7)^0,w,c
  6502   002B0C  5A0B               	subwfb	(___aomod@dividend+7)^0,f,c
  6503   002B0E                     l4443:
  6504   002B0E  90D8               	bcf	status,0,c
  6505   002B10  3213               	rrcf	(___aomod@divisor+7)^0,f,c
  6506   002B12  3212               	rrcf	(___aomod@divisor+6)^0,f,c
  6507   002B14  3211               	rrcf	(___aomod@divisor+5)^0,f,c
  6508   002B16  3210               	rrcf	(___aomod@divisor+4)^0,f,c
  6509   002B18  320F               	rrcf	(___aomod@divisor+3)^0,f,c
  6510   002B1A  320E               	rrcf	(___aomod@divisor+2)^0,f,c
  6511   002B1C  320D               	rrcf	(___aomod@divisor+1)^0,f,c
  6512   002B1E  320C               	rrcf	___aomod@divisor^0,f,c
  6513   002B20  2E14               	decfsz	___aomod@counter^0,f,c
  6514   002B22  EF60  F015         	goto	l4439
  6515   002B26                     l4447:
  6516   002B26  5015               	movf	___aomod@sign^0,w,c
  6517   002B28  B4D8               	btfsc	status,2,c
  6518   002B2A  EF99  F015         	goto	u5131
  6519   002B2E  EF9B  F015         	goto	u5130
  6520   002B32                     u5131:
  6521   002B32  EFAB  F015         	goto	l4451
  6522   002B36                     u5130:
  6523   002B36  1E0B               	comf	(___aomod@dividend+7)^0,f,c
  6524   002B38  1E0A               	comf	(___aomod@dividend+6)^0,f,c
  6525   002B3A  1E09               	comf	(___aomod@dividend+5)^0,f,c
  6526   002B3C  1E08               	comf	(___aomod@dividend+4)^0,f,c
  6527   002B3E  1E07               	comf	(___aomod@dividend+3)^0,f,c
  6528   002B40  1E06               	comf	(___aomod@dividend+2)^0,f,c
  6529   002B42  1E05               	comf	(___aomod@dividend+1)^0,f,c
  6530   002B44  6C04               	negf	___aomod@dividend^0,c
  6531   002B46  0E00               	movlw	0
  6532   002B48  2205               	addwfc	(___aomod@dividend+1)^0,f,c
  6533   002B4A  2206               	addwfc	(___aomod@dividend+2)^0,f,c
  6534   002B4C  2207               	addwfc	(___aomod@dividend+3)^0,f,c
  6535   002B4E  2208               	addwfc	(___aomod@dividend+4)^0,f,c
  6536   002B50  2209               	addwfc	(___aomod@dividend+5)^0,f,c
  6537   002B52  220A               	addwfc	(___aomod@dividend+6)^0,f,c
  6538   002B54  220B               	addwfc	(___aomod@dividend+7)^0,f,c
  6539   002B56                     l4451:
  6540   002B56  C004  F004         	movff	___aomod@dividend,?___aomod
  6541   002B5A  C005  F005         	movff	___aomod@dividend+1,?___aomod+1
  6542   002B5E  C006  F006         	movff	___aomod@dividend+2,?___aomod+2
  6543   002B62  C007  F007         	movff	___aomod@dividend+3,?___aomod+3
  6544   002B66  C008  F008         	movff	___aomod@dividend+4,?___aomod+4
  6545   002B6A  C009  F009         	movff	___aomod@dividend+5,?___aomod+5
  6546   002B6E  C00A  F00A         	movff	___aomod@dividend+6,?___aomod+6
  6547   002B72  C00B  F00B         	movff	___aomod@dividend+7,?___aomod+7
  6548   002B76  0012               	return		;funcret
  6549   002B78                     __end_of___aomod:
  6550                           	callstack 0
  6551                           
  6552 ;; *************** function ___aodiv *****************
  6553 ;; Defined at:
  6554 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  6555 ;; Parameters:    Size  Location     Type
  6556 ;;  dividend        8    3[COMRAM] long long 
  6557 ;;  divisor         8   11[COMRAM] long long 
  6558 ;; Auto vars:     Size  Location     Type
  6559 ;;  quotient        8   21[COMRAM] long long 
  6560 ;;  sign            1   20[COMRAM] unsigned char 
  6561 ;;  counter         1   19[COMRAM] unsigned char 
  6562 ;; Return value:  Size  Location     Type
  6563 ;;                  8    3[COMRAM] long long 
  6564 ;; Registers used:
  6565 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6566 ;; Tracked objects:
  6567 ;;		On entry : 0/0
  6568 ;;		On exit  : 0/0
  6569 ;;		Unchanged: 0/0
  6570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6571 ;;      Params:        16       0       0       0       0       0       0
  6572 ;;      Locals:        10       0       0       0       0       0       0
  6573 ;;      Temps:          0       0       0       0       0       0       0
  6574 ;;      Totals:        26       0       0       0       0       0       0
  6575 ;;Total ram usage:       26 bytes
  6576 ;; Hardware stack levels used: 1
  6577 ;; Hardware stack levels required when called: 2
  6578 ;; This function calls:
  6579 ;;		Nothing
  6580 ;; This function is called by:
  6581 ;;		_dtoa
  6582 ;; This function uses a non-reentrant model
  6583 ;;
  6584                           
  6585                           	psect	text25
  6586   00288C                     __ptext25:
  6587                           	callstack 0
  6588   00288C                     ___aodiv:
  6589                           	callstack 23
  6590   00288C  0E00               	movlw	0
  6591   00288E  6E15               	movwf	___aodiv@sign^0,c
  6592   002890  BE13               	btfsc	(___aodiv@divisor+7)^0,7,c
  6593   002892  EF4F  F014         	goto	u5010
  6594   002896  EF4D  F014         	goto	u5011
  6595   00289A                     u5011:
  6596   00289A  EF61  F014         	goto	l4383
  6597   00289E                     u5010:
  6598   00289E  1E13               	comf	(___aodiv@divisor+7)^0,f,c
  6599   0028A0  1E12               	comf	(___aodiv@divisor+6)^0,f,c
  6600   0028A2  1E11               	comf	(___aodiv@divisor+5)^0,f,c
  6601   0028A4  1E10               	comf	(___aodiv@divisor+4)^0,f,c
  6602   0028A6  1E0F               	comf	(___aodiv@divisor+3)^0,f,c
  6603   0028A8  1E0E               	comf	(___aodiv@divisor+2)^0,f,c
  6604   0028AA  1E0D               	comf	(___aodiv@divisor+1)^0,f,c
  6605   0028AC  6C0C               	negf	___aodiv@divisor^0,c
  6606   0028AE  0E00               	movlw	0
  6607   0028B0  220D               	addwfc	(___aodiv@divisor+1)^0,f,c
  6608   0028B2  220E               	addwfc	(___aodiv@divisor+2)^0,f,c
  6609   0028B4  220F               	addwfc	(___aodiv@divisor+3)^0,f,c
  6610   0028B6  2210               	addwfc	(___aodiv@divisor+4)^0,f,c
  6611   0028B8  2211               	addwfc	(___aodiv@divisor+5)^0,f,c
  6612   0028BA  2212               	addwfc	(___aodiv@divisor+6)^0,f,c
  6613   0028BC  2213               	addwfc	(___aodiv@divisor+7)^0,f,c
  6614   0028BE  0E01               	movlw	1
  6615   0028C0  6E15               	movwf	___aodiv@sign^0,c
  6616   0028C2                     l4383:
  6617   0028C2  BE0B               	btfsc	(___aodiv@dividend+7)^0,7,c
  6618   0028C4  EF68  F014         	goto	u5020
  6619   0028C8  EF66  F014         	goto	u5021
  6620   0028CC                     u5021:
  6621   0028CC  EF7A  F014         	goto	l4389
  6622   0028D0                     u5020:
  6623   0028D0  1E0B               	comf	(___aodiv@dividend+7)^0,f,c
  6624   0028D2  1E0A               	comf	(___aodiv@dividend+6)^0,f,c
  6625   0028D4  1E09               	comf	(___aodiv@dividend+5)^0,f,c
  6626   0028D6  1E08               	comf	(___aodiv@dividend+4)^0,f,c
  6627   0028D8  1E07               	comf	(___aodiv@dividend+3)^0,f,c
  6628   0028DA  1E06               	comf	(___aodiv@dividend+2)^0,f,c
  6629   0028DC  1E05               	comf	(___aodiv@dividend+1)^0,f,c
  6630   0028DE  6C04               	negf	___aodiv@dividend^0,c
  6631   0028E0  0E00               	movlw	0
  6632   0028E2  2205               	addwfc	(___aodiv@dividend+1)^0,f,c
  6633   0028E4  2206               	addwfc	(___aodiv@dividend+2)^0,f,c
  6634   0028E6  2207               	addwfc	(___aodiv@dividend+3)^0,f,c
  6635   0028E8  2208               	addwfc	(___aodiv@dividend+4)^0,f,c
  6636   0028EA  2209               	addwfc	(___aodiv@dividend+5)^0,f,c
  6637   0028EC  220A               	addwfc	(___aodiv@dividend+6)^0,f,c
  6638   0028EE  220B               	addwfc	(___aodiv@dividend+7)^0,f,c
  6639   0028F0  0E01               	movlw	1
  6640   0028F2  1A15               	xorwf	___aodiv@sign^0,f,c
  6641   0028F4                     l4389:
  6642   0028F4  EE20  F016         	lfsr	2,___aodiv@quotient
  6643   0028F8  0E07               	movlw	7
  6644   0028FA                     u5031:
  6645   0028FA  6ADE               	clrf	postinc2,c
  6646   0028FC  06E8               	decf	wreg,f,c
  6647   0028FE  E2FD               	bc	u5031
  6648   002900  500C               	movf	___aodiv@divisor^0,w,c
  6649   002902  100D               	iorwf	(___aodiv@divisor+1)^0,w,c
  6650   002904  100E               	iorwf	(___aodiv@divisor+2)^0,w,c
  6651   002906  100F               	iorwf	(___aodiv@divisor+3)^0,w,c
  6652   002908  1010               	iorwf	(___aodiv@divisor+4)^0,w,c
  6653   00290A  1011               	iorwf	(___aodiv@divisor+5)^0,w,c
  6654   00290C  1012               	iorwf	(___aodiv@divisor+6)^0,w,c
  6655   00290E  1013               	iorwf	(___aodiv@divisor+7)^0,w,c
  6656   002910  B4D8               	btfsc	status,2,c
  6657   002912  EF8D  F014         	goto	u5041
  6658   002916  EF8F  F014         	goto	u5040
  6659   00291A                     u5041:
  6660   00291A  EFE1  F014         	goto	l4411
  6661   00291E                     u5040:
  6662   00291E  0E01               	movlw	1
  6663   002920  6E14               	movwf	___aodiv@counter^0,c
  6664   002922  EF9D  F014         	goto	l4397
  6665   002926                     l4395:
  6666   002926  90D8               	bcf	status,0,c
  6667   002928  360C               	rlcf	___aodiv@divisor^0,f,c
  6668   00292A  360D               	rlcf	(___aodiv@divisor+1)^0,f,c
  6669   00292C  360E               	rlcf	(___aodiv@divisor+2)^0,f,c
  6670   00292E  360F               	rlcf	(___aodiv@divisor+3)^0,f,c
  6671   002930  3610               	rlcf	(___aodiv@divisor+4)^0,f,c
  6672   002932  3611               	rlcf	(___aodiv@divisor+5)^0,f,c
  6673   002934  3612               	rlcf	(___aodiv@divisor+6)^0,f,c
  6674   002936  3613               	rlcf	(___aodiv@divisor+7)^0,f,c
  6675   002938  2A14               	incf	___aodiv@counter^0,f,c
  6676   00293A                     l4397:
  6677   00293A  AE13               	btfss	(___aodiv@divisor+7)^0,7,c
  6678   00293C  EFA2  F014         	goto	u5051
  6679   002940  EFA4  F014         	goto	u5050
  6680   002944                     u5051:
  6681   002944  EF93  F014         	goto	l4395
  6682   002948                     u5050:
  6683   002948                     l4399:
  6684   002948  90D8               	bcf	status,0,c
  6685   00294A  3616               	rlcf	___aodiv@quotient^0,f,c
  6686   00294C  3617               	rlcf	(___aodiv@quotient+1)^0,f,c
  6687   00294E  3618               	rlcf	(___aodiv@quotient+2)^0,f,c
  6688   002950  3619               	rlcf	(___aodiv@quotient+3)^0,f,c
  6689   002952  361A               	rlcf	(___aodiv@quotient+4)^0,f,c
  6690   002954  361B               	rlcf	(___aodiv@quotient+5)^0,f,c
  6691   002956  361C               	rlcf	(___aodiv@quotient+6)^0,f,c
  6692   002958  361D               	rlcf	(___aodiv@quotient+7)^0,f,c
  6693   00295A  500C               	movf	___aodiv@divisor^0,w,c
  6694   00295C  5C04               	subwf	___aodiv@dividend^0,w,c
  6695   00295E  500D               	movf	(___aodiv@divisor+1)^0,w,c
  6696   002960  5805               	subwfb	(___aodiv@dividend+1)^0,w,c
  6697   002962  500E               	movf	(___aodiv@divisor+2)^0,w,c
  6698   002964  5806               	subwfb	(___aodiv@dividend+2)^0,w,c
  6699   002966  500F               	movf	(___aodiv@divisor+3)^0,w,c
  6700   002968  5807               	subwfb	(___aodiv@dividend+3)^0,w,c
  6701   00296A  5010               	movf	(___aodiv@divisor+4)^0,w,c
  6702   00296C  5808               	subwfb	(___aodiv@dividend+4)^0,w,c
  6703   00296E  5011               	movf	(___aodiv@divisor+5)^0,w,c
  6704   002970  5809               	subwfb	(___aodiv@dividend+5)^0,w,c
  6705   002972  5012               	movf	(___aodiv@divisor+6)^0,w,c
  6706   002974  580A               	subwfb	(___aodiv@dividend+6)^0,w,c
  6707   002976  5013               	movf	(___aodiv@divisor+7)^0,w,c
  6708   002978  580B               	subwfb	(___aodiv@dividend+7)^0,w,c
  6709   00297A  A0D8               	btfss	status,0,c
  6710   00297C  EFC2  F014         	goto	u5061
  6711   002980  EFC4  F014         	goto	u5060
  6712   002984                     u5061:
  6713   002984  EFD5  F014         	goto	l4407
  6714   002988                     u5060:
  6715   002988  500C               	movf	___aodiv@divisor^0,w,c
  6716   00298A  5E04               	subwf	___aodiv@dividend^0,f,c
  6717   00298C  500D               	movf	(___aodiv@divisor+1)^0,w,c
  6718   00298E  5A05               	subwfb	(___aodiv@dividend+1)^0,f,c
  6719   002990  500E               	movf	(___aodiv@divisor+2)^0,w,c
  6720   002992  5A06               	subwfb	(___aodiv@dividend+2)^0,f,c
  6721   002994  500F               	movf	(___aodiv@divisor+3)^0,w,c
  6722   002996  5A07               	subwfb	(___aodiv@dividend+3)^0,f,c
  6723   002998  5010               	movf	(___aodiv@divisor+4)^0,w,c
  6724   00299A  5A08               	subwfb	(___aodiv@dividend+4)^0,f,c
  6725   00299C  5011               	movf	(___aodiv@divisor+5)^0,w,c
  6726   00299E  5A09               	subwfb	(___aodiv@dividend+5)^0,f,c
  6727   0029A0  5012               	movf	(___aodiv@divisor+6)^0,w,c
  6728   0029A2  5A0A               	subwfb	(___aodiv@dividend+6)^0,f,c
  6729   0029A4  5013               	movf	(___aodiv@divisor+7)^0,w,c
  6730   0029A6  5A0B               	subwfb	(___aodiv@dividend+7)^0,f,c
  6731   0029A8  8016               	bsf	___aodiv@quotient^0,0,c
  6732   0029AA                     l4407:
  6733   0029AA  90D8               	bcf	status,0,c
  6734   0029AC  3213               	rrcf	(___aodiv@divisor+7)^0,f,c
  6735   0029AE  3212               	rrcf	(___aodiv@divisor+6)^0,f,c
  6736   0029B0  3211               	rrcf	(___aodiv@divisor+5)^0,f,c
  6737   0029B2  3210               	rrcf	(___aodiv@divisor+4)^0,f,c
  6738   0029B4  320F               	rrcf	(___aodiv@divisor+3)^0,f,c
  6739   0029B6  320E               	rrcf	(___aodiv@divisor+2)^0,f,c
  6740   0029B8  320D               	rrcf	(___aodiv@divisor+1)^0,f,c
  6741   0029BA  320C               	rrcf	___aodiv@divisor^0,f,c
  6742   0029BC  2E14               	decfsz	___aodiv@counter^0,f,c
  6743   0029BE  EFA4  F014         	goto	l4399
  6744   0029C2                     l4411:
  6745   0029C2  5015               	movf	___aodiv@sign^0,w,c
  6746   0029C4  B4D8               	btfsc	status,2,c
  6747   0029C6  EFE7  F014         	goto	u5071
  6748   0029CA  EFE9  F014         	goto	u5070
  6749   0029CE                     u5071:
  6750   0029CE  EFF9  F014         	goto	l4415
  6751   0029D2                     u5070:
  6752   0029D2  1E1D               	comf	(___aodiv@quotient+7)^0,f,c
  6753   0029D4  1E1C               	comf	(___aodiv@quotient+6)^0,f,c
  6754   0029D6  1E1B               	comf	(___aodiv@quotient+5)^0,f,c
  6755   0029D8  1E1A               	comf	(___aodiv@quotient+4)^0,f,c
  6756   0029DA  1E19               	comf	(___aodiv@quotient+3)^0,f,c
  6757   0029DC  1E18               	comf	(___aodiv@quotient+2)^0,f,c
  6758   0029DE  1E17               	comf	(___aodiv@quotient+1)^0,f,c
  6759   0029E0  6C16               	negf	___aodiv@quotient^0,c
  6760   0029E2  0E00               	movlw	0
  6761   0029E4  2217               	addwfc	(___aodiv@quotient+1)^0,f,c
  6762   0029E6  2218               	addwfc	(___aodiv@quotient+2)^0,f,c
  6763   0029E8  2219               	addwfc	(___aodiv@quotient+3)^0,f,c
  6764   0029EA  221A               	addwfc	(___aodiv@quotient+4)^0,f,c
  6765   0029EC  221B               	addwfc	(___aodiv@quotient+5)^0,f,c
  6766   0029EE  221C               	addwfc	(___aodiv@quotient+6)^0,f,c
  6767   0029F0  221D               	addwfc	(___aodiv@quotient+7)^0,f,c
  6768   0029F2                     l4415:
  6769   0029F2  C016  F004         	movff	___aodiv@quotient,?___aodiv
  6770   0029F6  C017  F005         	movff	___aodiv@quotient+1,?___aodiv+1
  6771   0029FA  C018  F006         	movff	___aodiv@quotient+2,?___aodiv+2
  6772   0029FE  C019  F007         	movff	___aodiv@quotient+3,?___aodiv+3
  6773   002A02  C01A  F008         	movff	___aodiv@quotient+4,?___aodiv+4
  6774   002A06  C01B  F009         	movff	___aodiv@quotient+5,?___aodiv+5
  6775   002A0A  C01C  F00A         	movff	___aodiv@quotient+6,?___aodiv+6
  6776   002A0E  C01D  F00B         	movff	___aodiv@quotient+7,?___aodiv+7
  6777   002A12  0012               	return		;funcret
  6778   002A14                     __end_of___aodiv:
  6779                           	callstack 0
  6780                           
  6781 ;; *************** function _atoi *****************
  6782 ;; Defined at:
  6783 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
  6784 ;; Parameters:    Size  Location     Type
  6785 ;;  s               2    9[COMRAM] PTR const unsigned char 
  6786 ;;		 -> STR_1(19), 
  6787 ;; Auto vars:     Size  Location     Type
  6788 ;;  n               2   16[COMRAM] int 
  6789 ;;  neg             2   14[COMRAM] int 
  6790 ;; Return value:  Size  Location     Type
  6791 ;;                  2    9[COMRAM] int 
  6792 ;; Registers used:
  6793 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6794 ;; Tracked objects:
  6795 ;;		On entry : 0/0
  6796 ;;		On exit  : 0/0
  6797 ;;		Unchanged: 0/0
  6798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6799 ;;      Params:         2       0       0       0       0       0       0
  6800 ;;      Locals:         4       0       0       0       0       0       0
  6801 ;;      Temps:          3       0       0       0       0       0       0
  6802 ;;      Totals:         9       0       0       0       0       0       0
  6803 ;;Total ram usage:        9 bytes
  6804 ;; Hardware stack levels used: 1
  6805 ;; Hardware stack levels required when called: 3
  6806 ;; This function calls:
  6807 ;;		___wmul
  6808 ;;		_isdigit
  6809 ;;		_isspace
  6810 ;; This function is called by:
  6811 ;;		_vfpfcnvrt
  6812 ;; This function uses a non-reentrant model
  6813 ;;
  6814                           
  6815                           	psect	text26
  6816   002B78                     __ptext26:
  6817                           	callstack 0
  6818   002B78                     _atoi:
  6819                           	callstack 23
  6820   002B78  0E00               	movlw	0
  6821   002B7A  6E12               	movwf	(atoi@n+1)^0,c
  6822   002B7C  0E00               	movlw	0
  6823   002B7E  6E11               	movwf	atoi@n^0,c
  6824   002B80  0E00               	movlw	0
  6825   002B82  6E10               	movwf	(atoi@neg+1)^0,c
  6826   002B84  0E00               	movlw	0
  6827   002B86  6E0F               	movwf	atoi@neg^0,c
  6828   002B88  EFC8  F015         	goto	l5227
  6829   002B8C                     l5223:
  6830   002B8C  4A0A               	infsnz	atoi@s^0,f,c
  6831   002B8E  2A0B               	incf	(atoi@s+1)^0,f,c
  6832   002B90                     l5227:
  6833   002B90  C00A  FFF6         	movff	atoi@s,tblptrl
  6834   002B94  C00B  FFF7         	movff	atoi@s+1,tblptrh
  6835   002B98                     	if	0	;tblptru may be non-zero
  6836   002B98                     	endif
  6837   002B98                     	if	0	;tblptru may be non-zero
  6838   002B98                     	endif
  6839   002B98  0008               	tblrd		*
  6840   002B9A  50F5               	movf	tablat,w,c
  6841   002B9C  0A20               	xorlw	32
  6842   002B9E  B4D8               	btfsc	status,2,c
  6843   002BA0  EFD4  F015         	goto	u6491
  6844   002BA4  EFD6  F015         	goto	u6490
  6845   002BA8                     u6491:
  6846   002BA8  EFC6  F015         	goto	l5223
  6847   002BAC                     u6490:
  6848   002BAC  C00A  FFF6         	movff	atoi@s,tblptrl
  6849   002BB0  C00B  FFF7         	movff	atoi@s+1,tblptrh
  6850   002BB4                     	if	0	;tblptru may be non-zero
  6851   002BB4                     	endif
  6852   002BB4                     	if	0	;tblptru may be non-zero
  6853   002BB4                     	endif
  6854   002BB4  0008               	tblrd		*
  6855   002BB6  CFF5 F00C          	movff	tablat,??_atoi
  6856   002BBA  0EF7               	movlw	247
  6857   002BBC  240C               	addwf	??_atoi^0,w,c
  6858   002BBE  6E0D               	movwf	(??_atoi+1)^0,c
  6859   002BC0  6A0E               	clrf	(??_atoi+2)^0,c
  6860   002BC2  0EFF               	movlw	255
  6861   002BC4  220E               	addwfc	(??_atoi+2)^0,f,c
  6862   002BC6  500E               	movf	(??_atoi+2)^0,w,c
  6863   002BC8  E109               	bnz	u6500
  6864   002BCA  0E05               	movlw	5
  6865   002BCC  5C0D               	subwf	(??_atoi+1)^0,w,c
  6866   002BCE  A0D8               	btfss	status,0,c
  6867   002BD0  EFEC  F015         	goto	u6501
  6868   002BD4  EFEE  F015         	goto	u6500
  6869   002BD8                     u6501:
  6870   002BD8  EFC6  F015         	goto	l5223
  6871   002BDC                     u6500:
  6872   002BDC  EFF8  F015         	goto	l5235
  6873   002BE0                     l5231:
  6874   002BE0  0E00               	movlw	0
  6875   002BE2  6E10               	movwf	(atoi@neg+1)^0,c
  6876   002BE4  0E01               	movlw	1
  6877   002BE6  6E0F               	movwf	atoi@neg^0,c
  6878   002BE8                     l5233:
  6879   002BE8  4A0A               	infsnz	atoi@s^0,f,c
  6880   002BEA  2A0B               	incf	(atoi@s+1)^0,f,c
  6881   002BEC  EF2D  F016         	goto	l5243
  6882   002BF0                     l5235:
  6883   002BF0  C00A  FFF6         	movff	atoi@s,tblptrl
  6884   002BF4  C00B  FFF7         	movff	atoi@s+1,tblptrh
  6885   002BF8                     	if	0	;tblptru may be non-zero
  6886   002BF8                     	endif
  6887   002BF8                     	if	0	;tblptru may be non-zero
  6888   002BF8                     	endif
  6889   002BF8  0008               	tblrd		*
  6890   002BFA  50F5               	movf	tablat,w,c
  6891   002BFC  6E0C               	movwf	??_atoi^0,c
  6892   002BFE  6A0D               	clrf	(??_atoi+1)^0,c
  6893                           
  6894                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6895                           ; Switch size 1, requested type "simple"
  6896                           ; Number of cases is 1, Range of values is 0 to 0
  6897                           ; switch strategies available:
  6898                           ; Name         Instructions Cycles
  6899                           ; simple_byte            4     3 (average)
  6900                           ;	Chosen strategy is simple_byte
  6901   002C00  500D               	movf	(??_atoi+1)^0,w,c
  6902   002C02  0A00               	xorlw	0	; case 0
  6903   002C04  B4D8               	btfsc	status,2,c
  6904   002C06  EF07  F016         	goto	l5627
  6905   002C0A  EF2D  F016         	goto	l5243
  6906   002C0E                     l5627:
  6907                           
  6908                           ; Switch size 1, requested type "simple"
  6909                           ; Number of cases is 2, Range of values is 43 to 45
  6910                           ; switch strategies available:
  6911                           ; Name         Instructions Cycles
  6912                           ; simple_byte            7     4 (average)
  6913                           ;	Chosen strategy is simple_byte
  6914   002C0E  500C               	movf	??_atoi^0,w,c
  6915   002C10  0A2B               	xorlw	43	; case 43
  6916   002C12  B4D8               	btfsc	status,2,c
  6917   002C14  EFF4  F015         	goto	l5233
  6918   002C18  0A06               	xorlw	6	; case 45
  6919   002C1A  B4D8               	btfsc	status,2,c
  6920   002C1C  EFF0  F015         	goto	l5231
  6921   002C20  EF2D  F016         	goto	l5243
  6922   002C24                     l5237:
  6923   002C24  C011  F004         	movff	atoi@n,___wmul@multiplier
  6924   002C28  C012  F005         	movff	atoi@n+1,___wmul@multiplier+1
  6925   002C2C  0E00               	movlw	0
  6926   002C2E  6E07               	movwf	(___wmul@multiplicand+1)^0,c
  6927   002C30  0E0A               	movlw	10
  6928   002C32  6E06               	movwf	___wmul@multiplicand^0,c
  6929   002C34  EC73  F01B         	call	___wmul	;wreg free
  6930   002C38  C00A  FFF6         	movff	atoi@s,tblptrl
  6931   002C3C  C00B  FFF7         	movff	atoi@s+1,tblptrh
  6932   002C40                     	if	0	;tblptru may be non-zero
  6933   002C40                     	endif
  6934   002C40                     	if	0	;tblptru may be non-zero
  6935   002C40                     	endif
  6936   002C40  0008               	tblrd		*
  6937   002C42  50F5               	movf	tablat,w,c
  6938   002C44  5E04               	subwf	?___wmul^0,f,c
  6939   002C46  0E00               	movlw	0
  6940   002C48  5A05               	subwfb	(?___wmul+1)^0,f,c
  6941   002C4A  0E30               	movlw	48
  6942   002C4C  2404               	addwf	?___wmul^0,w,c
  6943   002C4E  6E11               	movwf	atoi@n^0,c
  6944   002C50  0E00               	movlw	0
  6945   002C52  2005               	addwfc	(?___wmul+1)^0,w,c
  6946   002C54  6E12               	movwf	(atoi@n+1)^0,c
  6947   002C56  EFF4  F015         	goto	l5233
  6948   002C5A                     l5243:
  6949   002C5A  C00A  FFF6         	movff	atoi@s,tblptrl
  6950   002C5E  C00B  FFF7         	movff	atoi@s+1,tblptrh
  6951   002C62                     	if	0	;tblptru may be non-zero
  6952   002C62                     	endif
  6953   002C62                     	if	0	;tblptru may be non-zero
  6954   002C62                     	endif
  6955   002C62  0008               	tblrd		*
  6956   002C64  CFF5 F00C          	movff	tablat,??_atoi
  6957   002C68  0ED0               	movlw	208
  6958   002C6A  240C               	addwf	??_atoi^0,w,c
  6959   002C6C  6E0D               	movwf	(??_atoi+1)^0,c
  6960   002C6E  6A0E               	clrf	(??_atoi+2)^0,c
  6961   002C70  0EFF               	movlw	255
  6962   002C72  220E               	addwfc	(??_atoi+2)^0,f,c
  6963   002C74  500E               	movf	(??_atoi+2)^0,w,c
  6964   002C76  E109               	bnz	u6510
  6965   002C78  0E0A               	movlw	10
  6966   002C7A  5C0D               	subwf	(??_atoi+1)^0,w,c
  6967   002C7C  A0D8               	btfss	status,0,c
  6968   002C7E  EF43  F016         	goto	u6511
  6969   002C82  EF45  F016         	goto	u6510
  6970   002C86                     u6511:
  6971   002C86  EF12  F016         	goto	l5237
  6972   002C8A                     u6510:
  6973   002C8A  500F               	movf	atoi@neg^0,w,c
  6974   002C8C  1010               	iorwf	(atoi@neg+1)^0,w,c
  6975   002C8E  A4D8               	btfss	status,2,c
  6976   002C90  EF4C  F016         	goto	u6521
  6977   002C94  EF4E  F016         	goto	u6520
  6978   002C98                     u6521:
  6979   002C98  EF5C  F016         	goto	l1023
  6980   002C9C                     u6520:
  6981   002C9C  C011  F00C         	movff	atoi@n,??_atoi
  6982   002CA0  C012  F00D         	movff	atoi@n+1,??_atoi+1
  6983   002CA4  1E0C               	comf	??_atoi^0,f,c
  6984   002CA6  1E0D               	comf	(??_atoi+1)^0,f,c
  6985   002CA8  4A0C               	infsnz	??_atoi^0,f,c
  6986   002CAA  2A0D               	incf	(??_atoi+1)^0,f,c
  6987   002CAC  C00C  F00A         	movff	??_atoi,?_atoi
  6988   002CB0  C00D  F00B         	movff	??_atoi+1,?_atoi+1
  6989   002CB4  EF60  F016         	goto	l1026
  6990   002CB8                     l1023:
  6991   002CB8  C011  F00A         	movff	atoi@n,?_atoi
  6992   002CBC  C012  F00B         	movff	atoi@n+1,?_atoi+1
  6993   002CC0                     l1026:
  6994   002CC0  0012               	return		;funcret
  6995   002CC2                     __end_of_atoi:
  6996                           	callstack 0
  6997                           
  6998 ;; *************** function _isspace *****************
  6999 ;; Defined at:
  7000 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  7001 ;; Parameters:    Size  Location     Type
  7002 ;;  c               2    3[COMRAM] int 
  7003 ;; Auto vars:     Size  Location     Type
  7004 ;;		None
  7005 ;; Return value:  Size  Location     Type
  7006 ;;                  2    3[COMRAM] int 
  7007 ;; Registers used:
  7008 ;;		wreg, status,2, status,0
  7009 ;; Tracked objects:
  7010 ;;		On entry : 0/0
  7011 ;;		On exit  : 0/0
  7012 ;;		Unchanged: 0/0
  7013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7014 ;;      Params:         2       0       0       0       0       0       0
  7015 ;;      Locals:         1       0       0       0       0       0       0
  7016 ;;      Temps:          2       0       0       0       0       0       0
  7017 ;;      Totals:         5       0       0       0       0       0       0
  7018 ;;Total ram usage:        5 bytes
  7019 ;; Hardware stack levels used: 1
  7020 ;; Hardware stack levels required when called: 2
  7021 ;; This function calls:
  7022 ;;		Nothing
  7023 ;; This function is called by:
  7024 ;;		_atoi
  7025 ;; This function uses a non-reentrant model
  7026 ;;
  7027                           
  7028                           	psect	text27
  7029   00351A                     __ptext27:
  7030                           	callstack 0
  7031   00351A                     _isspace:
  7032                           	callstack 23
  7033   00351A  0E01               	movlw	1
  7034   00351C  6E08               	movwf	_isspace$1117^0,c
  7035   00351E  0E20               	movlw	32
  7036   003520  1804               	xorwf	isspace@c^0,w,c
  7037   003522  1005               	iorwf	(isspace@c+1)^0,w,c
  7038   003524  B4D8               	btfsc	status,2,c
  7039   003526  EF97  F01A         	goto	u5991
  7040   00352A  EF99  F01A         	goto	u5990
  7041   00352E                     u5991:
  7042   00352E  EFAC  F01A         	goto	l4923
  7043   003532                     u5990:
  7044   003532  0EF7               	movlw	247
  7045   003534  2404               	addwf	isspace@c^0,w,c
  7046   003536  6E06               	movwf	??_isspace^0,c
  7047   003538  0EFF               	movlw	255
  7048   00353A  2005               	addwfc	(isspace@c+1)^0,w,c
  7049   00353C  6E07               	movwf	(??_isspace+1)^0,c
  7050   00353E  5007               	movf	(??_isspace+1)^0,w,c
  7051   003540  E109               	bnz	u6000
  7052   003542  0E05               	movlw	5
  7053   003544  5C06               	subwf	??_isspace^0,w,c
  7054   003546  A0D8               	btfss	status,0,c
  7055   003548  EFA8  F01A         	goto	u6001
  7056   00354C  EFAA  F01A         	goto	u6000
  7057   003550                     u6001:
  7058   003550  EFAC  F01A         	goto	l4923
  7059   003554                     u6000:
  7060   003554  0E00               	movlw	0
  7061   003556  6E08               	movwf	_isspace$1117^0,c
  7062   003558                     l4923:
  7063   003558  C008  F004         	movff	_isspace$1117,?_isspace
  7064   00355C  6A05               	clrf	(?_isspace+1)^0,c
  7065   00355E  0012               	return		;funcret
  7066   003560                     __end_of_isspace:
  7067                           	callstack 0
  7068                           
  7069 ;; *************** function _isdigit *****************
  7070 ;; Defined at:
  7071 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  7072 ;; Parameters:    Size  Location     Type
  7073 ;;  c               2    3[COMRAM] int 
  7074 ;; Auto vars:     Size  Location     Type
  7075 ;;		None
  7076 ;; Return value:  Size  Location     Type
  7077 ;;                  2    3[COMRAM] int 
  7078 ;; Registers used:
  7079 ;;		wreg, status,2, status,0
  7080 ;; Tracked objects:
  7081 ;;		On entry : 0/0
  7082 ;;		On exit  : 0/0
  7083 ;;		Unchanged: 0/0
  7084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7085 ;;      Params:         2       0       0       0       0       0       0
  7086 ;;      Locals:         0       0       0       0       0       0       0
  7087 ;;      Temps:          2       0       0       0       0       0       0
  7088 ;;      Totals:         4       0       0       0       0       0       0
  7089 ;;Total ram usage:        4 bytes
  7090 ;; Hardware stack levels used: 1
  7091 ;; Hardware stack levels required when called: 2
  7092 ;; This function calls:
  7093 ;;		Nothing
  7094 ;; This function is called by:
  7095 ;;		_vfpfcnvrt
  7096 ;;		_atoi
  7097 ;; This function uses a non-reentrant model
  7098 ;;
  7099                           
  7100                           	psect	text28
  7101   0036BA                     __ptext28:
  7102                           	callstack 0
  7103   0036BA                     _isdigit:
  7104                           	callstack 24
  7105   0036BA  0ED0               	movlw	208
  7106   0036BC  2404               	addwf	isdigit@c^0,w,c
  7107   0036BE  6E06               	movwf	??_isdigit^0,c
  7108   0036C0  0EFF               	movlw	255
  7109   0036C2  2005               	addwfc	(isdigit@c+1)^0,w,c
  7110   0036C4  6E07               	movwf	(??_isdigit+1)^0,c
  7111   0036C6  5007               	movf	(??_isdigit+1)^0,w,c
  7112   0036C8  E10A               	bnz	u5970
  7113   0036CA  0E0A               	movlw	10
  7114   0036CC  5C06               	subwf	??_isdigit^0,w,c
  7115   0036CE  A0D8               	btfss	status,0,c
  7116   0036D0  EF6C  F01B         	goto	u5971
  7117   0036D4  EF6F  F01B         	goto	u5970
  7118   0036D8                     u5971:
  7119   0036D8  0E01               	movlw	1
  7120   0036DA  EF70  F01B         	goto	u5980
  7121   0036DE                     u5970:
  7122   0036DE  0E00               	movlw	0
  7123   0036E0                     u5980:
  7124   0036E0  6E04               	movwf	?_isdigit^0,c
  7125   0036E2  6A05               	clrf	(?_isdigit+1)^0,c
  7126   0036E4  0012               	return		;funcret
  7127   0036E6                     __end_of_isdigit:
  7128                           	callstack 0
  7129                           
  7130 ;; *************** function ___wmul *****************
  7131 ;; Defined at:
  7132 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  7133 ;; Parameters:    Size  Location     Type
  7134 ;;  multiplier      2    3[COMRAM] unsigned int 
  7135 ;;  multiplicand    2    5[COMRAM] unsigned int 
  7136 ;; Auto vars:     Size  Location     Type
  7137 ;;  product         2    7[COMRAM] unsigned int 
  7138 ;; Return value:  Size  Location     Type
  7139 ;;                  2    3[COMRAM] unsigned int 
  7140 ;; Registers used:
  7141 ;;		wreg, status,2, status,0, prodl, prodh
  7142 ;; Tracked objects:
  7143 ;;		On entry : 0/0
  7144 ;;		On exit  : 0/0
  7145 ;;		Unchanged: 0/0
  7146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7147 ;;      Params:         4       0       0       0       0       0       0
  7148 ;;      Locals:         2       0       0       0       0       0       0
  7149 ;;      Temps:          0       0       0       0       0       0       0
  7150 ;;      Totals:         6       0       0       0       0       0       0
  7151 ;;Total ram usage:        6 bytes
  7152 ;; Hardware stack levels used: 1
  7153 ;; Hardware stack levels required when called: 2
  7154 ;; This function calls:
  7155 ;;		Nothing
  7156 ;; This function is called by:
  7157 ;;		_atoi
  7158 ;; This function uses a non-reentrant model
  7159 ;;
  7160                           
  7161                           	psect	text29
  7162   0036E6                     __ptext29:
  7163                           	callstack 0
  7164   0036E6                     ___wmul:
  7165                           	callstack 23
  7166   0036E6  5004               	movf	___wmul@multiplier^0,w,c
  7167   0036E8  0206               	mulwf	___wmul@multiplicand^0,c
  7168   0036EA  CFF3 F008          	movff	prodl,___wmul@product
  7169   0036EE  CFF4 F009          	movff	prodh,___wmul@product+1
  7170   0036F2  5004               	movf	___wmul@multiplier^0,w,c
  7171   0036F4  0207               	mulwf	(___wmul@multiplicand+1)^0,c
  7172   0036F6  50F3               	movf	243,w,c
  7173   0036F8  2609               	addwf	(___wmul@product+1)^0,f,c
  7174   0036FA  5005               	movf	(___wmul@multiplier+1)^0,w,c
  7175   0036FC  0206               	mulwf	___wmul@multiplicand^0,c
  7176   0036FE  50F3               	movf	243,w,c
  7177   003700  2609               	addwf	(___wmul@product+1)^0,f,c
  7178   003702  C008  F004         	movff	___wmul@product,?___wmul
  7179   003706  C009  F005         	movff	___wmul@product+1,?___wmul+1
  7180   00370A  0012               	return		;funcret
  7181   00370C                     __end_of___wmul:
  7182                           	callstack 0
  7183                           
  7184 ;; *************** function _eusart_string *****************
  7185 ;; Defined at:
  7186 ;;		line 23 in file "eusart.c"
  7187 ;; Parameters:    Size  Location     Type
  7188 ;;  str             2    4[COMRAM] PTR unsigned char 
  7189 ;;		 -> BufferSERIAL(32), 
  7190 ;; Auto vars:     Size  Location     Type
  7191 ;;		None
  7192 ;; Return value:  Size  Location     Type
  7193 ;;                  1    wreg      void 
  7194 ;; Registers used:
  7195 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7196 ;; Tracked objects:
  7197 ;;		On entry : 0/0
  7198 ;;		On exit  : 0/0
  7199 ;;		Unchanged: 0/0
  7200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7201 ;;      Params:         2       0       0       0       0       0       0
  7202 ;;      Locals:         0       0       0       0       0       0       0
  7203 ;;      Temps:          0       0       0       0       0       0       0
  7204 ;;      Totals:         2       0       0       0       0       0       0
  7205 ;;Total ram usage:        2 bytes
  7206 ;; Hardware stack levels used: 1
  7207 ;; Hardware stack levels required when called: 3
  7208 ;; This function calls:
  7209 ;;		_eusart_write
  7210 ;; This function is called by:
  7211 ;;		_transmiter_DATA
  7212 ;; This function uses a non-reentrant model
  7213 ;;
  7214                           
  7215                           	psect	text30
  7216   00365C                     __ptext30:
  7217                           	callstack 0
  7218   00365C                     _eusart_string:
  7219                           	callstack 26
  7220   00365C                     
  7221                           ;eusart.c: 23: void eusart_string(char *str);eusart.c: 24: {;eusart.c: 25:     while(*st
      +                          r!='\0')
  7222   00365C  EF39  F01B         	goto	l3851
  7223   003660                     l3847:
  7224                           
  7225                           ;eusart.c: 26:     {;eusart.c: 27:         eusart_write(*str);
  7226   003660  C005  FFD9         	movff	eusart_string@str,fsr2l
  7227   003664  C006  FFDA         	movff	eusart_string@str+1,fsr2h
  7228   003668  50DF               	movf	indf2,w,c
  7229   00366A  EC98  F01B         	call	_eusart_write
  7230   00366E                     
  7231                           ;eusart.c: 28:         str++;
  7232   00366E  4A05               	infsnz	eusart_string@str^0,f,c
  7233   003670  2A06               	incf	(eusart_string@str+1)^0,f,c
  7234   003672                     l3851:
  7235                           
  7236                           ;eusart.c: 25:     while(*str!='\0')
  7237   003672  C005  FFD9         	movff	eusart_string@str,fsr2l
  7238   003676  C006  FFDA         	movff	eusart_string@str+1,fsr2h
  7239   00367A  50DF               	movf	indf2,w,c
  7240   00367C  A4D8               	btfss	status,2,c
  7241   00367E  EF43  F01B         	goto	u4381
  7242   003682  EF45  F01B         	goto	u4380
  7243   003686                     u4381:
  7244   003686  EF30  F01B         	goto	l3847
  7245   00368A                     u4380:
  7246   00368A  0012               	return		;funcret
  7247   00368C                     __end_of_eusart_string:
  7248                           	callstack 0
  7249                           
  7250 ;; *************** function _eusart_write *****************
  7251 ;; Defined at:
  7252 ;;		line 16 in file "eusart.c"
  7253 ;; Parameters:    Size  Location     Type
  7254 ;;  c               1    wreg     unsigned char 
  7255 ;; Auto vars:     Size  Location     Type
  7256 ;;  c               1    3[COMRAM] unsigned char 
  7257 ;; Return value:  Size  Location     Type
  7258 ;;                  1    wreg      void 
  7259 ;; Registers used:
  7260 ;;		wreg
  7261 ;; Tracked objects:
  7262 ;;		On entry : 0/0
  7263 ;;		On exit  : 0/0
  7264 ;;		Unchanged: 0/0
  7265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7266 ;;      Params:         0       0       0       0       0       0       0
  7267 ;;      Locals:         1       0       0       0       0       0       0
  7268 ;;      Temps:          0       0       0       0       0       0       0
  7269 ;;      Totals:         1       0       0       0       0       0       0
  7270 ;;Total ram usage:        1 bytes
  7271 ;; Hardware stack levels used: 1
  7272 ;; Hardware stack levels required when called: 2
  7273 ;; This function calls:
  7274 ;;		Nothing
  7275 ;; This function is called by:
  7276 ;;		_eusart_string
  7277 ;; This function uses a non-reentrant model
  7278 ;;
  7279                           
  7280                           	psect	text31
  7281   003730                     __ptext31:
  7282                           	callstack 0
  7283   003730                     _eusart_write:
  7284                           	callstack 26
  7285                           
  7286                           ;incstack = 0
  7287                           ;eusart_write@c stored from wreg
  7288   003730  6E04               	movwf	eusart_write@c^0,c
  7289   003732                     l22:
  7290   003732  A2AC               	btfss	4012,1,c	;volatile
  7291   003734  EF9E  F01B         	goto	u4361
  7292   003738  EFA0  F01B         	goto	u4360
  7293   00373C                     u4361:
  7294   00373C  EF99  F01B         	goto	l22
  7295   003740                     u4360:
  7296   003740                     
  7297                           ;eusart.c: 19:     TXREG = c;
  7298   003740  C004  FFAD         	movff	eusart_write@c,4013	;volatile
  7299   003744  0012               	return		;funcret
  7300   003746                     __end_of_eusart_write:
  7301                           	callstack 0
  7302                           
  7303 ;; *************** function _eusart_init *****************
  7304 ;; Defined at:
  7305 ;;		line 4 in file "eusart.c"
  7306 ;; Parameters:    Size  Location     Type
  7307 ;;		None
  7308 ;; Auto vars:     Size  Location     Type
  7309 ;;		None
  7310 ;; Return value:  Size  Location     Type
  7311 ;;                  1    wreg      void 
  7312 ;; Registers used:
  7313 ;;		wreg, status,2
  7314 ;; Tracked objects:
  7315 ;;		On entry : 0/0
  7316 ;;		On exit  : 0/0
  7317 ;;		Unchanged: 0/0
  7318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7319 ;;      Params:         0       0       0       0       0       0       0
  7320 ;;      Locals:         0       0       0       0       0       0       0
  7321 ;;      Temps:          0       0       0       0       0       0       0
  7322 ;;      Totals:         0       0       0       0       0       0       0
  7323 ;;Total ram usage:        0 bytes
  7324 ;; Hardware stack levels used: 1
  7325 ;; Hardware stack levels required when called: 2
  7326 ;; This function calls:
  7327 ;;		Nothing
  7328 ;; This function is called by:
  7329 ;;		_main
  7330 ;; This function uses a non-reentrant model
  7331 ;;
  7332                           
  7333                           	psect	text32
  7334   003746                     __ptext32:
  7335                           	callstack 0
  7336   003746                     _eusart_init:
  7337                           	callstack 28
  7338   003746                     
  7339                           ;eusart.c: 6:     TXSTAbits.TXEN = 1;
  7340   003746  8AAC               	bsf	172,5,c	;volatile
  7341                           
  7342                           ;eusart.c: 7:     RCSTAbits.CREN = 1;
  7343   003748  88AB               	bsf	171,4,c	;volatile
  7344                           
  7345                           ;eusart.c: 8:     TXSTAbits.SYNC = 0;
  7346   00374A  98AC               	bcf	172,4,c	;volatile
  7347                           
  7348                           ;eusart.c: 9:     RCSTAbits.SPEN = 1;
  7349   00374C  8EAB               	bsf	171,7,c	;volatile
  7350                           
  7351                           ;eusart.c: 10:     TXSTAbits.BRGH = 0;
  7352   00374E  94AC               	bcf	172,2,c	;volatile
  7353                           
  7354                           ;eusart.c: 11:     BAUDCTLbits.BRG16 = 0;
  7355   003750  96B8               	bcf	184,3,c	;volatile
  7356   003752                     
  7357                           ;eusart.c: 12:     SPBRG = 12;
  7358   003752  0E0C               	movlw	12
  7359   003754  6EAF               	movwf	175,c	;volatile
  7360   003756  0012               	return		;funcret
  7361   003758                     __end_of_eusart_init:
  7362                           	callstack 0
  7363                           
  7364 ;; *************** function _conv_AN0 *****************
  7365 ;; Defined at:
  7366 ;;		line 98 in file "Program_main.c"
  7367 ;; Parameters:    Size  Location     Type
  7368 ;;		None
  7369 ;; Auto vars:     Size  Location     Type
  7370 ;;		None
  7371 ;; Return value:  Size  Location     Type
  7372 ;;                  1    wreg      void 
  7373 ;; Registers used:
  7374 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7375 ;; Tracked objects:
  7376 ;;		On entry : 0/0
  7377 ;;		On exit  : 0/0
  7378 ;;		Unchanged: 0/0
  7379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7380 ;;      Params:         0       0       0       0       0       0       0
  7381 ;;      Locals:         0       0       0       0       0       0       0
  7382 ;;      Temps:          2       0       0       0       0       0       0
  7383 ;;      Totals:         2       0       0       0       0       0       0
  7384 ;;Total ram usage:        2 bytes
  7385 ;; Hardware stack levels used: 1
  7386 ;; Hardware stack levels required when called: 3
  7387 ;; This function calls:
  7388 ;;		___flmul
  7389 ;;		___xxtofl
  7390 ;; This function is called by:
  7391 ;;		_main
  7392 ;; This function uses a non-reentrant model
  7393 ;;
  7394                           
  7395                           	psect	text33
  7396   0032A2                     __ptext33:
  7397                           	callstack 0
  7398   0032A2                     _conv_AN0:
  7399                           	callstack 27
  7400   0032A2                     
  7401                           ;Program_main.c: 100:     _delay((unsigned long)((200)*(8000000/4000.0)));
  7402   0032A2  0E03               	movlw	3
  7403   0032A4  6E2C               	movwf	(??_conv_AN0+1)^0,c
  7404   0032A6  0E08               	movlw	8
  7405   0032A8  6E2B               	movwf	??_conv_AN0^0,c
  7406   0032AA  0E77               	movlw	119
  7407   0032AC                     u6677:
  7408   0032AC  2EE8               	decfsz	wreg,f,c
  7409   0032AE  D7FE               	bra	u6677
  7410   0032B0  2E2B               	decfsz	??_conv_AN0^0,f,c
  7411   0032B2  D7FC               	bra	u6677
  7412   0032B4  2E2C               	decfsz	(??_conv_AN0+1)^0,f,c
  7413   0032B6  D7FA               	bra	u6677
  7414   0032B8  F000               	nop	
  7415   0032BA                     
  7416                           ;Program_main.c: 101:     ADCON0bits.GO = 1;
  7417   0032BA  82C2               	bsf	194,1,c	;volatile
  7418   0032BC                     l97:
  7419   0032BC  B2C2               	btfsc	194,1,c	;volatile
  7420   0032BE  EF63  F019         	goto	u6651
  7421   0032C2  EF65  F019         	goto	u6650
  7422   0032C6                     u6651:
  7423   0032C6  EF5E  F019         	goto	l97
  7424   0032CA                     u6650:
  7425   0032CA                     
  7426                           ;Program_main.c: 103:     VdigADC = ADRESH;
  7427   0032CA  CFC4 F096          	movff	4036,_VdigADC	;volatile
  7428   0032CE  0100               	movlb	0	; () banked
  7429   0032D0  6B97               	clrf	(_VdigADC+1)& (0+255),b
  7430   0032D2                     
  7431                           ; BSR set to: 0
  7432                           ;Program_main.c: 104:     VdigADC = (VdigADC << 8) + ADRESL;
  7433   0032D2  5196               	movf	_VdigADC& (0+255),w,b
  7434   0032D4  6E2B               	movwf	??_conv_AN0^0,c
  7435   0032D6  50C3               	movf	195,w,c	;volatile
  7436   0032D8  6F96               	movwf	_VdigADC& (0+255),b
  7437   0032DA  C02B  F097         	movff	??_conv_AN0,_VdigADC+1
  7438   0032DE                     
  7439                           ; BSR set to: 0
  7440                           ;Program_main.c: 105:     VoltageADC = VdigADC * 4.89e-3;
  7441   0032DE  C096  F004         	movff	_VdigADC,___xxtofl@val
  7442   0032E2  C097  F005         	movff	_VdigADC+1,___xxtofl@val+1
  7443   0032E6  6A06               	clrf	(___xxtofl@val+2)^0,c
  7444   0032E8  6A07               	clrf	(___xxtofl@val+3)^0,c
  7445   0032EA  0E00               	movlw	0
  7446   0032EC  EC6C  F013         	call	___xxtofl
  7447   0032F0  C004  F012         	movff	?___xxtofl,___flmul@b
  7448   0032F4  C005  F013         	movff	?___xxtofl+1,___flmul@b+1
  7449   0032F8  C006  F014         	movff	?___xxtofl+2,___flmul@b+2
  7450   0032FC  C007  F015         	movff	?___xxtofl+3,___flmul@b+3
  7451   003300  0E4B               	movlw	75
  7452   003302  6E16               	movwf	___flmul@a^0,c
  7453   003304  0E3C               	movlw	60
  7454   003306  6E17               	movwf	(___flmul@a+1)^0,c
  7455   003308  0EA0               	movlw	160
  7456   00330A  6E18               	movwf	(___flmul@a+2)^0,c
  7457   00330C  0E3B               	movlw	59
  7458   00330E  6E19               	movwf	(___flmul@a+3)^0,c
  7459   003310  EC27  F00D         	call	___flmul	;wreg free
  7460   003314  C012  F090         	movff	?___flmul,_VoltageADC
  7461   003318  C013  F091         	movff	?___flmul+1,_VoltageADC+1
  7462   00331C  C014  F092         	movff	?___flmul+2,_VoltageADC+2
  7463   003320  C015  F093         	movff	?___flmul+3,_VoltageADC+3
  7464   003324  0012               	return		;funcret
  7465   003326                     __end_of_conv_AN0:
  7466                           	callstack 0
  7467                           
  7468 ;; *************** function ___xxtofl *****************
  7469 ;; Defined at:
  7470 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  7471 ;; Parameters:    Size  Location     Type
  7472 ;;  sign            1    wreg     unsigned char 
  7473 ;;  val             4    3[COMRAM] long 
  7474 ;; Auto vars:     Size  Location     Type
  7475 ;;  sign            1   11[COMRAM] unsigned char 
  7476 ;;  arg             4   13[COMRAM] unsigned long 
  7477 ;;  exp             1   12[COMRAM] unsigned char 
  7478 ;; Return value:  Size  Location     Type
  7479 ;;                  4    3[COMRAM] unsigned char 
  7480 ;; Registers used:
  7481 ;;		wreg, status,2, status,0
  7482 ;; Tracked objects:
  7483 ;;		On entry : 0/0
  7484 ;;		On exit  : 0/0
  7485 ;;		Unchanged: 0/0
  7486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7487 ;;      Params:         4       0       0       0       0       0       0
  7488 ;;      Locals:         6       0       0       0       0       0       0
  7489 ;;      Temps:          4       0       0       0       0       0       0
  7490 ;;      Totals:        14       0       0       0       0       0       0
  7491 ;;Total ram usage:       14 bytes
  7492 ;; Hardware stack levels used: 1
  7493 ;; Hardware stack levels required when called: 2
  7494 ;; This function calls:
  7495 ;;		Nothing
  7496 ;; This function is called by:
  7497 ;;		_conv_AN0
  7498 ;; This function uses a non-reentrant model
  7499 ;;
  7500                           
  7501                           	psect	text34
  7502   0026D8                     __ptext34:
  7503                           	callstack 0
  7504   0026D8                     ___xxtofl:
  7505                           	callstack 27
  7506                           
  7507                           ;incstack = 0
  7508                           ;___xxtofl@sign stored from wreg
  7509   0026D8  6E0C               	movwf	___xxtofl@sign^0,c
  7510   0026DA  500C               	movf	___xxtofl@sign^0,w,c
  7511   0026DC  B4D8               	btfsc	status,2,c
  7512   0026DE  EF73  F013         	goto	u4391
  7513   0026E2  EF75  F013         	goto	u4390
  7514   0026E6                     u4391:
  7515   0026E6  EF97  F013         	goto	l786
  7516   0026EA                     u4390:
  7517   0026EA  BE07               	btfsc	(___xxtofl@val+3)^0,7,c
  7518   0026EC  EF7C  F013         	goto	u4400
  7519   0026F0  EF7A  F013         	goto	u4401
  7520   0026F4                     u4401:
  7521   0026F4  EF97  F013         	goto	l786
  7522   0026F8                     u4400:
  7523   0026F8  C004  F008         	movff	___xxtofl@val,??___xxtofl
  7524   0026FC  C005  F009         	movff	___xxtofl@val+1,??___xxtofl+1
  7525   002700  C006  F00A         	movff	___xxtofl@val+2,??___xxtofl+2
  7526   002704  C007  F00B         	movff	___xxtofl@val+3,??___xxtofl+3
  7527   002708  1E08               	comf	??___xxtofl^0,f,c
  7528   00270A  1E09               	comf	(??___xxtofl+1)^0,f,c
  7529   00270C  1E0A               	comf	(??___xxtofl+2)^0,f,c
  7530   00270E  1E0B               	comf	(??___xxtofl+3)^0,f,c
  7531   002710  2A08               	incf	??___xxtofl^0,f,c
  7532   002712  0E00               	movlw	0
  7533   002714  2209               	addwfc	(??___xxtofl+1)^0,f,c
  7534   002716  220A               	addwfc	(??___xxtofl+2)^0,f,c
  7535   002718  220B               	addwfc	(??___xxtofl+3)^0,f,c
  7536   00271A  C008  F00E         	movff	??___xxtofl,___xxtofl@arg
  7537   00271E  C009  F00F         	movff	??___xxtofl+1,___xxtofl@arg+1
  7538   002722  C00A  F010         	movff	??___xxtofl+2,___xxtofl@arg+2
  7539   002726  C00B  F011         	movff	??___xxtofl+3,___xxtofl@arg+3
  7540   00272A  EF9F  F013         	goto	l3871
  7541   00272E                     l786:
  7542   00272E  C004  F00E         	movff	___xxtofl@val,___xxtofl@arg
  7543   002732  C005  F00F         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7544   002736  C006  F010         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7545   00273A  C007  F011         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7546   00273E                     l3871:
  7547   00273E  5004               	movf	___xxtofl@val^0,w,c
  7548   002740  1005               	iorwf	(___xxtofl@val+1)^0,w,c
  7549   002742  1006               	iorwf	(___xxtofl@val+2)^0,w,c
  7550   002744  1007               	iorwf	(___xxtofl@val+3)^0,w,c
  7551   002746  A4D8               	btfss	status,2,c
  7552   002748  EFA8  F013         	goto	u4411
  7553   00274C  EFAA  F013         	goto	u4410
  7554   002750                     u4411:
  7555   002750  EFB4  F013         	goto	l3877
  7556   002754                     u4410:
  7557   002754  0E00               	movlw	0
  7558   002756  6E04               	movwf	?___xxtofl^0,c
  7559   002758  0E00               	movlw	0
  7560   00275A  6E05               	movwf	(?___xxtofl+1)^0,c
  7561   00275C  0E00               	movlw	0
  7562   00275E  6E06               	movwf	(?___xxtofl+2)^0,c
  7563   002760  0E00               	movlw	0
  7564   002762  6E07               	movwf	(?___xxtofl+3)^0,c
  7565   002764  EF45  F014         	goto	l789
  7566   002768                     l3877:
  7567   002768  0E96               	movlw	150
  7568   00276A  6E0D               	movwf	___xxtofl@exp^0,c
  7569   00276C  EFBE  F013         	goto	l3881
  7570   002770                     l3879:
  7571   002770  2A0D               	incf	___xxtofl@exp^0,f,c
  7572   002772  90D8               	bcf	status,0,c
  7573   002774  3211               	rrcf	(___xxtofl@arg+3)^0,f,c
  7574   002776  3210               	rrcf	(___xxtofl@arg+2)^0,f,c
  7575   002778  320F               	rrcf	(___xxtofl@arg+1)^0,f,c
  7576   00277A  320E               	rrcf	___xxtofl@arg^0,f,c
  7577   00277C                     l3881:
  7578   00277C  0E00               	movlw	0
  7579   00277E  140E               	andwf	___xxtofl@arg^0,w,c
  7580   002780  6E08               	movwf	??___xxtofl^0,c
  7581   002782  0E00               	movlw	0
  7582   002784  140F               	andwf	(___xxtofl@arg+1)^0,w,c
  7583   002786  6E09               	movwf	(??___xxtofl+1)^0,c
  7584   002788  0E00               	movlw	0
  7585   00278A  1410               	andwf	(___xxtofl@arg+2)^0,w,c
  7586   00278C  6E0A               	movwf	(??___xxtofl+2)^0,c
  7587   00278E  0EFE               	movlw	254
  7588   002790  1411               	andwf	(___xxtofl@arg+3)^0,w,c
  7589   002792  6E0B               	movwf	(??___xxtofl+3)^0,c
  7590   002794  5008               	movf	??___xxtofl^0,w,c
  7591   002796  1009               	iorwf	(??___xxtofl+1)^0,w,c
  7592   002798  100A               	iorwf	(??___xxtofl+2)^0,w,c
  7593   00279A  100B               	iorwf	(??___xxtofl+3)^0,w,c
  7594   00279C  A4D8               	btfss	status,2,c
  7595   00279E  EFD3  F013         	goto	u4421
  7596   0027A2  EFD5  F013         	goto	u4420
  7597   0027A6                     u4421:
  7598   0027A6  EFB8  F013         	goto	l3879
  7599   0027AA                     u4420:
  7600   0027AA  EFE3  F013         	goto	l793
  7601   0027AE                     l3883:
  7602   0027AE  2A0D               	incf	___xxtofl@exp^0,f,c
  7603   0027B0  0E01               	movlw	1
  7604   0027B2  260E               	addwf	___xxtofl@arg^0,f,c
  7605   0027B4  0E00               	movlw	0
  7606   0027B6  220F               	addwfc	(___xxtofl@arg+1)^0,f,c
  7607   0027B8  2210               	addwfc	(___xxtofl@arg+2)^0,f,c
  7608   0027BA  2211               	addwfc	(___xxtofl@arg+3)^0,f,c
  7609   0027BC  90D8               	bcf	status,0,c
  7610   0027BE  3211               	rrcf	(___xxtofl@arg+3)^0,f,c
  7611   0027C0  3210               	rrcf	(___xxtofl@arg+2)^0,f,c
  7612   0027C2  320F               	rrcf	(___xxtofl@arg+1)^0,f,c
  7613   0027C4  320E               	rrcf	___xxtofl@arg^0,f,c
  7614   0027C6                     l793:
  7615   0027C6  0E00               	movlw	0
  7616   0027C8  140E               	andwf	___xxtofl@arg^0,w,c
  7617   0027CA  6E08               	movwf	??___xxtofl^0,c
  7618   0027CC  0E00               	movlw	0
  7619   0027CE  140F               	andwf	(___xxtofl@arg+1)^0,w,c
  7620   0027D0  6E09               	movwf	(??___xxtofl+1)^0,c
  7621   0027D2  0E00               	movlw	0
  7622   0027D4  1410               	andwf	(___xxtofl@arg+2)^0,w,c
  7623   0027D6  6E0A               	movwf	(??___xxtofl+2)^0,c
  7624   0027D8  0EFF               	movlw	255
  7625   0027DA  1411               	andwf	(___xxtofl@arg+3)^0,w,c
  7626   0027DC  6E0B               	movwf	(??___xxtofl+3)^0,c
  7627   0027DE  5008               	movf	??___xxtofl^0,w,c
  7628   0027E0  1009               	iorwf	(??___xxtofl+1)^0,w,c
  7629   0027E2  100A               	iorwf	(??___xxtofl+2)^0,w,c
  7630   0027E4  100B               	iorwf	(??___xxtofl+3)^0,w,c
  7631   0027E6  A4D8               	btfss	status,2,c
  7632   0027E8  EFF8  F013         	goto	u4431
  7633   0027EC  EFFA  F013         	goto	u4430
  7634   0027F0                     u4431:
  7635   0027F0  EFD7  F013         	goto	l3883
  7636   0027F4                     u4430:
  7637   0027F4  EF02  F014         	goto	l3891
  7638   0027F8                     l3889:
  7639   0027F8  060D               	decf	___xxtofl@exp^0,f,c
  7640   0027FA  90D8               	bcf	status,0,c
  7641   0027FC  360E               	rlcf	___xxtofl@arg^0,f,c
  7642   0027FE  360F               	rlcf	(___xxtofl@arg+1)^0,f,c
  7643   002800  3610               	rlcf	(___xxtofl@arg+2)^0,f,c
  7644   002802  3611               	rlcf	(___xxtofl@arg+3)^0,f,c
  7645   002804                     l3891:
  7646   002804  BE10               	btfsc	(___xxtofl@arg+2)^0,7,c
  7647   002806  EF07  F014         	goto	u4441
  7648   00280A  EF09  F014         	goto	u4440
  7649   00280E                     u4441:
  7650   00280E  EF11  F014         	goto	l800
  7651   002812                     u4440:
  7652   002812  0E02               	movlw	2
  7653   002814  600D               	cpfslt	___xxtofl@exp^0,c
  7654   002816  EF0F  F014         	goto	u4451
  7655   00281A  EF11  F014         	goto	u4450
  7656   00281E                     u4451:
  7657   00281E  EFFC  F013         	goto	l3889
  7658   002822                     u4450:
  7659   002822                     l800:
  7660   002822  B00D               	btfsc	___xxtofl@exp^0,0,c
  7661   002824  EF16  F014         	goto	u4461
  7662   002828  EF18  F014         	goto	u4460
  7663   00282C                     u4461:
  7664   00282C  EF19  F014         	goto	l3897
  7665   002830                     u4460:
  7666   002830  9E10               	bcf	(___xxtofl@arg+2)^0,7,c
  7667   002832                     l3897:
  7668   002832  90D8               	bcf	status,0,c
  7669   002834  320D               	rrcf	___xxtofl@exp^0,f,c
  7670   002836  C00D  F008         	movff	___xxtofl@exp,??___xxtofl
  7671   00283A  6A09               	clrf	(??___xxtofl+1)^0,c
  7672   00283C  6A0A               	clrf	(??___xxtofl+2)^0,c
  7673   00283E  6A0B               	clrf	(??___xxtofl+3)^0,c
  7674   002840  C008  F00B         	movff	??___xxtofl,??___xxtofl+3
  7675   002844  6A0A               	clrf	(??___xxtofl+2)^0,c
  7676   002846  6A09               	clrf	(??___xxtofl+1)^0,c
  7677   002848  6A08               	clrf	??___xxtofl^0,c
  7678   00284A  5008               	movf	??___xxtofl^0,w,c
  7679   00284C  120E               	iorwf	___xxtofl@arg^0,f,c
  7680   00284E  5009               	movf	(??___xxtofl+1)^0,w,c
  7681   002850  120F               	iorwf	(___xxtofl@arg+1)^0,f,c
  7682   002852  500A               	movf	(??___xxtofl+2)^0,w,c
  7683   002854  1210               	iorwf	(___xxtofl@arg+2)^0,f,c
  7684   002856  500B               	movf	(??___xxtofl+3)^0,w,c
  7685   002858  1211               	iorwf	(___xxtofl@arg+3)^0,f,c
  7686   00285A  500C               	movf	___xxtofl@sign^0,w,c
  7687   00285C  B4D8               	btfsc	status,2,c
  7688   00285E  EF33  F014         	goto	u4471
  7689   002862  EF35  F014         	goto	u4470
  7690   002866                     u4471:
  7691   002866  EF3D  F014         	goto	l3907
  7692   00286A                     u4470:
  7693   00286A  BE07               	btfsc	(___xxtofl@val+3)^0,7,c
  7694   00286C  EF3C  F014         	goto	u4480
  7695   002870  EF3A  F014         	goto	u4481
  7696   002874                     u4481:
  7697   002874  EF3D  F014         	goto	l3907
  7698   002878                     u4480:
  7699   002878  8E11               	bsf	(___xxtofl@arg+3)^0,7,c
  7700   00287A                     l3907:
  7701   00287A  C00E  F004         	movff	___xxtofl@arg,?___xxtofl
  7702   00287E  C00F  F005         	movff	___xxtofl@arg+1,?___xxtofl+1
  7703   002882  C010  F006         	movff	___xxtofl@arg+2,?___xxtofl+2
  7704   002886  C011  F007         	movff	___xxtofl@arg+3,?___xxtofl+3
  7705   00288A                     l789:
  7706   00288A  0012               	return		;funcret
  7707   00288C                     __end_of___xxtofl:
  7708                           	callstack 0
  7709                           
  7710 ;; *************** function ___flmul *****************
  7711 ;; Defined at:
  7712 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  7713 ;; Parameters:    Size  Location     Type
  7714 ;;  b               4   17[COMRAM] unsigned char 
  7715 ;;  a               4   21[COMRAM] unsigned char 
  7716 ;; Auto vars:     Size  Location     Type
  7717 ;;  prod            4   36[COMRAM] struct .
  7718 ;;  grs             4   31[COMRAM] unsigned long 
  7719 ;;  temp            2   40[COMRAM] struct .
  7720 ;;  bexp            1   35[COMRAM] unsigned char 
  7721 ;;  aexp            1   30[COMRAM] unsigned char 
  7722 ;;  sign            1   29[COMRAM] unsigned char 
  7723 ;; Return value:  Size  Location     Type
  7724 ;;                  4   17[COMRAM] unsigned char 
  7725 ;; Registers used:
  7726 ;;		wreg, status,2, status,0, prodl, prodh
  7727 ;; Tracked objects:
  7728 ;;		On entry : 0/0
  7729 ;;		On exit  : 0/0
  7730 ;;		Unchanged: 0/0
  7731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7732 ;;      Params:         8       0       0       0       0       0       0
  7733 ;;      Locals:        13       0       0       0       0       0       0
  7734 ;;      Temps:          4       0       0       0       0       0       0
  7735 ;;      Totals:        25       0       0       0       0       0       0
  7736 ;;Total ram usage:       25 bytes
  7737 ;; Hardware stack levels used: 1
  7738 ;; Hardware stack levels required when called: 2
  7739 ;; This function calls:
  7740 ;;		Nothing
  7741 ;; This function is called by:
  7742 ;;		_conv_AN0
  7743 ;;		_efgtoa
  7744 ;; This function uses a non-reentrant model
  7745 ;;
  7746                           
  7747                           	psect	text35
  7748   001A4E                     __ptext35:
  7749                           	callstack 0
  7750   001A4E                     ___flmul:
  7751                           	callstack 23
  7752   001A4E  5015               	movf	(___flmul@b+3)^0,w,c
  7753   001A50  0B80               	andlw	128
  7754   001A52  6E1E               	movwf	___flmul@sign^0,c
  7755   001A54  5015               	movf	(___flmul@b+3)^0,w,c
  7756   001A56  2415               	addwf	(___flmul@b+3)^0,w,c
  7757   001A58  6E24               	movwf	___flmul@bexp^0,c
  7758   001A5A  AE14               	btfss	(___flmul@b+2)^0,7,c
  7759   001A5C  EF32  F00D         	goto	u5371
  7760   001A60  EF34  F00D         	goto	u5370
  7761   001A64                     u5371:
  7762   001A64  EF35  F00D         	goto	l4599
  7763   001A68                     u5370:
  7764   001A68  8024               	bsf	___flmul@bexp^0,0,c
  7765   001A6A                     l4599:
  7766   001A6A  5024               	movf	___flmul@bexp^0,w,c
  7767   001A6C  B4D8               	btfsc	status,2,c
  7768   001A6E  EF3B  F00D         	goto	u5381
  7769   001A72  EF3D  F00D         	goto	u5380
  7770   001A76                     u5381:
  7771   001A76  EF50  F00D         	goto	l4607
  7772   001A7A                     u5380:
  7773   001A7A  2824               	incf	___flmul@bexp^0,w,c
  7774   001A7C  A4D8               	btfss	status,2,c
  7775   001A7E  EF43  F00D         	goto	u5391
  7776   001A82  EF45  F00D         	goto	u5390
  7777   001A86                     u5391:
  7778   001A86  EF4D  F00D         	goto	l4605
  7779   001A8A                     u5390:
  7780   001A8A  0E00               	movlw	0
  7781   001A8C  6E12               	movwf	___flmul@b^0,c
  7782   001A8E  0E00               	movlw	0
  7783   001A90  6E13               	movwf	(___flmul@b+1)^0,c
  7784   001A92  0E00               	movlw	0
  7785   001A94  6E14               	movwf	(___flmul@b+2)^0,c
  7786   001A96  0E00               	movlw	0
  7787   001A98  6E15               	movwf	(___flmul@b+3)^0,c
  7788   001A9A                     l4605:
  7789   001A9A  8E14               	bsf	(___flmul@b+2)^0,7,c
  7790   001A9C  EF58  F00D         	goto	l4609
  7791   001AA0                     l4607:
  7792   001AA0  0E00               	movlw	0
  7793   001AA2  6E12               	movwf	___flmul@b^0,c
  7794   001AA4  0E00               	movlw	0
  7795   001AA6  6E13               	movwf	(___flmul@b+1)^0,c
  7796   001AA8  0E00               	movlw	0
  7797   001AAA  6E14               	movwf	(___flmul@b+2)^0,c
  7798   001AAC  0E00               	movlw	0
  7799   001AAE  6E15               	movwf	(___flmul@b+3)^0,c
  7800   001AB0                     l4609:
  7801   001AB0  5019               	movf	(___flmul@a+3)^0,w,c
  7802   001AB2  0B80               	andlw	128
  7803   001AB4  1A1E               	xorwf	___flmul@sign^0,f,c
  7804   001AB6  5019               	movf	(___flmul@a+3)^0,w,c
  7805   001AB8  2419               	addwf	(___flmul@a+3)^0,w,c
  7806   001ABA  6E1F               	movwf	___flmul@aexp^0,c
  7807   001ABC  AE18               	btfss	(___flmul@a+2)^0,7,c
  7808   001ABE  EF63  F00D         	goto	u5401
  7809   001AC2  EF65  F00D         	goto	u5400
  7810   001AC6                     u5401:
  7811   001AC6  EF66  F00D         	goto	l4617
  7812   001ACA                     u5400:
  7813   001ACA  801F               	bsf	___flmul@aexp^0,0,c
  7814   001ACC                     l4617:
  7815   001ACC  501F               	movf	___flmul@aexp^0,w,c
  7816   001ACE  B4D8               	btfsc	status,2,c
  7817   001AD0  EF6C  F00D         	goto	u5411
  7818   001AD4  EF6E  F00D         	goto	u5410
  7819   001AD8                     u5411:
  7820   001AD8  EF81  F00D         	goto	l4625
  7821   001ADC                     u5410:
  7822   001ADC  281F               	incf	___flmul@aexp^0,w,c
  7823   001ADE  A4D8               	btfss	status,2,c
  7824   001AE0  EF74  F00D         	goto	u5421
  7825   001AE4  EF76  F00D         	goto	u5420
  7826   001AE8                     u5421:
  7827   001AE8  EF7E  F00D         	goto	l4623
  7828   001AEC                     u5420:
  7829   001AEC  0E00               	movlw	0
  7830   001AEE  6E16               	movwf	___flmul@a^0,c
  7831   001AF0  0E00               	movlw	0
  7832   001AF2  6E17               	movwf	(___flmul@a+1)^0,c
  7833   001AF4  0E00               	movlw	0
  7834   001AF6  6E18               	movwf	(___flmul@a+2)^0,c
  7835   001AF8  0E00               	movlw	0
  7836   001AFA  6E19               	movwf	(___flmul@a+3)^0,c
  7837   001AFC                     l4623:
  7838   001AFC  8E18               	bsf	(___flmul@a+2)^0,7,c
  7839   001AFE  EF89  F00D         	goto	l745
  7840   001B02                     l4625:
  7841   001B02  0E00               	movlw	0
  7842   001B04  6E16               	movwf	___flmul@a^0,c
  7843   001B06  0E00               	movlw	0
  7844   001B08  6E17               	movwf	(___flmul@a+1)^0,c
  7845   001B0A  0E00               	movlw	0
  7846   001B0C  6E18               	movwf	(___flmul@a+2)^0,c
  7847   001B0E  0E00               	movlw	0
  7848   001B10  6E19               	movwf	(___flmul@a+3)^0,c
  7849   001B12                     l745:
  7850   001B12  501F               	movf	___flmul@aexp^0,w,c
  7851   001B14  B4D8               	btfsc	status,2,c
  7852   001B16  EF8F  F00D         	goto	u5431
  7853   001B1A  EF91  F00D         	goto	u5430
  7854   001B1E                     u5431:
  7855   001B1E  EF99  F00D         	goto	l4629
  7856   001B22                     u5430:
  7857   001B22  5024               	movf	___flmul@bexp^0,w,c
  7858   001B24  A4D8               	btfss	status,2,c
  7859   001B26  EF97  F00D         	goto	u5441
  7860   001B2A  EF99  F00D         	goto	u5440
  7861   001B2E                     u5441:
  7862   001B2E  EFA3  F00D         	goto	l4633
  7863   001B32                     u5440:
  7864   001B32                     l4629:
  7865   001B32  0E00               	movlw	0
  7866   001B34  6E12               	movwf	?___flmul^0,c
  7867   001B36  0E00               	movlw	0
  7868   001B38  6E13               	movwf	(?___flmul+1)^0,c
  7869   001B3A  0E00               	movlw	0
  7870   001B3C  6E14               	movwf	(?___flmul+2)^0,c
  7871   001B3E  0E00               	movlw	0
  7872   001B40  6E15               	movwf	(?___flmul+3)^0,c
  7873   001B42  EF3B  F00F         	goto	l749
  7874   001B46                     l4633:
  7875   001B46  5018               	movf	(___flmul@a+2)^0,w,c
  7876   001B48  0212               	mulwf	___flmul@b^0,c
  7877   001B4A  CFF3 F029          	movff	prodl,___flmul@temp
  7878   001B4E  CFF4 F02A          	movff	prodh,___flmul@temp+1
  7879   001B52  5029               	movf	___flmul@temp^0,w,c
  7880   001B54  6E20               	movwf	___flmul@grs^0,c
  7881   001B56  6A21               	clrf	(___flmul@grs+1)^0,c
  7882   001B58  6A22               	clrf	(___flmul@grs+2)^0,c
  7883   001B5A  6A23               	clrf	(___flmul@grs+3)^0,c
  7884   001B5C  502A               	movf	(___flmul@temp+1)^0,w,c
  7885   001B5E  6E25               	movwf	___flmul@prod^0,c
  7886   001B60  6A26               	clrf	(___flmul@prod+1)^0,c
  7887   001B62  6A27               	clrf	(___flmul@prod+2)^0,c
  7888   001B64  6A28               	clrf	(___flmul@prod+3)^0,c
  7889   001B66  5017               	movf	(___flmul@a+1)^0,w,c
  7890   001B68  0213               	mulwf	(___flmul@b+1)^0,c
  7891   001B6A  CFF3 F029          	movff	prodl,___flmul@temp
  7892   001B6E  CFF4 F02A          	movff	prodh,___flmul@temp+1
  7893   001B72  5029               	movf	___flmul@temp^0,w,c
  7894   001B74  2620               	addwf	___flmul@grs^0,f,c
  7895   001B76  0E00               	movlw	0
  7896   001B78  2221               	addwfc	(___flmul@grs+1)^0,f,c
  7897   001B7A  2222               	addwfc	(___flmul@grs+2)^0,f,c
  7898   001B7C  2223               	addwfc	(___flmul@grs+3)^0,f,c
  7899   001B7E  502A               	movf	(___flmul@temp+1)^0,w,c
  7900   001B80  2625               	addwf	___flmul@prod^0,f,c
  7901   001B82  0E00               	movlw	0
  7902   001B84  2226               	addwfc	(___flmul@prod+1)^0,f,c
  7903   001B86  2227               	addwfc	(___flmul@prod+2)^0,f,c
  7904   001B88  2228               	addwfc	(___flmul@prod+3)^0,f,c
  7905   001B8A  5016               	movf	___flmul@a^0,w,c
  7906   001B8C  0214               	mulwf	(___flmul@b+2)^0,c
  7907   001B8E  CFF3 F029          	movff	prodl,___flmul@temp
  7908   001B92  CFF4 F02A          	movff	prodh,___flmul@temp+1
  7909   001B96  5029               	movf	___flmul@temp^0,w,c
  7910   001B98  2620               	addwf	___flmul@grs^0,f,c
  7911   001B9A  0E00               	movlw	0
  7912   001B9C  2221               	addwfc	(___flmul@grs+1)^0,f,c
  7913   001B9E  2222               	addwfc	(___flmul@grs+2)^0,f,c
  7914   001BA0  2223               	addwfc	(___flmul@grs+3)^0,f,c
  7915   001BA2  502A               	movf	(___flmul@temp+1)^0,w,c
  7916   001BA4  2625               	addwf	___flmul@prod^0,f,c
  7917   001BA6  0E00               	movlw	0
  7918   001BA8  2226               	addwfc	(___flmul@prod+1)^0,f,c
  7919   001BAA  2227               	addwfc	(___flmul@prod+2)^0,f,c
  7920   001BAC  2228               	addwfc	(___flmul@prod+3)^0,f,c
  7921   001BAE  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
  7922   001BB2  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
  7923   001BB6  C020  F021         	movff	___flmul@grs,___flmul@grs+1
  7924   001BBA  6A20               	clrf	___flmul@grs^0,c
  7925   001BBC  5016               	movf	___flmul@a^0,w,c
  7926   001BBE  0213               	mulwf	(___flmul@b+1)^0,c
  7927   001BC0  CFF3 F029          	movff	prodl,___flmul@temp
  7928   001BC4  CFF4 F02A          	movff	prodh,___flmul@temp+1
  7929   001BC8  5029               	movf	___flmul@temp^0,w,c
  7930   001BCA  2620               	addwf	___flmul@grs^0,f,c
  7931   001BCC  502A               	movf	(___flmul@temp+1)^0,w,c
  7932   001BCE  2221               	addwfc	(___flmul@grs+1)^0,f,c
  7933   001BD0  0E00               	movlw	0
  7934   001BD2  2222               	addwfc	(___flmul@grs+2)^0,f,c
  7935   001BD4  0E00               	movlw	0
  7936   001BD6  2223               	addwfc	(___flmul@grs+3)^0,f,c
  7937   001BD8  5017               	movf	(___flmul@a+1)^0,w,c
  7938   001BDA  0212               	mulwf	___flmul@b^0,c
  7939   001BDC  CFF3 F029          	movff	prodl,___flmul@temp
  7940   001BE0  CFF4 F02A          	movff	prodh,___flmul@temp+1
  7941   001BE4  5029               	movf	___flmul@temp^0,w,c
  7942   001BE6  2620               	addwf	___flmul@grs^0,f,c
  7943   001BE8  502A               	movf	(___flmul@temp+1)^0,w,c
  7944   001BEA  2221               	addwfc	(___flmul@grs+1)^0,f,c
  7945   001BEC  0E00               	movlw	0
  7946   001BEE  2222               	addwfc	(___flmul@grs+2)^0,f,c
  7947   001BF0  0E00               	movlw	0
  7948   001BF2  2223               	addwfc	(___flmul@grs+3)^0,f,c
  7949   001BF4  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
  7950   001BF8  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
  7951   001BFC  C020  F021         	movff	___flmul@grs,___flmul@grs+1
  7952   001C00  6A20               	clrf	___flmul@grs^0,c
  7953   001C02  5016               	movf	___flmul@a^0,w,c
  7954   001C04  0212               	mulwf	___flmul@b^0,c
  7955   001C06  CFF3 F029          	movff	prodl,___flmul@temp
  7956   001C0A  CFF4 F02A          	movff	prodh,___flmul@temp+1
  7957   001C0E  5029               	movf	___flmul@temp^0,w,c
  7958   001C10  2620               	addwf	___flmul@grs^0,f,c
  7959   001C12  502A               	movf	(___flmul@temp+1)^0,w,c
  7960   001C14  2221               	addwfc	(___flmul@grs+1)^0,f,c
  7961   001C16  0E00               	movlw	0
  7962   001C18  2222               	addwfc	(___flmul@grs+2)^0,f,c
  7963   001C1A  0E00               	movlw	0
  7964   001C1C  2223               	addwfc	(___flmul@grs+3)^0,f,c
  7965   001C1E  5018               	movf	(___flmul@a+2)^0,w,c
  7966   001C20  0213               	mulwf	(___flmul@b+1)^0,c
  7967   001C22  CFF3 F029          	movff	prodl,___flmul@temp
  7968   001C26  CFF4 F02A          	movff	prodh,___flmul@temp+1
  7969   001C2A  5029               	movf	___flmul@temp^0,w,c
  7970   001C2C  2625               	addwf	___flmul@prod^0,f,c
  7971   001C2E  502A               	movf	(___flmul@temp+1)^0,w,c
  7972   001C30  2226               	addwfc	(___flmul@prod+1)^0,f,c
  7973   001C32  0E00               	movlw	0
  7974   001C34  2227               	addwfc	(___flmul@prod+2)^0,f,c
  7975   001C36  0E00               	movlw	0
  7976   001C38  2228               	addwfc	(___flmul@prod+3)^0,f,c
  7977   001C3A  5017               	movf	(___flmul@a+1)^0,w,c
  7978   001C3C  0214               	mulwf	(___flmul@b+2)^0,c
  7979   001C3E  CFF3 F029          	movff	prodl,___flmul@temp
  7980   001C42  CFF4 F02A          	movff	prodh,___flmul@temp+1
  7981   001C46  5029               	movf	___flmul@temp^0,w,c
  7982   001C48  2625               	addwf	___flmul@prod^0,f,c
  7983   001C4A  502A               	movf	(___flmul@temp+1)^0,w,c
  7984   001C4C  2226               	addwfc	(___flmul@prod+1)^0,f,c
  7985   001C4E  0E00               	movlw	0
  7986   001C50  2227               	addwfc	(___flmul@prod+2)^0,f,c
  7987   001C52  0E00               	movlw	0
  7988   001C54  2228               	addwfc	(___flmul@prod+3)^0,f,c
  7989   001C56  5018               	movf	(___flmul@a+2)^0,w,c
  7990   001C58  0214               	mulwf	(___flmul@b+2)^0,c
  7991   001C5A  CFF3 F029          	movff	prodl,___flmul@temp
  7992   001C5E  CFF4 F02A          	movff	prodh,___flmul@temp+1
  7993   001C62  5029               	movf	___flmul@temp^0,w,c
  7994   001C64  6E1A               	movwf	??___flmul^0,c
  7995   001C66  502A               	movf	(___flmul@temp+1)^0,w,c
  7996   001C68  6E1B               	movwf	(??___flmul+1)^0,c
  7997   001C6A  6A1C               	clrf	(??___flmul+2)^0,c
  7998   001C6C  6A1D               	clrf	(??___flmul+3)^0,c
  7999   001C6E  C01C  F01D         	movff	??___flmul+2,??___flmul+3
  8000   001C72  C01B  F01C         	movff	??___flmul+1,??___flmul+2
  8001   001C76  C01A  F01B         	movff	??___flmul,??___flmul+1
  8002   001C7A  6A1A               	clrf	??___flmul^0,c
  8003   001C7C  501A               	movf	??___flmul^0,w,c
  8004   001C7E  2625               	addwf	___flmul@prod^0,f,c
  8005   001C80  501B               	movf	(??___flmul+1)^0,w,c
  8006   001C82  2226               	addwfc	(___flmul@prod+1)^0,f,c
  8007   001C84  501C               	movf	(??___flmul+2)^0,w,c
  8008   001C86  2227               	addwfc	(___flmul@prod+2)^0,f,c
  8009   001C88  501D               	movf	(??___flmul+3)^0,w,c
  8010   001C8A  2228               	addwfc	(___flmul@prod+3)^0,f,c
  8011   001C8C  C020  F01A         	movff	___flmul@grs,??___flmul
  8012   001C90  C021  F01B         	movff	___flmul@grs+1,??___flmul+1
  8013   001C94  C022  F01C         	movff	___flmul@grs+2,??___flmul+2
  8014   001C98  C023  F01D         	movff	___flmul@grs+3,??___flmul+3
  8015   001C9C  0E19               	movlw	25
  8016   001C9E  EF56  F00E         	goto	u5450
  8017   001CA2                     u5455:
  8018   001CA2  90D8               	bcf	status,0,c
  8019   001CA4  321D               	rrcf	(??___flmul+3)^0,f,c
  8020   001CA6  321C               	rrcf	(??___flmul+2)^0,f,c
  8021   001CA8  321B               	rrcf	(??___flmul+1)^0,f,c
  8022   001CAA  321A               	rrcf	??___flmul^0,f,c
  8023   001CAC                     u5450:
  8024   001CAC  2EE8               	decfsz	wreg,f,c
  8025   001CAE  EF51  F00E         	goto	u5455
  8026   001CB2  501A               	movf	??___flmul^0,w,c
  8027   001CB4  2625               	addwf	___flmul@prod^0,f,c
  8028   001CB6  501B               	movf	(??___flmul+1)^0,w,c
  8029   001CB8  2226               	addwfc	(___flmul@prod+1)^0,f,c
  8030   001CBA  501C               	movf	(??___flmul+2)^0,w,c
  8031   001CBC  2227               	addwfc	(___flmul@prod+2)^0,f,c
  8032   001CBE  501D               	movf	(??___flmul+3)^0,w,c
  8033   001CC0  2228               	addwfc	(___flmul@prod+3)^0,f,c
  8034   001CC2  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
  8035   001CC6  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
  8036   001CCA  C020  F021         	movff	___flmul@grs,___flmul@grs+1
  8037   001CCE  6A20               	clrf	___flmul@grs^0,c
  8038   001CD0  501F               	movf	___flmul@aexp^0,w,c
  8039   001CD2  C024  F01A         	movff	___flmul@bexp,??___flmul
  8040   001CD6  6A1B               	clrf	(??___flmul+1)^0,c
  8041   001CD8  261A               	addwf	??___flmul^0,f,c
  8042   001CDA  0E00               	movlw	0
  8043   001CDC  221B               	addwfc	(??___flmul+1)^0,f,c
  8044   001CDE  0E82               	movlw	130
  8045   001CE0  241A               	addwf	??___flmul^0,w,c
  8046   001CE2  6E29               	movwf	___flmul@temp^0,c
  8047   001CE4  0EFF               	movlw	255
  8048   001CE6  201B               	addwfc	(??___flmul+1)^0,w,c
  8049   001CE8  6E2A               	movwf	(___flmul@temp+1)^0,c
  8050   001CEA  EF8C  F00E         	goto	l4681
  8051   001CEE                     l4675:
  8052   001CEE  90D8               	bcf	status,0,c
  8053   001CF0  3625               	rlcf	___flmul@prod^0,f,c
  8054   001CF2  3626               	rlcf	(___flmul@prod+1)^0,f,c
  8055   001CF4  3627               	rlcf	(___flmul@prod+2)^0,f,c
  8056   001CF6  3628               	rlcf	(___flmul@prod+3)^0,f,c
  8057   001CF8  AE23               	btfss	(___flmul@grs+3)^0,7,c
  8058   001CFA  EF81  F00E         	goto	u5461
  8059   001CFE  EF83  F00E         	goto	u5460
  8060   001D02                     u5461:
  8061   001D02  EF84  F00E         	goto	l752
  8062   001D06                     u5460:
  8063   001D06  8025               	bsf	___flmul@prod^0,0,c
  8064   001D08                     l752:
  8065   001D08  90D8               	bcf	status,0,c
  8066   001D0A  3620               	rlcf	___flmul@grs^0,f,c
  8067   001D0C  3621               	rlcf	(___flmul@grs+1)^0,f,c
  8068   001D0E  3622               	rlcf	(___flmul@grs+2)^0,f,c
  8069   001D10  3623               	rlcf	(___flmul@grs+3)^0,f,c
  8070   001D12  0629               	decf	___flmul@temp^0,f,c
  8071   001D14  A0D8               	btfss	status,0,c
  8072   001D16  062A               	decf	(___flmul@temp+1)^0,f,c
  8073   001D18                     l4681:
  8074   001D18  AE27               	btfss	(___flmul@prod+2)^0,7,c
  8075   001D1A  EF91  F00E         	goto	u5471
  8076   001D1E  EF93  F00E         	goto	u5470
  8077   001D22                     u5471:
  8078   001D22  EF77  F00E         	goto	l4675
  8079   001D26                     u5470:
  8080   001D26  0E00               	movlw	0
  8081   001D28  6E1F               	movwf	___flmul@aexp^0,c
  8082   001D2A  AE23               	btfss	(___flmul@grs+3)^0,7,c
  8083   001D2C  EF9A  F00E         	goto	u5481
  8084   001D30  EF9C  F00E         	goto	u5480
  8085   001D34                     u5481:
  8086   001D34  EFC0  F00E         	goto	l754
  8087   001D38                     u5480:
  8088   001D38  0EFF               	movlw	255
  8089   001D3A  1420               	andwf	___flmul@grs^0,w,c
  8090   001D3C  6E1A               	movwf	??___flmul^0,c
  8091   001D3E  0EFF               	movlw	255
  8092   001D40  1421               	andwf	(___flmul@grs+1)^0,w,c
  8093   001D42  6E1B               	movwf	(??___flmul+1)^0,c
  8094   001D44  0EFF               	movlw	255
  8095   001D46  1422               	andwf	(___flmul@grs+2)^0,w,c
  8096   001D48  6E1C               	movwf	(??___flmul+2)^0,c
  8097   001D4A  0E7F               	movlw	127
  8098   001D4C  1423               	andwf	(___flmul@grs+3)^0,w,c
  8099   001D4E  6E1D               	movwf	(??___flmul+3)^0,c
  8100   001D50  501A               	movf	??___flmul^0,w,c
  8101   001D52  101B               	iorwf	(??___flmul+1)^0,w,c
  8102   001D54  101C               	iorwf	(??___flmul+2)^0,w,c
  8103   001D56  101D               	iorwf	(??___flmul+3)^0,w,c
  8104   001D58  B4D8               	btfsc	status,2,c
  8105   001D5A  EFB1  F00E         	goto	u5491
  8106   001D5E  EFB3  F00E         	goto	u5490
  8107   001D62                     u5491:
  8108   001D62  EFB7  F00E         	goto	l755
  8109   001D66                     u5490:
  8110   001D66                     l4689:
  8111   001D66  0E01               	movlw	1
  8112   001D68  6E1F               	movwf	___flmul@aexp^0,c
  8113   001D6A  EFC0  F00E         	goto	l754
  8114   001D6E                     l755:
  8115   001D6E  A025               	btfss	___flmul@prod^0,0,c
  8116   001D70  EFBC  F00E         	goto	u5501
  8117   001D74  EFBE  F00E         	goto	u5500
  8118   001D78                     u5501:
  8119   001D78  EFC0  F00E         	goto	l754
  8120   001D7C                     u5500:
  8121   001D7C  EFB3  F00E         	goto	l4689
  8122   001D80                     l754:
  8123   001D80  501F               	movf	___flmul@aexp^0,w,c
  8124   001D82  B4D8               	btfsc	status,2,c
  8125   001D84  EFC6  F00E         	goto	u5511
  8126   001D88  EFC8  F00E         	goto	u5510
  8127   001D8C                     u5511:
  8128   001D8C  EFEC  F00E         	goto	l4701
  8129   001D90                     u5510:
  8130   001D90  0E01               	movlw	1
  8131   001D92  2625               	addwf	___flmul@prod^0,f,c
  8132   001D94  0E00               	movlw	0
  8133   001D96  2226               	addwfc	(___flmul@prod+1)^0,f,c
  8134   001D98  2227               	addwfc	(___flmul@prod+2)^0,f,c
  8135   001D9A  2228               	addwfc	(___flmul@prod+3)^0,f,c
  8136   001D9C  A028               	btfss	(___flmul@prod+3)^0,0,c
  8137   001D9E  EFD3  F00E         	goto	u5521
  8138   001DA2  EFD5  F00E         	goto	u5520
  8139   001DA6                     u5521:
  8140   001DA6  EFEC  F00E         	goto	l4701
  8141   001DAA                     u5520:
  8142   001DAA  C025  F01A         	movff	___flmul@prod,??___flmul
  8143   001DAE  C026  F01B         	movff	___flmul@prod+1,??___flmul+1
  8144   001DB2  C027  F01C         	movff	___flmul@prod+2,??___flmul+2
  8145   001DB6  C028  F01D         	movff	___flmul@prod+3,??___flmul+3
  8146   001DBA  341D               	rlcf	(??___flmul+3)^0,w,c
  8147   001DBC  321D               	rrcf	(??___flmul+3)^0,f,c
  8148   001DBE  321C               	rrcf	(??___flmul+2)^0,f,c
  8149   001DC0  321B               	rrcf	(??___flmul+1)^0,f,c
  8150   001DC2  321A               	rrcf	??___flmul^0,f,c
  8151   001DC4  C01A  F025         	movff	??___flmul,___flmul@prod
  8152   001DC8  C01B  F026         	movff	??___flmul+1,___flmul@prod+1
  8153   001DCC  C01C  F027         	movff	??___flmul+2,___flmul@prod+2
  8154   001DD0  C01D  F028         	movff	??___flmul+3,___flmul@prod+3
  8155   001DD4  4A29               	infsnz	___flmul@temp^0,f,c
  8156   001DD6  2A2A               	incf	(___flmul@temp+1)^0,f,c
  8157   001DD8                     l4701:
  8158   001DD8  BE2A               	btfsc	(___flmul@temp+1)^0,7,c
  8159   001DDA  EFF7  F00E         	goto	u5531
  8160   001DDE  502A               	movf	(___flmul@temp+1)^0,w,c
  8161   001DE0  E108               	bnz	u5530
  8162   001DE2  2829               	incf	___flmul@temp^0,w,c
  8163   001DE4  A0D8               	btfss	status,0,c
  8164   001DE6  EFF7  F00E         	goto	u5531
  8165   001DEA  EFF9  F00E         	goto	u5530
  8166   001DEE                     u5531:
  8167   001DEE  EF03  F00F         	goto	l4705
  8168   001DF2                     u5530:
  8169   001DF2  0E00               	movlw	0
  8170   001DF4  6E25               	movwf	___flmul@prod^0,c
  8171   001DF6  0E00               	movlw	0
  8172   001DF8  6E26               	movwf	(___flmul@prod+1)^0,c
  8173   001DFA  0E80               	movlw	128
  8174   001DFC  6E27               	movwf	(___flmul@prod+2)^0,c
  8175   001DFE  0E7F               	movlw	127
  8176   001E00  6E28               	movwf	(___flmul@prod+3)^0,c
  8177   001E02  EF31  F00F         	goto	l4717
  8178   001E06                     l4705:
  8179   001E06  BE2A               	btfsc	(___flmul@temp+1)^0,7,c
  8180   001E08  EF10  F00F         	goto	u5540
  8181   001E0C  502A               	movf	(___flmul@temp+1)^0,w,c
  8182   001E0E  E106               	bnz	u5541
  8183   001E10  0429               	decf	___flmul@temp^0,w,c
  8184   001E12  B0D8               	btfsc	status,0,c
  8185   001E14  EF0E  F00F         	goto	u5541
  8186   001E18  EF10  F00F         	goto	u5540
  8187   001E1C                     u5541:
  8188   001E1C  EF1C  F00F         	goto	l762
  8189   001E20                     u5540:
  8190   001E20  0E00               	movlw	0
  8191   001E22  6E25               	movwf	___flmul@prod^0,c
  8192   001E24  0E00               	movlw	0
  8193   001E26  6E26               	movwf	(___flmul@prod+1)^0,c
  8194   001E28  0E00               	movlw	0
  8195   001E2A  6E27               	movwf	(___flmul@prod+2)^0,c
  8196   001E2C  0E00               	movlw	0
  8197   001E2E  6E28               	movwf	(___flmul@prod+3)^0,c
  8198   001E30  0E00               	movlw	0
  8199   001E32  6E1E               	movwf	___flmul@sign^0,c
  8200   001E34  EF31  F00F         	goto	l4717
  8201   001E38                     l762:
  8202   001E38  C029  F024         	movff	___flmul@temp,___flmul@bexp
  8203   001E3C  0EFF               	movlw	255
  8204   001E3E  1625               	andwf	___flmul@prod^0,f,c
  8205   001E40  0EFF               	movlw	255
  8206   001E42  1626               	andwf	(___flmul@prod+1)^0,f,c
  8207   001E44  0E7F               	movlw	127
  8208   001E46  1627               	andwf	(___flmul@prod+2)^0,f,c
  8209   001E48  0E00               	movlw	0
  8210   001E4A  1628               	andwf	(___flmul@prod+3)^0,f,c
  8211   001E4C  A024               	btfss	___flmul@bexp^0,0,c
  8212   001E4E  EF2B  F00F         	goto	u5551
  8213   001E52  EF2D  F00F         	goto	u5550
  8214   001E56                     u5551:
  8215   001E56  EF2E  F00F         	goto	l4715
  8216   001E5A                     u5550:
  8217   001E5A  8E27               	bsf	(___flmul@prod+2)^0,7,c
  8218   001E5C                     l4715:
  8219   001E5C  90D8               	bcf	status,0,c
  8220   001E5E  3024               	rrcf	___flmul@bexp^0,w,c
  8221   001E60  6E28               	movwf	(___flmul@prod+3)^0,c
  8222   001E62                     l4717:
  8223   001E62  501E               	movf	___flmul@sign^0,w,c
  8224   001E64  1228               	iorwf	(___flmul@prod+3)^0,f,c
  8225   001E66  C025  F012         	movff	___flmul@prod,?___flmul
  8226   001E6A  C026  F013         	movff	___flmul@prod+1,?___flmul+1
  8227   001E6E  C027  F014         	movff	___flmul@prod+2,?___flmul+2
  8228   001E72  C028  F015         	movff	___flmul@prod+3,?___flmul+3
  8229   001E76                     l749:
  8230   001E76  0012               	return		;funcret
  8231   001E78                     __end_of___flmul:
  8232                           	callstack 0
  8233                           
  8234 ;; *************** function _config_Interrupt *****************
  8235 ;; Defined at:
  8236 ;;		line 123 in file "Program_main.c"
  8237 ;; Parameters:    Size  Location     Type
  8238 ;;		None
  8239 ;; Auto vars:     Size  Location     Type
  8240 ;;		None
  8241 ;; Return value:  Size  Location     Type
  8242 ;;                  1    wreg      void 
  8243 ;; Registers used:
  8244 ;;		wreg, status,2
  8245 ;; Tracked objects:
  8246 ;;		On entry : 0/0
  8247 ;;		On exit  : 0/0
  8248 ;;		Unchanged: 0/0
  8249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8250 ;;      Params:         0       0       0       0       0       0       0
  8251 ;;      Locals:         0       0       0       0       0       0       0
  8252 ;;      Temps:          0       0       0       0       0       0       0
  8253 ;;      Totals:         0       0       0       0       0       0       0
  8254 ;;Total ram usage:        0 bytes
  8255 ;; Hardware stack levels used: 1
  8256 ;; Hardware stack levels required when called: 2
  8257 ;; This function calls:
  8258 ;;		Nothing
  8259 ;; This function is called by:
  8260 ;;		_main
  8261 ;; This function uses a non-reentrant model
  8262 ;;
  8263                           
  8264                           	psect	text36
  8265   003778                     __ptext36:
  8266                           	callstack 0
  8267   003778                     _config_Interrupt:
  8268                           	callstack 28
  8269   003778                     
  8270                           ;Program_main.c: 125:     INTCON = 0XC0;
  8271   003778  0EC0               	movlw	192
  8272   00377A  6EF2               	movwf	242,c	;volatile
  8273                           
  8274                           ;Program_main.c: 126:     PIE1 = 0X20;
  8275   00377C  0E20               	movlw	32
  8276   00377E  6E9D               	movwf	157,c	;volatile
  8277   003780  0012               	return		;funcret
  8278   003782                     __end_of_config_Interrupt:
  8279                           	callstack 0
  8280                           
  8281 ;; *************** function _config_IO *****************
  8282 ;; Defined at:
  8283 ;;		line 81 in file "Program_main.c"
  8284 ;; Parameters:    Size  Location     Type
  8285 ;;		None
  8286 ;; Auto vars:     Size  Location     Type
  8287 ;;		None
  8288 ;; Return value:  Size  Location     Type
  8289 ;;                  1    wreg      void 
  8290 ;; Registers used:
  8291 ;;		wreg, status,2
  8292 ;; Tracked objects:
  8293 ;;		On entry : 0/0
  8294 ;;		On exit  : 0/0
  8295 ;;		Unchanged: 0/0
  8296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8297 ;;      Params:         0       0       0       0       0       0       0
  8298 ;;      Locals:         0       0       0       0       0       0       0
  8299 ;;      Temps:          0       0       0       0       0       0       0
  8300 ;;      Totals:         0       0       0       0       0       0       0
  8301 ;;Total ram usage:        0 bytes
  8302 ;; Hardware stack levels used: 1
  8303 ;; Hardware stack levels required when called: 2
  8304 ;; This function calls:
  8305 ;;		Nothing
  8306 ;; This function is called by:
  8307 ;;		_main
  8308 ;; This function uses a non-reentrant model
  8309 ;;
  8310                           
  8311                           	psect	text37
  8312   003782                     __ptext37:
  8313                           	callstack 0
  8314   003782                     _config_IO:
  8315                           	callstack 28
  8316   003782                     
  8317                           ;Program_main.c: 83:     TRISD = 0X00;
  8318   003782  0E00               	movlw	0
  8319   003784  6E95               	movwf	149,c	;volatile
  8320                           
  8321                           ;Program_main.c: 84:     PORTD = 0X00;
  8322   003786  0E00               	movlw	0
  8323   003788  6E83               	movwf	131,c	;volatile
  8324   00378A  0012               	return		;funcret
  8325   00378C                     __end_of_config_IO:
  8326                           	callstack 0
  8327                           
  8328 ;; *************** function _config_FOSC *****************
  8329 ;; Defined at:
  8330 ;;		line 93 in file "Program_main.c"
  8331 ;; Parameters:    Size  Location     Type
  8332 ;;		None
  8333 ;; Auto vars:     Size  Location     Type
  8334 ;;		None
  8335 ;; Return value:  Size  Location     Type
  8336 ;;                  1    wreg      void 
  8337 ;; Registers used:
  8338 ;;		wreg, status,2
  8339 ;; Tracked objects:
  8340 ;;		On entry : 0/0
  8341 ;;		On exit  : 0/0
  8342 ;;		Unchanged: 0/0
  8343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8344 ;;      Params:         0       0       0       0       0       0       0
  8345 ;;      Locals:         0       0       0       0       0       0       0
  8346 ;;      Temps:          0       0       0       0       0       0       0
  8347 ;;      Totals:         0       0       0       0       0       0       0
  8348 ;;Total ram usage:        0 bytes
  8349 ;; Hardware stack levels used: 1
  8350 ;; Hardware stack levels required when called: 2
  8351 ;; This function calls:
  8352 ;;		Nothing
  8353 ;; This function is called by:
  8354 ;;		_main
  8355 ;; This function uses a non-reentrant model
  8356 ;;
  8357                           
  8358                           	psect	text38
  8359   00378C                     __ptext38:
  8360                           	callstack 0
  8361   00378C                     _config_FOSC:
  8362                           	callstack 28
  8363   00378C                     
  8364                           ;Program_main.c: 95:     OSCCON = 0X00;
  8365   00378C  0E00               	movlw	0
  8366   00378E  6ED3               	movwf	211,c	;volatile
  8367                           
  8368                           ;Program_main.c: 96:     OSCTUNE = 0X00;
  8369   003790  0E00               	movlw	0
  8370   003792  6E9B               	movwf	155,c	;volatile
  8371   003794  0012               	return		;funcret
  8372   003796                     __end_of_config_FOSC:
  8373                           	callstack 0
  8374                           
  8375 ;; *************** function _config_ADC *****************
  8376 ;; Defined at:
  8377 ;;		line 87 in file "Program_main.c"
  8378 ;; Parameters:    Size  Location     Type
  8379 ;;		None
  8380 ;; Auto vars:     Size  Location     Type
  8381 ;;		None
  8382 ;; Return value:  Size  Location     Type
  8383 ;;                  1    wreg      void 
  8384 ;; Registers used:
  8385 ;;		wreg, status,2
  8386 ;; Tracked objects:
  8387 ;;		On entry : 0/0
  8388 ;;		On exit  : 0/0
  8389 ;;		Unchanged: 0/0
  8390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8391 ;;      Params:         0       0       0       0       0       0       0
  8392 ;;      Locals:         0       0       0       0       0       0       0
  8393 ;;      Temps:          0       0       0       0       0       0       0
  8394 ;;      Totals:         0       0       0       0       0       0       0
  8395 ;;Total ram usage:        0 bytes
  8396 ;; Hardware stack levels used: 1
  8397 ;; Hardware stack levels required when called: 2
  8398 ;; This function calls:
  8399 ;;		Nothing
  8400 ;; This function is called by:
  8401 ;;		_main
  8402 ;; This function uses a non-reentrant model
  8403 ;;
  8404                           
  8405                           	psect	text39
  8406   00376A                     __ptext39:
  8407                           	callstack 0
  8408   00376A                     _config_ADC:
  8409                           	callstack 28
  8410   00376A                     
  8411                           ;Program_main.c: 89:     ADCON0 = 0X01;
  8412   00376A  0E01               	movlw	1
  8413   00376C  6EC2               	movwf	194,c	;volatile
  8414                           
  8415                           ;Program_main.c: 90:     ADCON1 = 0X0E;
  8416   00376E  0E0E               	movlw	14
  8417   003770  6EC1               	movwf	193,c	;volatile
  8418                           
  8419                           ;Program_main.c: 91:     ADCON2 = 0X87;
  8420   003772  0E87               	movlw	135
  8421   003774  6EC0               	movwf	192,c	;volatile
  8422   003776  0012               	return		;funcret
  8423   003778                     __end_of_config_ADC:
  8424                           	callstack 0
  8425                           
  8426 ;; *************** function _receive_DATA *****************
  8427 ;; Defined at:
  8428 ;;		line 129 in file "Program_main.c"
  8429 ;; Parameters:    Size  Location     Type
  8430 ;;		None
  8431 ;; Auto vars:     Size  Location     Type
  8432 ;;		None
  8433 ;; Return value:  Size  Location     Type
  8434 ;;                  1    wreg      void 
  8435 ;; Registers used:
  8436 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8437 ;; Tracked objects:
  8438 ;;		On entry : 0/0
  8439 ;;		On exit  : 0/0
  8440 ;;		Unchanged: 0/0
  8441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8442 ;;      Params:         0       0       0       0       0       0       0
  8443 ;;      Locals:         0       0       0       0       0       0       0
  8444 ;;      Temps:          3       0       0       0       0       0       0
  8445 ;;      Totals:         3       0       0       0       0       0       0
  8446 ;;Total ram usage:        3 bytes
  8447 ;; Hardware stack levels used: 1
  8448 ;; Hardware stack levels required when called: 1
  8449 ;; This function calls:
  8450 ;;		_eusart_read
  8451 ;; This function is called by:
  8452 ;;		Interrupt level 2
  8453 ;; This function uses a non-reentrant model
  8454 ;;
  8455                           
  8456                           	psect	intcode
  8457   000008                     __pintcode:
  8458                           	callstack 0
  8459   000008                     _receive_DATA:
  8460                           	callstack 20
  8461                           
  8462                           ;incstack = 0
  8463   000008  827B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8464   00000A  ED4A  F018         	call	int_func,f	;refresh shadow registers
  8465                           
  8466                           	psect	intcode_body
  8467   003094                     __pintcode_body:
  8468                           	callstack 20
  8469   003094                     int_func:
  8470                           	callstack 20
  8471   003094  0006               	pop		; remove dummy address from shadow register refresh
  8472   003096  CFD9 F002          	movff	fsr2l,??_receive_DATA+1
  8473   00309A  CFDA F003          	movff	fsr2h,??_receive_DATA+2
  8474   00309E                     
  8475                           ;Program_main.c: 131:     if(PIR1bits.RCIF == 1)
  8476   00309E  AA9E               	btfss	158,5,c	;volatile
  8477   0030A0  EF54  F018         	goto	i2u451_41
  8478   0030A4  EF56  F018         	goto	i2u451_40
  8479   0030A8                     i2u451_41:
  8480   0030A8  EFA0  F018         	goto	i2l3957
  8481   0030AC                     i2u451_40:
  8482   0030AC                     
  8483                           ;Program_main.c: 132:     {;Program_main.c: 133:         BufferSERIALRX[i] = eusart_read
      +                          ();
  8484   0030AC  0E80               	movlw	low _BufferSERIALRX
  8485   0030AE  247A               	addwf	_i^0,w,c
  8486   0030B0  6ED9               	movwf	fsr2l,c
  8487   0030B2  6ADA               	clrf	fsr2h,c
  8488   0030B4  0E00               	movlw	high _BufferSERIALRX
  8489   0030B6  22DA               	addwfc	fsr2h,f,c
  8490   0030B8  ECAC  F01B         	call	_eusart_read	;wreg free
  8491   0030BC  6EDF               	movwf	indf2,c
  8492   0030BE                     
  8493                           ;Program_main.c: 134:         if(BufferSERIALRX[i] == 0X0D)
  8494   0030BE  0E80               	movlw	low _BufferSERIALRX
  8495   0030C0  247A               	addwf	_i^0,w,c
  8496   0030C2  6ED9               	movwf	fsr2l,c
  8497   0030C4  6ADA               	clrf	fsr2h,c
  8498   0030C6  0E00               	movlw	high _BufferSERIALRX
  8499   0030C8  22DA               	addwfc	fsr2h,f,c
  8500   0030CA  0E0D               	movlw	13
  8501   0030CC  18DE               	xorwf	postinc2,w,c
  8502   0030CE  A4D8               	btfss	status,2,c
  8503   0030D0  EF6C  F018         	goto	i2u452_41
  8504   0030D4  EF6E  F018         	goto	i2u452_40
  8505   0030D8                     i2u452_41:
  8506   0030D8  EF9F  F018         	goto	i2l3955
  8507   0030DC                     i2u452_40:
  8508   0030DC                     
  8509                           ;Program_main.c: 135:         {;Program_main.c: 136:             if(BufferSERIALRX[0] ==
      +                           '1') PORTDbits.RD0 = 1;
  8510   0030DC  0E31               	movlw	49
  8511   0030DE  0100               	movlb	0	; () banked
  8512   0030E0  1980               	xorwf	_BufferSERIALRX& (0+255),w,b
  8513   0030E2  A4D8               	btfss	status,2,c
  8514   0030E4  EF76  F018         	goto	i2u453_41
  8515   0030E8  EF78  F018         	goto	i2u453_40
  8516   0030EC                     i2u453_41:
  8517   0030EC  EF7B  F018         	goto	i2l3941
  8518   0030F0                     i2u453_40:
  8519   0030F0                     
  8520                           ; BSR set to: 0
  8521   0030F0  8083               	bsf	131,0,c	;volatile
  8522   0030F2  EF85  F018         	goto	i2l3945
  8523   0030F6                     i2l3941:
  8524                           
  8525                           ; BSR set to: 0
  8526   0030F6  0E30               	movlw	48
  8527   0030F8  1980               	xorwf	_BufferSERIALRX& (0+255),w,b
  8528   0030FA  A4D8               	btfss	status,2,c
  8529   0030FC  EF82  F018         	goto	i2u454_41
  8530   003100  EF84  F018         	goto	i2u454_40
  8531   003104                     i2u454_41:
  8532   003104  EF85  F018         	goto	i2l3945
  8533   003108                     i2u454_40:
  8534   003108                     
  8535                           ; BSR set to: 0
  8536   003108  9083               	bcf	131,0,c	;volatile
  8537   00310A                     i2l3945:
  8538                           
  8539                           ; BSR set to: 0
  8540                           ;Program_main.c: 139:             if(BufferSERIALRX[1] == '1')PORTDbits.RD1 = 1;
  8541   00310A  0E31               	movlw	49
  8542   00310C  1981               	xorwf	(_BufferSERIALRX+1)& (0+255),w,b
  8543   00310E  A4D8               	btfss	status,2,c
  8544   003110  EF8C  F018         	goto	i2u455_41
  8545   003114  EF8E  F018         	goto	i2u455_40
  8546   003118                     i2u455_41:
  8547   003118  EF91  F018         	goto	i2l3949
  8548   00311C                     i2u455_40:
  8549   00311C                     
  8550                           ; BSR set to: 0
  8551   00311C  8283               	bsf	131,1,c	;volatile
  8552   00311E  EF9B  F018         	goto	i2l3953
  8553   003122                     i2l3949:
  8554                           
  8555                           ; BSR set to: 0
  8556   003122  0E30               	movlw	48
  8557   003124  1981               	xorwf	(_BufferSERIALRX+1)& (0+255),w,b
  8558   003126  A4D8               	btfss	status,2,c
  8559   003128  EF98  F018         	goto	i2u456_41
  8560   00312C  EF9A  F018         	goto	i2u456_40
  8561   003130                     i2u456_41:
  8562   003130  EF9B  F018         	goto	i2l3953
  8563   003134                     i2u456_40:
  8564   003134                     
  8565                           ; BSR set to: 0
  8566   003134  9283               	bcf	131,1,c	;volatile
  8567   003136                     i2l3953:
  8568                           
  8569                           ; BSR set to: 0
  8570                           ;Program_main.c: 142:             i=0;
  8571   003136  0E00               	movlw	0
  8572   003138  6E7A               	movwf	_i^0,c
  8573                           
  8574                           ;Program_main.c: 143:         }
  8575   00313A  EFA0  F018         	goto	i2l3957
  8576   00313E                     i2l3955:
  8577   00313E  2A7A               	incf	_i^0,f,c
  8578   003140                     i2l3957:
  8579                           
  8580                           ;Program_main.c: 146:     PIR1bits.RCIF = 0;
  8581   003140  9A9E               	bcf	158,5,c	;volatile
  8582   003142  C003  FFDA         	movff	??_receive_DATA+2,fsr2h
  8583   003146  C002  FFD9         	movff	??_receive_DATA+1,fsr2l
  8584   00314A  927B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8585   00314C  0011               	retfie		f
  8586   00314E                     __end_of_receive_DATA:
  8587                           	callstack 0
  8588                           
  8589 ;; *************** function _eusart_read *****************
  8590 ;; Defined at:
  8591 ;;		line 33 in file "eusart.c"
  8592 ;; Parameters:    Size  Location     Type
  8593 ;;		None
  8594 ;; Auto vars:     Size  Location     Type
  8595 ;;		None
  8596 ;; Return value:  Size  Location     Type
  8597 ;;                  1    wreg      unsigned char 
  8598 ;; Registers used:
  8599 ;;		wreg, status,2
  8600 ;; Tracked objects:
  8601 ;;		On entry : 0/0
  8602 ;;		On exit  : 0/0
  8603 ;;		Unchanged: 0/0
  8604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8605 ;;      Params:         0       0       0       0       0       0       0
  8606 ;;      Locals:         0       0       0       0       0       0       0
  8607 ;;      Temps:          0       0       0       0       0       0       0
  8608 ;;      Totals:         0       0       0       0       0       0       0
  8609 ;;Total ram usage:        0 bytes
  8610 ;; Hardware stack levels used: 1
  8611 ;; This function calls:
  8612 ;;		Nothing
  8613 ;; This function is called by:
  8614 ;;		_receive_DATA
  8615 ;; This function uses a non-reentrant model
  8616 ;;
  8617                           
  8618                           	psect	text41
  8619   003758                     __ptext41:
  8620                           	callstack 0
  8621   003758                     _eusart_read:
  8622                           	callstack 20
  8623   003758                     i2l34:
  8624   003758  AA9E               	btfss	3998,5,c	;volatile
  8625   00375A  EFB1  F01B         	goto	i2u449_41
  8626   00375E  EFB3  F01B         	goto	i2u449_40
  8627   003762                     i2u449_41:
  8628   003762  EFAC  F01B         	goto	i2l34
  8629   003766                     i2u449_40:
  8630   003766                     
  8631                           ;eusart.c: 36:     return RCREG;
  8632   003766  50AE               	movf	174,w,c	;volatile
  8633   003768  0012               	return		;funcret
  8634   00376A                     __end_of_eusart_read:
  8635                           	callstack 0
  8636                           
  8637                           	psect	rparam
  8638   000000                     
  8639                           	psect	temp
  8640   00007B                     btemp:
  8641                           	callstack 0
  8642   00007B                     	ds	1
  8643   000000                     int$flags	set	btemp
  8644   000000                     wtemp8	set	btemp+1
  8645   000000                     ttemp5	set	btemp+1
  8646   000000                     ttemp6	set	btemp+4
  8647   000000                     ttemp7	set	btemp+8
  8648                           
  8649                           	psect	idloc
  8650                           
  8651                           ;Config register IDLOC0 @ 0x200000
  8652                           ;	unspecified, using default values
  8653   200000                     	org	2097152
  8654   200000  FF                 	db	255
  8655                           
  8656                           ;Config register IDLOC1 @ 0x200001
  8657                           ;	unspecified, using default values
  8658   200001                     	org	2097153
  8659   200001  FF                 	db	255
  8660                           
  8661                           ;Config register IDLOC2 @ 0x200002
  8662                           ;	unspecified, using default values
  8663   200002                     	org	2097154
  8664   200002  FF                 	db	255
  8665                           
  8666                           ;Config register IDLOC3 @ 0x200003
  8667                           ;	unspecified, using default values
  8668   200003                     	org	2097155
  8669   200003  FF                 	db	255
  8670                           
  8671                           ;Config register IDLOC4 @ 0x200004
  8672                           ;	unspecified, using default values
  8673   200004                     	org	2097156
  8674   200004  FF                 	db	255
  8675                           
  8676                           ;Config register IDLOC5 @ 0x200005
  8677                           ;	unspecified, using default values
  8678   200005                     	org	2097157
  8679   200005  FF                 	db	255
  8680                           
  8681                           ;Config register IDLOC6 @ 0x200006
  8682                           ;	unspecified, using default values
  8683   200006                     	org	2097158
  8684   200006  FF                 	db	255
  8685                           
  8686                           ;Config register IDLOC7 @ 0x200007
  8687                           ;	unspecified, using default values
  8688   200007                     	org	2097159
  8689   200007  FF                 	db	255
  8690                           
  8691                           	psect	config
  8692                           
  8693                           ; Padding undefined space
  8694   300000                     	org	3145728
  8695   300000  FF                 	db	255
  8696                           
  8697                           ;Config register CONFIG1H @ 0x300001
  8698                           ;	Oscillator Selection bits
  8699                           ;	OSC = HS, HS oscillator
  8700                           ;	Fail-Safe Clock Monitor Enable bit
  8701                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8702                           ;	Internal/External Oscillator Switchover bit
  8703                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8704   300001                     	org	3145729
  8705   300001  02                 	db	2
  8706                           
  8707                           ;Config register CONFIG2L @ 0x300002
  8708                           ;	Power-up Timer Enable bit
  8709                           ;	PWRT = OFF, PWRT disabled
  8710                           ;	Brown-out Reset Enable bits
  8711                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  8712                           ;	Brown Out Reset Voltage bits
  8713                           ;	BORV = 3, Minimum setting
  8714   300002                     	org	3145730
  8715   300002  1F                 	db	31
  8716                           
  8717                           ;Config register CONFIG2H @ 0x300003
  8718                           ;	Watchdog Timer Enable bit
  8719                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8720                           ;	Watchdog Timer Postscale Select bits
  8721                           ;	WDTPS = 32768, 1:32768
  8722   300003                     	org	3145731
  8723   300003  1E                 	db	30
  8724                           
  8725                           ; Padding undefined space
  8726   300004                     	org	3145732
  8727   300004  FF                 	db	255
  8728                           
  8729                           ;Config register CONFIG3H @ 0x300005
  8730                           ;	CCP2 MUX bit
  8731                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  8732                           ;	PORTB A/D Enable bit
  8733                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  8734                           ;	Low-Power Timer1 Oscillator Enable bit
  8735                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  8736                           ;	MCLR Pin Enable bit
  8737                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  8738   300005                     	org	3145733
  8739   300005  81                 	db	129
  8740                           
  8741                           ;Config register CONFIG4L @ 0x300006
  8742                           ;	Stack Full/Underflow Reset Enable bit
  8743                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8744                           ;	Single-Supply ICSP Enable bit
  8745                           ;	LVP = OFF, Single-Supply ICSP disabled
  8746                           ;	Extended Instruction Set Enable bit
  8747                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8748                           ;	Background Debugger Enable bit
  8749                           ;	DEBUG = 0x1, unprogrammed default
  8750   300006                     	org	3145734
  8751   300006  81                 	db	129
  8752                           
  8753                           ; Padding undefined space
  8754   300007                     	org	3145735
  8755   300007  FF                 	db	255
  8756                           
  8757                           ;Config register CONFIG5L @ 0x300008
  8758                           ;	Code Protection bit
  8759                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  8760                           ;	Code Protection bit
  8761                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  8762                           ;	Code Protection bit
  8763                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  8764                           ;	Code Protection bit
  8765                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  8766   300008                     	org	3145736
  8767   300008  0F                 	db	15
  8768                           
  8769                           ;Config register CONFIG5H @ 0x300009
  8770                           ;	Boot Block Code Protection bit
  8771                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  8772                           ;	Data EEPROM Code Protection bit
  8773                           ;	CPD = OFF, Data EEPROM not code-protected
  8774   300009                     	org	3145737
  8775   300009  C0                 	db	192
  8776                           
  8777                           ;Config register CONFIG6L @ 0x30000A
  8778                           ;	Write Protection bit
  8779                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  8780                           ;	Write Protection bit
  8781                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  8782                           ;	Write Protection bit
  8783                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  8784                           ;	Write Protection bit
  8785                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  8786   30000A                     	org	3145738
  8787   30000A  0F                 	db	15
  8788                           
  8789                           ;Config register CONFIG6H @ 0x30000B
  8790                           ;	Configuration Register Write Protection bit
  8791                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  8792                           ;	Boot Block Write Protection bit
  8793                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  8794                           ;	Data EEPROM Write Protection bit
  8795                           ;	WRTD = OFF, Data EEPROM not write-protected
  8796   30000B                     	org	3145739
  8797   30000B  E0                 	db	224
  8798                           
  8799                           ;Config register CONFIG7L @ 0x30000C
  8800                           ;	Table Read Protection bit
  8801                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  8802                           ;	Table Read Protection bit
  8803                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  8804                           ;	Table Read Protection bit
  8805                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  8806                           ;	Table Read Protection bit
  8807                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  8808   30000C                     	org	3145740
  8809   30000C  0F                 	db	15
  8810                           
  8811                           ;Config register CONFIG7H @ 0x30000D
  8812                           ;	Boot Block Table Read Protection bit
  8813                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  8814   30000D                     	org	3145741
  8815   30000D  40                 	db	64
  8816                           tosu	equ	0xFFF
  8817                           tosh	equ	0xFFE
  8818                           tosl	equ	0xFFD
  8819                           stkptr	equ	0xFFC
  8820                           pclatu	equ	0xFFB
  8821                           pclath	equ	0xFFA
  8822                           pcl	equ	0xFF9
  8823                           tblptru	equ	0xFF8
  8824                           tblptrh	equ	0xFF7
  8825                           tblptrl	equ	0xFF6
  8826                           tablat	equ	0xFF5
  8827                           prodh	equ	0xFF4
  8828                           prodl	equ	0xFF3
  8829                           indf0	equ	0xFEF
  8830                           postinc0	equ	0xFEE
  8831                           postdec0	equ	0xFED
  8832                           preinc0	equ	0xFEC
  8833                           plusw0	equ	0xFEB
  8834                           fsr0h	equ	0xFEA
  8835                           fsr0l	equ	0xFE9
  8836                           wreg	equ	0xFE8
  8837                           indf1	equ	0xFE7
  8838                           postinc1	equ	0xFE6
  8839                           postdec1	equ	0xFE5
  8840                           preinc1	equ	0xFE4
  8841                           plusw1	equ	0xFE3
  8842                           fsr1h	equ	0xFE2
  8843                           fsr1l	equ	0xFE1
  8844                           bsr	equ	0xFE0
  8845                           indf2	equ	0xFDF
  8846                           postinc2	equ	0xFDE
  8847                           postdec2	equ	0xFDD
  8848                           preinc2	equ	0xFDC
  8849                           plusw2	equ	0xFDB
  8850                           fsr2h	equ	0xFDA
  8851                           fsr2l	equ	0xFD9
  8852                           status	equ	0xFD8

Data Sizes:
    Strings     27
    Constant    0
    Data        0
    BSS         140
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    118     122
    BANK0           128     44     100
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_2(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_2(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_1(CODE[19]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_1(CODE[19]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 19
		 -> STR_1(CODE[19]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 19
		 -> STR_1(CODE[19]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S968$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_1(CODE[19]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 32
		 -> BufferSERIAL(BANK0[32]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S884$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S884$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    eusart_string@str	PTR unsigned char  size(2) Largest target is 32
		 -> BufferSERIAL(BANK0[32]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->___wmul
    _eusart_string->_eusart_write
    _conv_AN0->___flmul
    ___flmul->___xxtofl

Critical Paths under _receive_DATA in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_transmiter_DATA
    _transmiter_DATA->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _receive_DATA in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _receive_DATA in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _receive_DATA in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _receive_DATA in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _receive_DATA in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _receive_DATA in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   41538
                         _config_ADC
                        _config_FOSC
                          _config_IO
                   _config_Interrupt
                           _conv_AN0
                        _eusart_init
                    _transmiter_DATA
 ---------------------------------------------------------------------------------
 (1) _transmiter_DATA                                      2     2      0   37547
                                             42 BANK0      2     2      0
                      _eusart_string
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             25    15     10   37404
                                             19 BANK0     23    13     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   36894
                                            116 COMRAM     2     2      0
                                             13 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           24    18      6   36358
                                            107 COMRAM     9     3      6
                                              0 BANK0     13    13      0
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              54    47      7   25932
                                             54 COMRAM    53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               8     4      4     497
                                              3 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     478
                                              3 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _labs                                                 8     4      4     363
                                              3 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             28 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              3 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     607
                                              3 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    4007
                                             42 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    3442
                                              3 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     155
                                              3 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     986
                                             42 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              3 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2723
                                              3 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                35    25     10    5885
                                             30 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3585
                                             19 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1357
                                             12 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     857
                                              3 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             21 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              3 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              3 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                 9     7      2    1584
                                              9 COMRAM     9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              5     3      2     259
                                              3 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              4     2      2     371
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     412
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _eusart_string                                        2     0      2     143
                                              4 COMRAM     2     0      2
                       _eusart_write
 ---------------------------------------------------------------------------------
 (3) _eusart_write                                         1     1      0      22
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _eusart_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _conv_AN0                                             2     2      0    3991
                                             42 COMRAM     2     2      0
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              3 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    3593
                                             17 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _config_Interrupt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_IO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_FOSC                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_ADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _receive_DATA                                        3     3      0       0
                                              0 COMRAM     3     3      0
                        _eusart_read
 ---------------------------------------------------------------------------------
 (11) _eusart_read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config_ADC
   _config_FOSC
   _config_IO
   _config_Interrupt
   _conv_AN0
     ___flmul
       ___xxtofl (ARG)
     ___xxtofl
   _eusart_init
   _transmiter_DATA
     _eusart_string
       _eusart_write
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _efgtoa
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _labs
             _memcpy
             _pad
             _strcpy
           _fputc
           _isdigit

 _receive_DATA (ROOT)
   _eusart_read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      27        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            80      0       0       4        0.0%
BANK0               80     2C      64       5       78.1%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     76      7A       1       96.8%
BITBIGSFRhhhhl      1E      0       0      17        0.0%
BITBIGSFRlllh       11      0       0      24        0.0%
BITBIGSFRhhhlh       E      0       0      18        0.0%
BITBIGSFRhhhhh       D      0       0      16        0.0%
BITBIGSFRlh          C      0       0      21        0.0%
BITBIGSFRhlh         8      0       0      20        0.0%
BITBIGSFRhhl         7      0       0      19        0.0%
BITBIGSFRllhl        5      0       0      23        0.0%
BITBIGSFRllll        3      0       0      25        0.0%
BITBIGSFRllhh        1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12E      26        0.0%
DATA                 0      0     12E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Sep 05 14:13:20 2023

            ___fldiv@aexp 001C              ___fldiv@bexp 001B                         _i 007A  
            ___fldiv@sign 0014                        l22 3732                        l31 368A  
                      l25 3744                        l19 3756                        l91 3776  
                      l94 3794                        l88 378A                        l97 32BC  
                      l99 32CA       ___wmul@multiplicand 0006                       l100 3324  
                     l103 33E0                       l106 3780                       l131 370A  
                     l401 2ECA                       l245 2A12                       l405 365A  
                     l258 2B76                       l428 2DC6                       l701 3518  
                     l390 31F6                       l800 2822                       l713 2210  
                     l715 2070                       l724 20B6                       l396 2E84  
                     l660 176A                       l661 1730                       l726 212E  
                     l718 2034                       l727 211C                       l752 1D08  
                     l745 1B12                       l809 3432                       l762 1E38  
                     l754 1D80                       l755 1D6E                       l851 32A0  
                     l659 177C                       l860 22FA                       l676 1896  
                     l668 1A4C                       l749 1E76                       l685 1966  
                     l917 0DD4                       l846 323C                       l686 1954  
                     l793 27C6                       l849 327E                       l873 24C4  
                     l857 22AC                       l961 158C                       l786 272E  
                     l859 22B4                       l884 1056                       l789 288A  
                     l887 099C                       l983 3482                       l993 2FC8  
                     l889 07EA                       l998 361A                       _abs 35E4  
                     _pad 31F8                       wreg 000FE8              ___flmul@aexp 001F  
            ___flmul@bexp 0024             eusart_write@c 0004              ___flmul@sign 001E  
            ___flmul@temp 0029              ___flmul@prod 0025              ___fltol@exp1 000D  
                    l1001 3622                      l1023 2CB8                      l1032 26D6  
                    l1042 36E4                      l1050 355E                      l1026 2CC0  
                    l1035 261A                      ?_abs 0016                      l1060 338A  
                    l1057 337A                      l1066 34D2                      l1078 3092  
                    l1086 35A2                      l1095 35E2                      l1089 3796  
                    l2413 3746                      l2423 3782                      l2415 3752  
                    l2425 376A                      l4201 166E                      l5001 0678  
                    l2427 378C                      l2443 3778                      l4211 169A  
                    l4203 1680                      l5003 0688                      l5011 06B0  
                    l4301 18D0                      l4221 16AE                      l4213 169E  
                    l4205 168E                      l5101 0A50                      l5021 06F8  
                    l5013 06D6                      l5005 0698                      l4151 2FF8  
                    l4311 1900                      l4303 18DA                      l4231 16C2  
                    l4223 16B2                      l4215 16A2                      l4207 1692  
                    l5111 0B62                      l5103 0AB4                      l5031 075E  
                    l5023 0710                      l5015 06E6                      l5007 06A4  
                    l4401 295A                      l4153 3016                      l4145 2FCA  
                    l4321 1928                      l4313 1904                      l4305 18E8  
                    l4241 16FC                      l4233 16C6                      l4225 16B6  
                    l4217 16A6                      l4209 1696                      l4161 159A  
                    l5121 0C1C                      l5113 0B96                      l5105 0B0C  
                    l5033 076E                      l5025 0718                      l5017 06EA  
                    l5009 06AC                      l4403 2988                      l4411 29C2  
                    l4155 304C                      l4147 2FDC                      l4331 1982  
                    l4323 1936                      l4315 1914                      l4307 18EA  
                    l4251 174E                      l4243 1718                      l4235 16CA  
                    l4227 16BA                      l4219 16AA                      l4171 15DA  
                    l4163 15A8                      l5203 0FB0                      l5211 1008  
                    l5131 0CEE                      l5123 0C2C                      l5115 0BC8  
                    l5107 0B40                      l5035 0772                      l5019 06F0  
                    l5221 2B78                      l4413 29D2                      l4405 29A8  
                    l4421 2A18                      l4149 2FEE                      l4501 1F76  
                    l4341 19EC                      l4333 1990                      l4325 194C  
                    l4309 18F8                      l4317 1916                      l4261 179A  
                    l4253 175C                      l4245 1728                      l4229 16BE  
                    l4237 16CE                      l4181 160C                      l4173 15DC  
                    l4165 15AA                      l5213 1018                      l5205 0FC6  
                    l5141 0D20                      l5133 0D00                      l5125 0C60  
                    l5117 0BDC                      l5109 0B44                      l5061 08A0  
                    l5053 07FA                      l5037 0778                      l5029 0738  
                    l5301 1282                      l5231 2BE0                      l5223 2B8C  
                    l4415 29F2                      l4407 29AA                      l4431 2A78  
                    l4423 2A26                      l4351 1A26                      l4343 1A0C  
                    l4335 19CA                      l4271 17DA                      l4319 1924  
                    l4255 175E                      l4247 173E                      l4239 16D2  
                    l4191 1634                      l4183 160E                      l4167 15BA  
                    l4175 15E4                      l4159 158E                      l5215 102E  
                    l5207 0FCC                      l5151 0DE4                      l5143 0D28  
                    l5127 0CB6                      l5135 0D04                      l5119 0C0E  
                    l5063 08DC                      l5055 07FE                      l5039 0780  
                    l5047 079C                      l5311 12F8                      l5303 12A2  
                    l4601 1A7A                      l5233 2BE8                      l4409 29BC  
                    l4441 2AEE                      l4433 2A96                      l4425 2A46  
                    l4361 3560                      l4521 1FF8                      l4513 1FAE  
                    l4505 1F8A                      l4353 1A2C                      l4345 1A10  
                    l4329 1976                      l4337 19CC                      l4281 1804  
                    l4273 17E6                      l4265 17AE                      l4257 1768  
                    l4249 174A                      l4193 1644                      l4185 1614  
                    l4177 15F4                      l4169 15CA                      l5217 1036  
                    l5209 0FEA                      l5161 0E14                      l5153 0DF2  
                    l5145 0D34                      l5137 0D14                      l5129 0CBA  
                    l5081 09C6                      l5065 08F0                      l5073 096A  
                    l5057 0832                      l5049 07B4                      l5321 13B8  
                    l5313 1314                      l5401 345C                      l4611 1AB6  
                    l4603 1A8A                      l4371 3702                      l5243 2C5A  
                    l5235 2BF0                      l5227 2B90                      l4451 2B56  
                    l4443 2B0E                      l4435 2A9E                      l4427 2A4A  
                    l4419 2A14                      l4363 356C                      l4531 203E  
                    l4523 2000                      l4515 1FC8                      l4507 1F9A  
                    l4355 1A3A                      l4347 1A1E                      l4339 19DC  
                    l4291 1876                      l4275 17EA                      l4267 17BE  
                    l4259 178A                      l4283 180A                      l4195 1654  
                    l4187 1622                      l4179 15FA                      l5171 0E46  
                    l5163 0E24                      l5155 0E02                      l5147 0DAC  
                    l5139 0D1C                      l5091 0A0A                      l5083 09CE  
                    l5075 09A4                      l5067 0924                      l5059 086E  
                    l5323 13C8                      l5315 1330                      l5307 12B0  
                    l5403 3478                      l5411 33FC                      l4701 1DD8  
                    l4621 1AEC                      l4613 1ABC                      l4605 1A9A  
                    l3901 285A                      l5421 32BA                      l5245 2C8A  
                    l5237 2C24                      l5229 2BAC                      l4381 28BE  
                    l4445 2B20                      l4437 2AB2                      l4429 2A58  
                    l4365 357E                      l4541 2096                      l4533 205C  
                    l4525 2010                      l4517 1FD8                      l4509 1F9A  
                    l4461 1E94                      l4357 1A3C                      l4349 1A24  
                    l4285 1830                      l4293 1886                      l4277 17F8  
                    l4269 17CC                      l4197 1656                      l4189 1624  
                    l5181 0EEE                      l5173 0E58                      l5165 0E28  
                    l5157 0E06                      l5149 0DCC                      l5093 0A1C  
                    l5085 09D2                      l5077 09B2                      l5069 092A  
                    l5325 13DA                      l5333 13F2                      l5317 1388  
                    l5309 12E8                      l5261 109C                      l5253 1058  
                    l5413 3404                      ?_pad 0014                      l4711 1E4C  
                    l4703 1DF2                      l4623 1AFC                      l4615 1ACA  
                    l4607 1AA0                      l3903 286A                      l5423 32D2  
                    l3831 3732                      l5247 2C9C                      l4391 2900  
                    l4383 28C2                      l4375 288C                      l4439 2AC0  
                    l4447 2B26                      l4367 3582                      l4551 20D4  
                    l4543 209C                      l4535 205E                      l4527 2024  
                    l4519 1FE8                      l4463 1EA4                      l4471 1ECE  
                    l4455 1E78                      l4295 18AC                      l4287 1864  
                    l4279 17FA                      l4199 165E                      l5191 0F3A  
                    l5183 0EF4                      l5175 0E5C                      l5167 0E2E  
                    l5159 0E0C                      l5087 09E4                      l5095 0A24  
                    l5079 09BE                      l5343 14AE                      l5327 13E2  
                    l5335 1426                      l5271 10C8                      l5263 10A8  
                    l5255 107C                      l5415 3420                      l5407 33E2  
                    l5431 33C6                      l4713 1E5A                      l4705 1E06  
                    l4641 1B7E                      l4633 1B46                      l4625 1B02  
                    l4617 1ACC                      l4609 1AB0                      l3905 2878  
                    l5425 32DE                      l3833 3740                      l4369 36E6  
                    l4393 291E                      l4385 28D0                      l4377 2890  
                    l4449 2B36                      l4561 213E                      l4553 20D8  
                    l4545 20A6                      l4537 206E                      l4529 2032  
                    l4481 1EFA                      l4473 1EDE                      l4465 1EB4  
                    l4457 1E84                      l4297 18BC                      l4289 1866  
                    l4801 2D66                      l5193 0F4A                      l5177 0E62  
                    l5169 0E34                      l5185 0EF8                      l5097 0A2C  
                    l5089 09F2                      l5353 1526                      l5345 14D8  
                    l5337 1446                      l5329 13EA                      l5281 1176  
                    l5265 10AA                      l5273 10FC                      l5257 108A  
                    l5409 33F4                      l5433 370C                      l4715 1E5C  
                    l4707 1E20                      l4651 1BC8                      l4643 1B96  
                    l4635 1B52                      l4627 1B22                      l4619 1ADC  
                    l3907 287A                      l5419 32A2                      l3851 3672  
                    l4395 2926                      l4387 28F0                      l4379 289E  
                    l4571 21A0                      l4563 214A                      l4555 20E6  
                    l4547 20B4                      l4539 2080                      l4483 1F0A  
                    l4491 1F34                      l4475 1EE4                      l4467 1EC4  
                    l4459 1E92                      l4731 317C                      l4723 34D4  
                    l4811 2D96                      l5195 0F7A                      l5187 0F16  
                    l5179 0EBA                      l5099 0A3C                      l5347 14F8  
                    l5339 147A                      l5355 1552                      l5291 11EA  
                    l5283 1184                      l5275 110E                      l5267 10BC  
                    l5259 1098                      l5427 338C                      l5435 3720  
                    l4709 1E3C                      l4717 1E62                      l4661 1C1E  
                    l4653 1BD8                      l4645 1BA2                      l4637 1B5C  
                    l4629 1B32                      l3845 365C                      l4397 293A  
                    l4389 28F4                      l4821 3206                      l4581 21FE  
                    l4573 21B6                      l4565 2158                      l4557 2114  
                    l4549 20C6                      l4493 1F44                      l4485 1F1A  
                    l4477 1EEA                      l4469 1EC6                      l4741 31F4  
                    l4733 318C                      l4725 34E4                      l4813 2DA6  
                    l4901 3498                      l5197 0F86                      l5189 0F32  
                    l5621 1408                      l5293 120E                      l5285 11A4  
                    l5277 1132                      l5429 33BA                      l5437 3724  
                    l4719 1E66                      l4671 1CC2                      l4663 1C3A  
                    l4655 1BE4                      l4647 1BAE                      l4639 1B72  
                    l3871 273E                      l3847 3660                      l4911 36BA  
                    l4399 2948                      l4831 325C                      l4823 321A  
                    l4583 2204                      l4575 21D0                      l4567 2182  
                    l4495 1F5A                      l4487 1F2A                      l4479 1EF8  
                    l4735 31BA                      l4751 2E34                      l4815 2DB6  
                    l4807 2D7A                      l4903 34A4                      l5199 0F9E  
                    l5623 14C2                      l5295 1216                      l5279 1168  
                    l5359 1564                      l4681 1D18                      l4673 1CD0  
                    l4665 1C46                      l4657 1BF4                      l4649 1BBC  
                    l4593 1A4E                      l3881 277C                      l3873 2754  
                    l3865 26DA                      l3849 366E                      l4921 3554  
                    l4833 3260                      l4825 3228                      l4585 2206  
                    l4577 21EC                      l4569 2186                      l4497 1F6A  
                    l4489 1F2C                      l4737 31CA                      l4729 314E  
                    l4761 2EC2                      l4753 2E44                      l4745 2DC8  
                    l4809 2D86                      l4841 2ECC                      l4905 34A8  
                    l5625 1544                      l5297 1224                      l5289 11B2  
                    l4683 1D26                      l4675 1CEE                      l4667 1C62  
                    l4659 1C0E                      l4595 1A5A                      l3891 2804  
                    l3883 27AE                      l3867 26EA                      l4923 3558  
                    l4915 351A                      l5627 2C0E                      l4835 328C  
                    l4827 3234                      l4819 31F8                      l4931 2246  
                    l4579 21F0                      l4499 1F72                      l4739 31EE  
                    l4763 2EC8                      l4755 2E52                      l4747 2DF6  
                    l4771 364A                      l4843 2EEC                      l4907 34B4  
                    l5299 1248                      l5619 10EE                      l4693 1D90  
                    l4685 1D2A                      l4677 1CF8                      l4669 1C8C  
                    l4597 1A68                      l3893 2812                      l3885 27B0  
                    l3877 2768                      l3869 26F8                      l4917 351E  
                    l4837 35E4                      l4829 3248                      l4941 22A0  
                    l4933 2256                      l4757 2E64                      l4749 2E06  
                    l4781 2CEC                      l4845 2F2A                      l4853 2F6A  
                    l4909 34B8                      l5397 3434                      l4695 1D9C  
                    l4687 1D38                      l4679 1D06                      l4599 1A6A  
                    l3895 2830                      l3887 27BC                      l3879 2770  
                    l4919 3532                      l4839 35FE                      l4951 22EE  
                    l4943 22BC                      l4935 2276                      l4927 2212  
                    l4759 2E72                      l4767 3624                      l4791 2D3A  
                    l4783 2D16                      l4775 2CC2                      l4855 2F7C  
                    l4847 2F52                      l4871 24C6                      l4863 35A4  
                    l5399 3440                      l4697 1DAA                      l4689 1D66  
                    l3897 2832                      l3889 27F8                      l4961 2394  
                    l4953 22F6                      l4945 22CC                      l4937 2284  
                    l4929 2232                      l4769 363A                      l4785 2D18  
                    l4777 2CD8                      l4849 2F5E                      l4873 24E6  
                    l4865 35B4                      l4699 1DD4                      l3899 2836  
                    l4971 243C                      l4963 239A                      l4955 2302  
                    l4947 22D2                      l4939 2286                      l4787 2D28  
                    l4859 2FC0                      l4891 268E                      l4883 25CE  
                    l4875 253C                      l4867 3326                      l4981 2494  
                    l4973 2456                      l4965 23A0                      l4957 230C  
                    l4949 22E2                      l4797 2D52                      l4789 2D2C  
                    l4893 26B6                      l4885 260A                      l4877 2550  
                    l4869 3344                      l4983 24A4                      l4975 2470  
                    l4959 2312                      l4967 2404                      l4799 2D5C  
                    l4895 26C6                      l4879 255E                      l4887 263E  
                    l4991 0632                      l4969 241E                      l4977 247E  
                    l4889 267A                      l4993 0640                      l4979 248E  
                    l4899 3484                      l4995 0644                      l4987 061E  
                    l4997 0668                      l4989 0622                      l4999 0670  
                    STR_1 0601                      STR_2 0614                      STR_5 0618  
                    u5000 35A2                      u5001 359E                      u5010 289E  
                    u5011 289A                      u5020 28D0                      u5100 2A96  
                    u5021 28CC                      u5101 2A92                      u5110 2AC0  
                    u5031 28FA                      u5111 2ABC                      _PIE1 000F9D  
                    u4400 26F8                      u6000 3554                      u5040 291E  
                    u5120 2AEE                      u5200 1F5A                      u4401 26F4  
                    u6001 3550                      u5041 291A                      u5121 2AEA  
                    u5201 1F56                      u4410 2754                      u5050 2948  
                    u5130 2B36                      u6010 2242                      u5210 1F9A  
                    u4411 2750                      u5051 2944                      u5131 2B32  
                    u6011 223C                      u5211 1F96                      u4420 27AA  
                    u5060 2988                      u6100 2456                      u6020 2244  
                    u5300 2114                      u5220 2010                      u5140 1E92  
                    u4421 27A6                      u5061 2984                      u6101 2452  
                    u5301 2110                      u5221 200C                      u5141 1E8E  
                    u4430 27F4                      u5070 29D2                      u6110 2470  
                    u6030 2256                      u5310 212A                      u5230 2032  
                    u5150 1EA4                      u4431 27F0                      u5071 29CE  
                    u6111 246C                      u6031 2252                      u5311 2126  
                    u5231 202E                      u5151 1EA0                      u5400 1ACA  
                    u4440 2812                      u4360 3740                      u5080 2A26  
                    u4600 304C                      u6120 247E                      u6040 2284  
                    u5320 213E                      u5240 205C                      u5160 1EB4  
                    u6200 076E                      u5401 1AC6                      u4441 280E  
                    u4361 373C                      u5081 2A22                      u4601 3048  
                    u6121 247A                      u6041 2280                      u5321 213A  
                    u5241 2058                      u5161 1EB0                      u6201 076A  
                    u5410 1ADC                      u4450 2822                      u5090 2A58  
                    u6130 248E                      u6050 22A0                      u5330 2158  
                    u5250 2080                      u5170 1EF8                      u4610 15A8  
                    u6210 07E6                      u5411 1AD8                      u4451 281E  
                    u5091 2A54                      u6131 248A                      u6051 229C  
                    u5331 2154                      u5251 207C                      u5171 1EF4  
                    u4611 15A4                      u6211 07E2                      u5500 1D7C  
                    u5420 1AEC                      u4460 2830                      u4380 368A  
                    u6060 22CC                      u5340 21A0                      u5260 2096  
                    u5180 1F0A                      u4700 16FC                      u4620 15BA  
                    u6300 0A1C                      u6220 086E                      u6140 0640  
                    u5501 1D78                      u5421 1AE8                      u4461 282C  
                    u4381 3686                      u6061 22C8                      u5341 219C  
                    u5261 2092                      u5181 1F06                      u4701 16F8  
                    u4621 15B6                      u6301 0A18                      u6221 086A  
                    u6141 063C                      u5510 1D90                      u5430 1B22  
                    u4470 286A                      u4390 26EA                      u6070 22E2  
                    u5350 21D0                      u5270 20B4                      u5190 1F1A  
                    u4710 1714                      u4630 15CA                      u6310 0B62  
                    u6230 08A0                      u6150 0688                      u5511 1D8C  
                    u5431 1B1E                      u4471 2866                      u4391 26E6  
                    u6071 22DE                      u5351 21CC                      u5271 20B0  
                    u5191 1F16                      u4711 170E                      u4631 15C6  
                    u6311 0B5E                      u6231 089C                      u6151 0684  
                    u5520 1DAA                      u5440 1B32                      u4480 2878  
                    u6080 241E                      u5360 21FE                      u5280 20D4  
                    u5600 2E34                      u4800 17F8                      u4720 1716  
                    u4640 160C                      u6400 0E46                      u6320 0BC8  
                    u6240 08DC                      u6160 0698                      u5521 1DA6  
                    u5441 1B2E                      u4481 2874                      u6081 241A  
                    u5361 21FA                      u5281 20D0                      u5601 2E30  
                    u4801 17F4                      u4641 1608                      u6401 0E42  
                    u6321 0BC4                      u6241 08D8                      u6161 0694  
                    u5530 1DF2                      u5450 1CAC                      u5370 1A68  
                    u4570 2FDC                      u6090 243C                      u5290 20E6  
                    u5610 2E52                      u4810 1830                      u4730 173E  
                    u4650 1622                      u6410 0F16                      u6330 0C0E  
                    u6250 0966                      u6170 06D6                      u5531 1DEE  
                    u5371 1A64                      u4571 2FD8                      u6091 2438  
                    u5291 20E2                      u5611 2E4E                      u4811 182C  
                    u4731 173A                      u4651 161E                      u6411 0F12  
                    u6331 0C0A                      u6251 0962                      u6171 06D2  
                    u5540 1E20                      u5460 1D06                      u5380 1A7A  
                    u6500 2BDC                      u4580 2FEE                      u5620 2E72  
                    u4900 194C                      u4820 1876                      u4740 175C  
                    u4660 1634                      u5700 2D96                      u6420 0F32  
                    u6340 0C1C                      u6260 099C                      u6180 06E6  
                    _RCIF 007CF5                      u5541 1E1C                      u5461 1D02  
                    u5381 1A76                      u6501 2BD8                      u4581 2FEA  
                    u5621 2E6E                      u4901 1948                      u4821 1872  
                    u4741 1758                      u4661 1630                      u5701 2D92  
                    u6421 0F2E                      u6341 0C18                      u6261 0998  
                    u6181 06E2                      u5550 1E5A                      u5470 1D26  
                    u5390 1A8A                      u6510 2C8A                      u4590 3016  
                    u5630 2EC2                      u4910 1962                      u4830 18AC  
                    u4750 177C                      u4670 1644                      u5710 2DA6  
                    u6430 0F98                      u6350 0CB6                      u6270 09B2  
                    u6190 075E                      u5551 1E56                      u5471 1D22  
                    u5455 1CA2                      u5391 1A86                      u6511 2C86  
                    u4591 3012                      u5631 2EBE                      u4911 195E  
                    u4831 18A8                      u4751 1778                      u4671 1640  
                    u5711 2DA2                      u6431 0F92                      u6351 0CB2  
                    u6271 09AE                      u6191 075A                      u5480 1D38  
                    u6520 2C9C                      u5720 3206                      u5560 317C  
                    u5640 363A                      u4920 1976                      u4840 18BC  
                    u4760 178A                      u4680 1680                      u5800 2F7C  
                    u6440 0F9A                      u6360 0D00                      u6280 09E4  
                    u6600 12E8                      u5481 1D34                      u6521 2C98  
                    u5721 3202                      u5561 3178                      u5641 3636  
                    u4921 1972                      u4841 18B8                      u4761 1786  
                    u4681 167C                      u5801 2F78                      u6361 0CFC  
                    u6281 09E0                      u6601 12E4                      i2l34 3758  
                    u5490 1D66                      u5730 3228                      u5570 31BA  
                    u4930 1990                      u4850 18E8                      u4770 179A  
                    u4690 168E                      u5650 2CD8                      u6450 0FAC  
                    u6370 0DAC                      u6290 09F2                      u6610 1314  
                    u6530 107C                      u5491 1D62                      u5731 3224  
                    u5571 31B6                      u4931 198C                      u4851 18E4  
                    u4771 1796                      u4691 168A                      u5651 2CD4  
                    u6451 0FA8                      u6371 0DA8                      u6291 09EE  
                    u6611 1310                      u6531 1078                      u5740 327E  
                    u5580 31EE                      u4940 19CA                      u4860 18F8  
                    u4780 17CC                      u5660 2D0C                      u5820 2FB6  
                    u5900 25CA                      u6460 0FEA                      u6380 0DE4  
                    u6620 1330                      u6540 110E                      i2l37 3768  
                    u5741 327A                      u5581 31EA                      u4941 19C6  
                    u4861 18F4                      u4781 17C8                      u5821 2FB0  
                    u5901 25C6                      u6461 0FE6                      u6381 0DE0  
                    u6621 132C                      u6541 110A                      u5750 328C  
                    u5590 2DF6                      u4950 19DC                      u4870 1914  
                    u4790 17DA                      u5670 2D3A                      u5830 2FB8  
                    u5910 25EE                      u6470 1008                      u6390 0DF2  
                    u6630 1442                      u6550 1132                      u5751 3288  
                    u5591 2DF2                      u4951 19D8                      u4871 1910  
                    u4791 17D6                      u5671 2D36                      u5815 2F8E  
                    u6471 1004                      u6391 0DEE                      u6631 143E  
                    u6551 112E                      u5760 35FE                      u4960 19EC  
                    u4880 1924                      u5680 2D4E                      u5920 260A  
                    u5840 35E2                      u6480 1018                      u6560 1176  
                    u6640 3478                      u5761 35FA                      u4961 19E8  
                    u4881 1920                      u5681 2D4A                      u5665 2D02  
                    u5921 2606                      u5841 35DE                      u6481 1014  
                    u6561 1172                      u6641 3474                      u6650 32CA  
                    u6490 2BAC                      u4970 1A0C                      u4890 1936  
                    u5690 2D76                      u5770 2F0C                      u5930 265E  
                    u5850 3344                      u6570 11EA                      u6651 32C6  
                    u6491 2BA8                      u4971 1A08                      u4891 1932  
                    u5691 2D72                      u5915 25E4                      u5851 3340  
                    u6571 11E6                      u4980 1A1E                      u5780 2F2A  
                    u5940 267A                      u5860 250E                      u6580 120E  
                    u4981 1A1A                      u5781 2F26                      u5941 2676  
                    u6581 120A                      u4990 1A3A                      u5790 2F52  
                    u5950 26B6                      u5870 253C                      u6590 1248  
                    u4991 1A36                      u5791 2F4E                      u5775 2F02  
                    u5951 26B2                      u5935 2654                      u5871 2538  
                    u6591 1244                      u5880 255E                      u5960 34D2  
                    u5881 255A                      u5865 2504                      u5961 34CE  
                    u5970 36DE                      u5971 36D8                      u6667 33D2  
                    u5980 36E0                      u6677 32AC                      u5990 3532  
                    u5991 352E                      u5895 2572                      u5896 257C  
                    u5897 258C                      _TRMT 007D61                      abs@a 0016  
                    _dbuf 0100                      _labs 3326                      _atoi 2B78  
                    _main 370C                      _dtoa 2212                      _prec 0077  
                    pad@i 001B                      pad@p 0018                      fsr1h 000FE2  
                    fsr2h 000FDA                      indf2 000FDF                      fsr1l 000FE1  
                    pad@w 001D                      fsr2l 000FD9                      btemp 007B  
           ___fpclassifyf 2ECC                      prodh 000FF4                      prodl 000FF3  
                    start 000E           ___fldiv@new_exp 0015              ___param_bank 000000  
                   ??_abs 0018                     ??_pad 001A             ___fltol@sign1 000C  
         __end_of___aodiv 2A14                     ?_labs 0004                     ?_atoi 000A  
         __end_of___fladd 1A4E                     ?_main 0001                     ?_dtoa 001F  
         __end_of___aomod 2B78           __end_of___fldiv 2212           __end_of___flneg 365C  
         __end_of___flmul 1E78           __end_of___flsub 351A           __end_of___fltol 2DC8  
                   i2l120 3142                     _RCREG 000FAE              vfpfcnvrt@fmt 006E  
                   _SPBRG 000FAF                     _PORTD 000F83                     _TRISD 000F95  
                   _TXREG 000FAD                     _flags 0079                     _fputc 2FCA  
                   _fputs 3560           __end_of_isdigit 36E6                     labs@a 0004  
            ?_eusart_init 0001                     atoi@n 0011              ?_eusart_read 0001  
                   pad@fp 0014                     atoi@s 000A                     _width 0094  
                   _putch 3796                     dtoa@d 0021                     dtoa@i 0040  
                   dtoa@n 0037                     dtoa@p 0033                     dtoa@s 003F  
                   dtoa@w 0035           __end_of_isspace 3560                     tablat 000FF5  
                   ttemp5 007C                     ttemp6 007F                     ttemp7 0083  
                   status 000FD8                     wtemp8 007C           __end_of_sprintf 3434  
          ?___fpclassifyf 0004         ??_transmiter_DATA 00E2           __initialization 368C  
            __end_of_labs 338C              __end_of_atoi 2CC2              __end_of_main 3730  
            __end_of_dtoa 24C6                    ??_labs 0008                    ??_atoi 000C  
                  ??_main 0077                    ??_dtoa 0029             __activetblptr 000002  
                  _ADCON0 000FC2                    _ADCON1 000FC1                    _ADCON2 000FC0  
                  ?_fputc 0004                    ?_fputs 000D                    _ADRESH 000FC4  
                  _ADRESL 000FC3                    ?_putch 0001                    i2l3911 3758  
                  i2l3913 3766                    i2l3931 309E                    i2l3941 30F6  
                  i2l3933 30AC                    i2l3951 3134                    i2l3943 3108  
                  i2l3935 30BE                    _INTCON 000FF2                    i2l3953 3136  
                  i2l3945 310A                    i2l3937 30DC                    i2l3947 311C  
                  i2l3939 30F0                    i2l3955 313E                    i2l3949 3122  
                  i2l3957 3140                    _OSCCON 000FD3             vfpfcnvrt@done 00B8  
        __end_of___xxtofl 288C          __end_of_conv_AN0 3326              vfprintf@cfmt 0075  
                  ___flge 2DC8                    ___fleq 314E                 ??___aodiv 0014  
               ??___fladd 000C                 ??___aomod 0014                    ___wmul 36E6  
               ??___fldiv 000C                 ??___flneg 0008                 ??___flmul 001A  
               ??___flsub 0033                 ??___fltol 0008                    _efgtoa 061E  
                  _floorf 24C6                    _memcpy 3484                    clear_0 3692  
                  clear_1 369E                    isa$std 000001                    pad@buf 0016  
                  dtoa@fp 001F                    _strcpy 35A4             ?_eusart_write 0001  
                  fputc@c 0004                    fputs@c 0011                    fputs@i 0012  
                  fputs@s 000D                 ??_isdigit 0006           ___fpclassifyf@e 000C  
         ___fpclassifyf@u 000E           ___fpclassifyf@x 0004              __mediumconst 0000  
               ??_isspace 0006                    tblptrh 000FF7                    tblptrl 000FF6  
                  tblptru 000FF8                    putch@c 0001          __end_of_vfprintf 3484  
               ??_sprintf 0077             ?_receive_DATA 0001                ___flge@ff1 002B  
              ___flge@ff2 002F           ??___fpclassifyf 0008              ___xxtofl@arg 000E  
            ___xxtofl@exp 000D              ___xxtofl@val 0004                ___fleq@ff1 0004  
              ___fleq@ff2 0008                __accesstop 0080   __end_of__initialization 36AC  
              ___flneg@f1 0004             ___rparam_used 000001                _VoltageADC 0090  
        eusart_string@str 0005                ___fltol@f1 0004            __pcstackCOMRAM 0001  
           __end_of_fputc 3094             __end_of_fputs 35A4             __end_of_putch 3798  
          ??_eusart_write 0004          _config_Interrupt 3778            ??_receive_DATA 0001  
                 ??_fputc 0008                   ??_fputs 0011                   ??_putch 0004  
              __pbssBANK0 0080                __pbssBANK1 0100                   ?___flge 002B  
                 ?___fleq 0004                   ?___wmul 0004                   ?_efgtoa 0037  
                 ?_floorf 001D                   ?_memcpy 0004                   ?_strcpy 0004  
            _BufferSERIAL 0098                _config_ADC 376A                 ?___xxtofl 0004  
                 _OSCTUNE 000F9B                 ?_conv_AN0 0001           _transmiter_DATA 338C  
           _eusart_string 365C                   _VdigADC 0096                   __Hparam 0000  
                 __Lparam 0000         __end_of_config_IO 378C                   ___aodiv 288C  
                 ___fladd 158E                   ___aomod 2A14                   ___fldiv 1E78  
                 ___flneg 3624                   ___flmul 1A4E                   ___flsub 34D4  
                 ___fltol 2CC2                 ?_vfprintf 00C5              __psmallconst 0600  
                 __pcinit 368C                   __ramtop 0600                   __ptext0 370C  
                 __ptext1 338C                   __ptext2 33E2                   __ptext3 3434  
                 __ptext4 1058                   __ptext5 061E                   __ptext6 35A4  
                 __ptext7 3484                   __ptext8 3326                   __ptext9 24C6  
                 _isdigit 36BA                ??___xxtofl 0008                   _isspace 351A  
                 efgtoa@c 003D                   efgtoa@d 004B                   efgtoa@e 004F  
                 efgtoa@f 0039                   efgtoa@g 0062                   efgtoa@h 0057  
                 efgtoa@i 005F                   efgtoa@l 005B                   efgtoa@m 004D  
                 efgtoa@n 0066                   efgtoa@p 0042                   efgtoa@t 0044  
                 efgtoa@u 0068                   efgtoa@w 0055                   atoi@neg 000F  
          _BufferSERIALRX 0080                ??_conv_AN0 002B                   _sprintf 33E2  
          __pintcode_body 3094      end_of_initialization 36AC            ?_eusart_string 0005  
                 floorf@e 002B                   floorf@m 0027                   floorf@u 002D  
                 floorf@x 001D                   memcpy@d 000B                   memcpy@n 0008  
                 memcpy@s 000D                   fputc@fp 0006             __Lmediumconst 0000  
                 int_func 3094                   fputs@fp 000F      __end_of_eusart_write 3746  
       __end_of_vfpfcnvrt 158E                efgtoa@mode 0049                efgtoa@sign 0061  
               _RCSTAbits 000FAB                   postdec2 000FDD                   postinc0 000FEE  
                 postinc1 000FE6                   postinc2 000FDE          vfpfcnvrt@convarg 00BA  
    __end_of_receive_DATA 314E                ??_vfprintf 0075                   strcpy@d 000A  
                 strcpy@s 0008                 _PORTDbits 000F83               ___fladd@grs 0013  
             ?_config_ADC 0001   __end_of_transmiter_DATA 33E2             ___xxtofl@sign 000C  
             ___fldiv@grs 0017               ___fldiv@rem 0010               ___flmul@grs 0020  
           ??_config_FOSC 0004                 _TXSTAbits 000FAC  __end_of_config_Interrupt 3782  
          __end_of___flge 2ECC            __end_of___fleq 31F8               vfpfcnvrt@ap 0070  
             vfpfcnvrt@cp 00C3               vfpfcnvrt@fp 006C            __end_of___wmul 370C  
          __end_of_efgtoa 1058               _BAUDCTLbits 000FB8            __end_of_floorf 26D8  
          __end_of_memcpy 34D4                floorf@F526 0088            __end_of_strcpy 35E4  
     start_initialization 368C               __end_of_abs 3624               __end_of_pad 32A2  
         ??_eusart_string 0007     __end_of___fpclassifyf 2FCA               vfprintf@fmt 00C7  
                ??___flge 0033                  ??___fleq 000C       __end_of_config_FOSC 3796  
                ??___wmul 0008                  ??_efgtoa 003E                  ??_floorf 0021  
                ??_memcpy 000A                  ??_strcpy 0008                 ___fladd@a 0008  
               ___fladd@b 0004                 ___fldiv@a 0008                 ___fldiv@b 0004  
               ___flmul@a 0016                 ___flmul@b 0012               __pbssCOMRAM 0077  
        ?_transmiter_DATA 0001                 ___flsub@a 002F                 ___flsub@b 002B  
           __pcstackBANK0 00B8          ___aodiv@dividend 0004             ??_eusart_init 0004  
           ??_eusart_read 0001               _efgtoa$1037 0046                 _dtoa$1006 0031  
               __pintcode 0008                  ?___aodiv 0004                  ?___fladd 0004  
                ?___aomod 0004                  ?___fldiv 0004          ___aodiv@quotient 0016  
                ?___flneg 0004                  ?___flmul 0012                  ?___flsub 002B  
                ?___fltol 0004                 _config_IO 3782              _eusart_write 3730  
             __smallconst 0600                  ?_isdigit 0004                  ?_isspace 0004  
                ?_sprintf 00CB              _receive_DATA 0008            ___wmul@product 0008  
             _config_FOSC 378C       __end_of_eusart_init 3758       __end_of_eusart_read 376A  
                _PIR1bits 000F9E                  i2u451_40 30AC                  i2u451_41 30A8  
                i2u452_40 30DC                  i2u452_41 30D8                  i2u453_40 30F0  
                i2u453_41 30EC                  i2u454_40 3108                  i2u454_41 3104  
                i2u455_40 311C                  i2u455_41 3118                  i2u456_40 3134  
                i2u456_41 3130                  i2u449_40 3766                  i2u449_41 3762  
               _vfpfcnvrt 1058                ?_config_IO 0001                _ADCON0bits 000FC2  
       ___wmul@multiplier 0004              ??_config_ADC 0004              _isspace$1117 0008  
              vfpfcnvrt@c 00C2                  __Hrparam 0000         ?_config_Interrupt 0001  
               memcpy@tmp 000A                vfprintf@ap 00C9                  __Lrparam 0000  
              vfprintf@fp 00C5        __end_of_config_ADC 3778        ??_config_Interrupt 0004  
              ?_vfpfcnvrt 006C           ___aodiv@divisor 000C           ___aodiv@counter 0014  
      ___fpclassifyf@F465 008C                sprintf@fmt 00CD                  ___xxtofl 26D8  
                __ptext10 2ECC                  __ptext11 2CC2                  __ptext20 3560  
                __ptext12 34D4                  __ptext21 2FCA                  __ptext13 158E  
                __ptext30 365C                  __ptext22 3796                  __ptext14 3624  
                __ptext31 3730                  __ptext23 35E4                  __ptext15 2DC8  
                __ptext32 3746                  __ptext24 2A14                  __ptext16 314E  
                __ptext41 3758                  __ptext33 32A2                  __ptext25 288C  
                __ptext17 1E78                  __ptext34 26D8                  __ptext26 2B78  
                __ptext18 2212                  __ptext35 1A4E                  __ptext27 351A  
                __ptext19 31F8                  __ptext36 3778                  __ptext28 36BA  
                __ptext37 3782                  __ptext29 36E6                  __ptext38 378C  
                __ptext39 376A                  _conv_AN0 32A2               _eusart_init 3746  
             _eusart_read 3758                strcpy@dest 0004                  efgtoa@fp 0037  
                efgtoa@ne 0040                  efgtoa@pp 0048                  efgtoa@ou 0051  
                isa$xinst 000000                  int$flags 007B                  _vfprintf 3434  
             ??_config_IO 0004          ___aomod@dividend 0004                  memcpy@d1 0004  
                memcpy@s1 0006                  isdigit@c 0004     __end_of_eusart_string 368C  
                intlevel2 0000                 sprintf@ap 00D5                  isspace@c 0004  
               strcpy@src 0006               efgtoa@nmode 004A           ___aomod@divisor 000C  
             ??_vfpfcnvrt 0072           ___aomod@counter 0014                  sprintf@f 00D7  
                sprintf@s 00CB             ___fladd@signs 0010              ___aodiv@sign 0015  
            ___fladd@aexp 0011              ___fladd@bexp 0012              ?_config_FOSC 0001  
            ___aomod@sign 0015  
