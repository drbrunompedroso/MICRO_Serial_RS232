

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Aug 15 20:24:29 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23   000000                     
    24                           ; Generated 23/03/2023 GMT
    25                           ; 
    26                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F4520 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58   000000                     _RCREG	set	4014
    59   000000                     _TXREG	set	4013
    60   000000                     _SPBRG	set	4015
    61   000000                     _BAUDCTLbits	set	4024
    62   000000                     _PIR1bits	set	3998
    63   000000                     _TRMT	set	32097
    64   000000                     _PORTD	set	3971
    65   000000                     _TRISD	set	3989
    66   000000                     _OSCTUNE	set	3995
    67   000000                     _RCSTAbits	set	4011
    68   000000                     _TXSTAbits	set	4012
    69   000000                     _RCIF	set	31989
    70   000000                     _ADCON1	set	4033
    71   000000                     _OSCCON	set	4051
    72   000000                     _INTCON	set	4082
    73   000000                     _PIE1	set	3997
    74                           
    75                           ; #config settings
    76                           
    77                           	psect	cinit
    78   0000E6                     __pcinit:
    79                           	callstack 0
    80   0000E6                     start_initialization:
    81                           	callstack 0
    82   0000E6                     __initialization:
    83                           	callstack 0
    84                           
    85                           ; Clear objects allocated to COMRAM (16 bytes)
    86   0000E6  EE00  F001         	lfsr	0,__pbssCOMRAM
    87   0000EA  0E10               	movlw	16
    88   0000EC                     clear_0:
    89   0000EC  6AEE               	clrf	postinc0,c
    90   0000EE  06E8               	decf	wreg,f,c
    91   0000F0  E1FD               	bnz	clear_0
    92   0000F2                     end_of_initialization:
    93                           	callstack 0
    94   0000F2                     __end_of__initialization:
    95                           	callstack 0
    96   0000F2  9018               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    97   0000F4  9218               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    98   0000F6  0E00               	movlw	low (__Lmediumconst shr (0+16))
    99   0000F8  6EF8               	movwf	tblptru,c
   100   0000FA  0100               	movlb	0
   101   0000FC  EF09  F000         	goto	_main	;jump to C main() function
   102                           
   103                           	psect	bssCOMRAM
   104   000001                     __pbssCOMRAM:
   105                           	callstack 0
   106   000001                     _data:
   107                           	callstack 0
   108   000001                     	ds	16
   109                           
   110                           	psect	cstackCOMRAM
   111   000011                     __pcstackCOMRAM:
   112                           	callstack 0
   113   000011                     eusart_write@c:
   114                           	callstack 0
   115                           
   116                           ; 1 bytes @ 0x0
   117   000011                     	ds	1
   118   000012                     eusart_string@str:
   119                           	callstack 0
   120                           
   121                           ; 2 bytes @ 0x1
   122   000012                     	ds	2
   123   000014                     ??_half_Duplex:
   124                           
   125                           ; 1 bytes @ 0x3
   126   000014                     	ds	2
   127   000016                     ??_main:
   128                           
   129                           ; 1 bytes @ 0x5
   130   000016                     	ds	2
   131                           
   132 ;;
   133 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   134 ;;
   135 ;; *************** function _main *****************
   136 ;; Defined at:
   137 ;;		line 98 in file "../SERIAL_Char_LED.X/Program_main.c"
   138 ;; Parameters:    Size  Location     Type
   139 ;;		None
   140 ;; Auto vars:     Size  Location     Type
   141 ;;		None
   142 ;; Return value:  Size  Location     Type
   143 ;;                  1    wreg      void 
   144 ;; Registers used:
   145 ;;		wreg, status,2, status,0, cstack
   146 ;; Tracked objects:
   147 ;;		On entry : 0/0
   148 ;;		On exit  : 0/0
   149 ;;		Unchanged: 0/0
   150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   151 ;;      Params:         0       0       0       0       0       0       0
   152 ;;      Locals:         0       0       0       0       0       0       0
   153 ;;      Temps:          2       0       0       0       0       0       0
   154 ;;      Totals:         2       0       0       0       0       0       0
   155 ;;Total ram usage:        2 bytes
   156 ;; Hardware stack levels required when called: 4
   157 ;; This function calls:
   158 ;;		_config_FOSC
   159 ;;		_config_IO
   160 ;;		_config_Interrupt
   161 ;;		_eusart_init
   162 ;; This function is called by:
   163 ;;		Startup code after reset
   164 ;; This function uses a non-reentrant model
   165 ;;
   166                           
   167                           	psect	text0
   168   000012                     __ptext0:
   169                           	callstack 0
   170   000012                     _main:
   171                           	callstack 27
   172   000012                     
   173                           ;../SERIAL_Char_LED.X/Program_main.c: 100:     config_FOSC();
   174   000012  ECA8  F000         	call	_config_FOSC	;wreg free
   175                           
   176                           ;../SERIAL_Char_LED.X/Program_main.c: 101:     config_IO();
   177   000016  EC9D  F000         	call	_config_IO	;wreg free
   178                           
   179                           ;../SERIAL_Char_LED.X/Program_main.c: 102:     config_Interrupt();
   180   00001A  ECA3  F000         	call	_config_Interrupt	;wreg free
   181                           
   182                           ;../SERIAL_Char_LED.X/Program_main.c: 103:     eusart_init();
   183   00001E  EC8B  F000         	call	_eusart_init	;wreg free
   184   000022  EF20  F000         	goto	l814
   185   000026                     l83:
   186                           
   187                           ;../SERIAL_Char_LED.X/Program_main.c: 109:                PORTD = 0XFF;
   188   000026  6883               	setf	131,c	;volatile
   189                           
   190                           ;../SERIAL_Char_LED.X/Program_main.c: 110:                break;
   191   000028  EF20  F000         	goto	l814
   192   00002C                     l806:
   193                           
   194                           ;../SERIAL_Char_LED.X/Program_main.c: 112:                PORTD = 0XFE;
   195   00002C  0EFE               	movlw	254
   196   00002E  6E83               	movwf	131,c	;volatile
   197                           
   198                           ;../SERIAL_Char_LED.X/Program_main.c: 113:                break;
   199   000030  EF20  F000         	goto	l814
   200   000034                     l808:
   201                           
   202                           ;../SERIAL_Char_LED.X/Program_main.c: 115:                PORTD = 0XFC;
   203   000034  0EFC               	movlw	252
   204   000036  6E83               	movwf	131,c	;volatile
   205                           
   206                           ;../SERIAL_Char_LED.X/Program_main.c: 116:                break;
   207   000038  EF20  F000         	goto	l814
   208   00003C                     l810:
   209                           
   210                           ;../SERIAL_Char_LED.X/Program_main.c: 118:                PORTD = 0XF8;
   211   00003C  0EF8               	movlw	248
   212   00003E  6E83               	movwf	131,c	;volatile
   213   000040                     l814:
   214   000040  5001               	movf	_data^0,w,c
   215   000042  6E16               	movwf	??_main^0,c
   216   000044  6A17               	clrf	(??_main+1)^0,c
   217                           
   218                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   219                           ; Switch size 1, requested type "simple"
   220                           ; Number of cases is 1, Range of values is 0 to 0
   221                           ; switch strategies available:
   222                           ; Name         Instructions Cycles
   223                           ; simple_byte            4     3 (average)
   224                           ;	Chosen strategy is simple_byte
   225   000046  5017               	movf	(??_main+1)^0,w,c
   226   000048  0A00               	xorlw	0	; case 0
   227   00004A  B4D8               	btfsc	status,2,c
   228   00004C  EF2A  F000         	goto	l844
   229   000050  EF20  F000         	goto	l814
   230   000054                     l844:
   231                           
   232                           ; Switch size 1, requested type "simple"
   233                           ; Number of cases is 4, Range of values is 65 to 68
   234                           ; switch strategies available:
   235                           ; Name         Instructions Cycles
   236                           ; simple_byte           13     7 (average)
   237                           ;	Chosen strategy is simple_byte
   238   000054  5016               	movf	??_main^0,w,c
   239   000056  0A41               	xorlw	65	; case 65
   240   000058  B4D8               	btfsc	status,2,c
   241   00005A  EF13  F000         	goto	l83
   242   00005E  0A03               	xorlw	3	; case 66
   243   000060  B4D8               	btfsc	status,2,c
   244   000062  EF16  F000         	goto	l806
   245   000066  0A01               	xorlw	1	; case 67
   246   000068  B4D8               	btfsc	status,2,c
   247   00006A  EF1A  F000         	goto	l808
   248   00006E  0A07               	xorlw	7	; case 68
   249   000070  B4D8               	btfsc	status,2,c
   250   000072  EF1E  F000         	goto	l810
   251   000076  EF20  F000         	goto	l814
   252   00007A  EF07  F000         	goto	start
   253   00007E                     __end_of_main:
   254                           	callstack 0
   255                           
   256 ;; *************** function _eusart_init *****************
   257 ;; Defined at:
   258 ;;		line 4 in file "../SERIAL_Char_LED.X/eusart.c"
   259 ;; Parameters:    Size  Location     Type
   260 ;;		None
   261 ;; Auto vars:     Size  Location     Type
   262 ;;		None
   263 ;; Return value:  Size  Location     Type
   264 ;;                  1    wreg      void 
   265 ;; Registers used:
   266 ;;		wreg, status,2
   267 ;; Tracked objects:
   268 ;;		On entry : 0/0
   269 ;;		On exit  : 0/0
   270 ;;		Unchanged: 0/0
   271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   272 ;;      Params:         0       0       0       0       0       0       0
   273 ;;      Locals:         0       0       0       0       0       0       0
   274 ;;      Temps:          0       0       0       0       0       0       0
   275 ;;      Totals:         0       0       0       0       0       0       0
   276 ;;Total ram usage:        0 bytes
   277 ;; Hardware stack levels used: 1
   278 ;; Hardware stack levels required when called: 3
   279 ;; This function calls:
   280 ;;		Nothing
   281 ;; This function is called by:
   282 ;;		_main
   283 ;; This function uses a non-reentrant model
   284 ;;
   285                           
   286                           	psect	text1
   287   000116                     __ptext1:
   288                           	callstack 0
   289   000116                     _eusart_init:
   290                           	callstack 27
   291   000116                     
   292                           ;../SERIAL_Char_LED.X/eusart.c: 6:     TXSTAbits.TXEN = 1;
   293   000116  8AAC               	bsf	172,5,c	;volatile
   294                           
   295                           ;../SERIAL_Char_LED.X/eusart.c: 7:     RCSTAbits.CREN = 1;
   296   000118  88AB               	bsf	171,4,c	;volatile
   297                           
   298                           ;../SERIAL_Char_LED.X/eusart.c: 8:     TXSTAbits.SYNC = 0;
   299   00011A  98AC               	bcf	172,4,c	;volatile
   300                           
   301                           ;../SERIAL_Char_LED.X/eusart.c: 9:     RCSTAbits.SPEN = 1;
   302   00011C  8EAB               	bsf	171,7,c	;volatile
   303                           
   304                           ;../SERIAL_Char_LED.X/eusart.c: 10:     TXSTAbits.BRGH = 0;
   305   00011E  94AC               	bcf	172,2,c	;volatile
   306                           
   307                           ;../SERIAL_Char_LED.X/eusart.c: 11:     BAUDCTLbits.BRG16 = 0;
   308   000120  96B8               	bcf	184,3,c	;volatile
   309   000122                     
   310                           ;../SERIAL_Char_LED.X/eusart.c: 12:     SPBRG = 12;
   311   000122  0E0C               	movlw	12
   312   000124  6EAF               	movwf	175,c	;volatile
   313   000126  0012               	return		;funcret
   314   000128                     __end_of_eusart_init:
   315                           	callstack 0
   316                           
   317 ;; *************** function _config_Interrupt *****************
   318 ;; Defined at:
   319 ;;		line 82 in file "../SERIAL_Char_LED.X/Program_main.c"
   320 ;; Parameters:    Size  Location     Type
   321 ;;		None
   322 ;; Auto vars:     Size  Location     Type
   323 ;;		None
   324 ;; Return value:  Size  Location     Type
   325 ;;                  1    wreg      void 
   326 ;; Registers used:
   327 ;;		wreg, status,2
   328 ;; Tracked objects:
   329 ;;		On entry : 0/0
   330 ;;		On exit  : 0/0
   331 ;;		Unchanged: 0/0
   332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   333 ;;      Params:         0       0       0       0       0       0       0
   334 ;;      Locals:         0       0       0       0       0       0       0
   335 ;;      Temps:          0       0       0       0       0       0       0
   336 ;;      Totals:         0       0       0       0       0       0       0
   337 ;;Total ram usage:        0 bytes
   338 ;; Hardware stack levels used: 1
   339 ;; Hardware stack levels required when called: 3
   340 ;; This function calls:
   341 ;;		Nothing
   342 ;; This function is called by:
   343 ;;		_main
   344 ;; This function uses a non-reentrant model
   345 ;;
   346                           
   347                           	psect	text2
   348   000146                     __ptext2:
   349                           	callstack 0
   350   000146                     _config_Interrupt:
   351                           	callstack 27
   352   000146                     
   353                           ;../SERIAL_Char_LED.X/Program_main.c: 84:     INTCON = 0XC0;
   354   000146  0EC0               	movlw	192
   355   000148  6EF2               	movwf	242,c	;volatile
   356                           
   357                           ;../SERIAL_Char_LED.X/Program_main.c: 85:     PIE1 = 0X20;
   358   00014A  0E20               	movlw	32
   359   00014C  6E9D               	movwf	157,c	;volatile
   360   00014E  0012               	return		;funcret
   361   000150                     __end_of_config_Interrupt:
   362                           	callstack 0
   363                           
   364 ;; *************** function _config_IO *****************
   365 ;; Defined at:
   366 ;;		line 75 in file "../SERIAL_Char_LED.X/Program_main.c"
   367 ;; Parameters:    Size  Location     Type
   368 ;;		None
   369 ;; Auto vars:     Size  Location     Type
   370 ;;		None
   371 ;; Return value:  Size  Location     Type
   372 ;;                  1    wreg      void 
   373 ;; Registers used:
   374 ;;		wreg, status,2
   375 ;; Tracked objects:
   376 ;;		On entry : 0/0
   377 ;;		On exit  : 0/0
   378 ;;		Unchanged: 0/0
   379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   380 ;;      Params:         0       0       0       0       0       0       0
   381 ;;      Locals:         0       0       0       0       0       0       0
   382 ;;      Temps:          0       0       0       0       0       0       0
   383 ;;      Totals:         0       0       0       0       0       0       0
   384 ;;Total ram usage:        0 bytes
   385 ;; Hardware stack levels used: 1
   386 ;; Hardware stack levels required when called: 3
   387 ;; This function calls:
   388 ;;		Nothing
   389 ;; This function is called by:
   390 ;;		_main
   391 ;; This function uses a non-reentrant model
   392 ;;
   393                           
   394                           	psect	text3
   395   00013A                     __ptext3:
   396                           	callstack 0
   397   00013A                     _config_IO:
   398                           	callstack 27
   399   00013A                     
   400                           ;../SERIAL_Char_LED.X/Program_main.c: 77:     ADCON1 = 0X0F;
   401   00013A  0E0F               	movlw	15
   402   00013C  6EC1               	movwf	193,c	;volatile
   403                           
   404                           ;../SERIAL_Char_LED.X/Program_main.c: 78:     TRISD = 0X00;
   405   00013E  0E00               	movlw	0
   406   000140  6E95               	movwf	149,c	;volatile
   407   000142                     
   408                           ;../SERIAL_Char_LED.X/Program_main.c: 79:     PORTD = 0XFF;
   409   000142  6883               	setf	131,c	;volatile
   410   000144  0012               	return		;funcret
   411   000146                     __end_of_config_IO:
   412                           	callstack 0
   413                           
   414 ;; *************** function _config_FOSC *****************
   415 ;; Defined at:
   416 ;;		line 70 in file "../SERIAL_Char_LED.X/Program_main.c"
   417 ;; Parameters:    Size  Location     Type
   418 ;;		None
   419 ;; Auto vars:     Size  Location     Type
   420 ;;		None
   421 ;; Return value:  Size  Location     Type
   422 ;;                  1    wreg      void 
   423 ;; Registers used:
   424 ;;		wreg, status,2
   425 ;; Tracked objects:
   426 ;;		On entry : 0/0
   427 ;;		On exit  : 0/0
   428 ;;		Unchanged: 0/0
   429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   430 ;;      Params:         0       0       0       0       0       0       0
   431 ;;      Locals:         0       0       0       0       0       0       0
   432 ;;      Temps:          0       0       0       0       0       0       0
   433 ;;      Totals:         0       0       0       0       0       0       0
   434 ;;Total ram usage:        0 bytes
   435 ;; Hardware stack levels used: 1
   436 ;; Hardware stack levels required when called: 3
   437 ;; This function calls:
   438 ;;		Nothing
   439 ;; This function is called by:
   440 ;;		_main
   441 ;; This function uses a non-reentrant model
   442 ;;
   443                           
   444                           	psect	text4
   445   000150                     __ptext4:
   446                           	callstack 0
   447   000150                     _config_FOSC:
   448                           	callstack 27
   449   000150                     
   450                           ;../SERIAL_Char_LED.X/Program_main.c: 72:     OSCCON = 0X00;
   451   000150  0E00               	movlw	0
   452   000152  6ED3               	movwf	211,c	;volatile
   453                           
   454                           ;../SERIAL_Char_LED.X/Program_main.c: 73:     OSCTUNE = 0X00;
   455   000154  0E00               	movlw	0
   456   000156  6E9B               	movwf	155,c	;volatile
   457   000158  0012               	return		;funcret
   458   00015A                     __end_of_config_FOSC:
   459                           	callstack 0
   460                           
   461 ;; *************** function _half_Duplex *****************
   462 ;; Defined at:
   463 ;;		line 88 in file "../SERIAL_Char_LED.X/Program_main.c"
   464 ;; Parameters:    Size  Location     Type
   465 ;;		None
   466 ;; Auto vars:     Size  Location     Type
   467 ;;		None
   468 ;; Return value:  Size  Location     Type
   469 ;;                  1    wreg      void 
   470 ;; Registers used:
   471 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   472 ;; Tracked objects:
   473 ;;		On entry : 0/0
   474 ;;		On exit  : 0/0
   475 ;;		Unchanged: 0/0
   476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   477 ;;      Params:         0       0       0       0       0       0       0
   478 ;;      Locals:         0       0       0       0       0       0       0
   479 ;;      Temps:          2       0       0       0       0       0       0
   480 ;;      Totals:         2       0       0       0       0       0       0
   481 ;;Total ram usage:        2 bytes
   482 ;; Hardware stack levels used: 1
   483 ;; Hardware stack levels required when called: 2
   484 ;; This function calls:
   485 ;;		_eusart_read
   486 ;;		_eusart_string
   487 ;; This function is called by:
   488 ;;		Interrupt level 2
   489 ;; This function uses a non-reentrant model
   490 ;;
   491                           
   492                           	psect	intcode
   493   000008                     __pintcode:
   494                           	callstack 0
   495   000008                     _half_Duplex:
   496                           	callstack 27
   497                           
   498                           ;incstack = 0
   499   000008  8218               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   500   00000A  ED3F  F000         	call	int_func,f	;refresh shadow registers
   501                           
   502                           	psect	intcode_body
   503   00007E                     __pintcode_body:
   504                           	callstack 27
   505   00007E                     int_func:
   506                           	callstack 27
   507   00007E  0006               	pop		; remove dummy address from shadow register refresh
   508   000080  CFD9 F014          	movff	fsr2l,??_half_Duplex
   509   000084  CFDA F015          	movff	fsr2h,??_half_Duplex+1
   510   000088                     
   511                           ;../SERIAL_Char_LED.X/Program_main.c: 90:     if(PIR1bits.RCIF == 1)
   512   000088  AA9E               	btfss	158,5,c	;volatile
   513   00008A  EF49  F000         	goto	i2u6_41
   514   00008E  EF4B  F000         	goto	i2u6_40
   515   000092                     i2u6_41:
   516   000092  EF54  F000         	goto	i2l838
   517   000096                     i2u6_40:
   518   000096                     
   519                           ;../SERIAL_Char_LED.X/Program_main.c: 91:     {;../SERIAL_Char_LED.X/Program_main.c: 92:
      +                                 data[0] = eusart_read();
   520   000096  EC94  F000         	call	_eusart_read	;wreg free
   521   00009A  6E01               	movwf	_data^0,c
   522   00009C                     
   523                           ;../SERIAL_Char_LED.X/Program_main.c: 93:       eusart_string(data);
   524   00009C  0E01               	movlw	low _data
   525   00009E  6E12               	movwf	eusart_string@str^0,c
   526   0000A0  0E00               	movlw	high _data
   527   0000A2  6E13               	movwf	(eusart_string@str+1)^0,c
   528   0000A4  EC5B  F000         	call	_eusart_string	;wreg free
   529   0000A8                     i2l838:
   530                           
   531                           ;../SERIAL_Char_LED.X/Program_main.c: 95:     PIR1bits.RCIF = 0;
   532   0000A8  9A9E               	bcf	158,5,c	;volatile
   533   0000AA  C015  FFDA         	movff	??_half_Duplex+1,fsr2h
   534   0000AE  C014  FFD9         	movff	??_half_Duplex,fsr2l
   535   0000B2  9218               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   536   0000B4  0011               	retfie		f
   537   0000B6                     __end_of_half_Duplex:
   538                           	callstack 0
   539                           
   540 ;; *************** function _eusart_string *****************
   541 ;; Defined at:
   542 ;;		line 23 in file "../SERIAL_Char_LED.X/eusart.c"
   543 ;; Parameters:    Size  Location     Type
   544 ;;  str             2    1[COMRAM] PTR unsigned char 
   545 ;;		 -> data(16), 
   546 ;; Auto vars:     Size  Location     Type
   547 ;;		None
   548 ;; Return value:  Size  Location     Type
   549 ;;                  1    wreg      void 
   550 ;; Registers used:
   551 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   552 ;; Tracked objects:
   553 ;;		On entry : 0/0
   554 ;;		On exit  : 0/0
   555 ;;		Unchanged: 0/0
   556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   557 ;;      Params:         2       0       0       0       0       0       0
   558 ;;      Locals:         0       0       0       0       0       0       0
   559 ;;      Temps:          0       0       0       0       0       0       0
   560 ;;      Totals:         2       0       0       0       0       0       0
   561 ;;Total ram usage:        2 bytes
   562 ;; Hardware stack levels used: 1
   563 ;; Hardware stack levels required when called: 1
   564 ;; This function calls:
   565 ;;		_eusart_write
   566 ;; This function is called by:
   567 ;;		_half_Duplex
   568 ;; This function uses a non-reentrant model
   569 ;;
   570                           
   571                           	psect	text6
   572   0000B6                     __ptext6:
   573                           	callstack 0
   574   0000B6                     _eusart_string:
   575                           	callstack 27
   576   0000B6                     
   577                           ;../SERIAL_Char_LED.X/eusart.c: 23: void eusart_string(char *str);../SERIAL_Char_LED.X/e
      +                          usart.c: 24: {;../SERIAL_Char_LED.X/eusart.c: 25:     while(*str!='\0')
   578   0000B6  EF66  F000         	goto	i2l830
   579   0000BA                     i2l826:
   580                           
   581                           ;../SERIAL_Char_LED.X/eusart.c: 26:     {;../SERIAL_Char_LED.X/eusart.c: 27:         eus
      +                          art_write(*str);
   582   0000BA  C012  FFD9         	movff	eusart_string@str,fsr2l
   583   0000BE  C013  FFDA         	movff	eusart_string@str+1,fsr2h
   584   0000C2  50DF               	movf	indf2,w,c
   585   0000C4  EC80  F000         	call	_eusart_write
   586   0000C8                     
   587                           ;../SERIAL_Char_LED.X/eusart.c: 28:         str++;
   588   0000C8  4A12               	infsnz	eusart_string@str^0,f,c
   589   0000CA  2A13               	incf	(eusart_string@str+1)^0,f,c
   590   0000CC                     i2l830:
   591                           
   592                           ;../SERIAL_Char_LED.X/eusart.c: 25:     while(*str!='\0')
   593   0000CC  C012  FFD9         	movff	eusart_string@str,fsr2l
   594   0000D0  C013  FFDA         	movff	eusart_string@str+1,fsr2h
   595   0000D4  50DF               	movf	indf2,w,c
   596   0000D6  A4D8               	btfss	status,2,c
   597   0000D8  EF70  F000         	goto	i2u5_41
   598   0000DC  EF72  F000         	goto	i2u5_40
   599   0000E0                     i2u5_41:
   600   0000E0  EF5D  F000         	goto	i2l826
   601   0000E4                     i2u5_40:
   602   0000E4  0012               	return		;funcret
   603   0000E6                     __end_of_eusart_string:
   604                           	callstack 0
   605                           
   606 ;; *************** function _eusart_write *****************
   607 ;; Defined at:
   608 ;;		line 16 in file "../SERIAL_Char_LED.X/eusart.c"
   609 ;; Parameters:    Size  Location     Type
   610 ;;  c               1    wreg     unsigned char 
   611 ;; Auto vars:     Size  Location     Type
   612 ;;  c               1    0[COMRAM] unsigned char 
   613 ;; Return value:  Size  Location     Type
   614 ;;                  1    wreg      void 
   615 ;; Registers used:
   616 ;;		wreg
   617 ;; Tracked objects:
   618 ;;		On entry : 0/0
   619 ;;		On exit  : 0/0
   620 ;;		Unchanged: 0/0
   621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   622 ;;      Params:         0       0       0       0       0       0       0
   623 ;;      Locals:         1       0       0       0       0       0       0
   624 ;;      Temps:          0       0       0       0       0       0       0
   625 ;;      Totals:         1       0       0       0       0       0       0
   626 ;;Total ram usage:        1 bytes
   627 ;; Hardware stack levels used: 1
   628 ;; This function calls:
   629 ;;		Nothing
   630 ;; This function is called by:
   631 ;;		_eusart_string
   632 ;; This function uses a non-reentrant model
   633 ;;
   634                           
   635                           	psect	text7
   636   000100                     __ptext7:
   637                           	callstack 0
   638   000100                     _eusart_write:
   639                           	callstack 27
   640                           
   641                           ;incstack = 0
   642                           ;eusart_write@c stored from wreg
   643   000100  6E11               	movwf	eusart_write@c^0,c
   644   000102                     i2l22:
   645   000102  A2AC               	btfss	4012,1,c	;volatile
   646   000104  EF86  F000         	goto	i2u1_41
   647   000108  EF88  F000         	goto	i2u1_40
   648   00010C                     i2u1_41:
   649   00010C  EF81  F000         	goto	i2l22
   650   000110                     i2u1_40:
   651   000110                     
   652                           ;../SERIAL_Char_LED.X/eusart.c: 19:     TXREG = c;
   653   000110  C011  FFAD         	movff	eusart_write@c,4013	;volatile
   654   000114  0012               	return		;funcret
   655   000116                     __end_of_eusart_write:
   656                           	callstack 0
   657                           
   658 ;; *************** function _eusart_read *****************
   659 ;; Defined at:
   660 ;;		line 33 in file "../SERIAL_Char_LED.X/eusart.c"
   661 ;; Parameters:    Size  Location     Type
   662 ;;		None
   663 ;; Auto vars:     Size  Location     Type
   664 ;;		None
   665 ;; Return value:  Size  Location     Type
   666 ;;                  1    wreg      unsigned char 
   667 ;; Registers used:
   668 ;;		wreg, status,2
   669 ;; Tracked objects:
   670 ;;		On entry : 0/0
   671 ;;		On exit  : 0/0
   672 ;;		Unchanged: 0/0
   673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   674 ;;      Params:         0       0       0       0       0       0       0
   675 ;;      Locals:         0       0       0       0       0       0       0
   676 ;;      Temps:          0       0       0       0       0       0       0
   677 ;;      Totals:         0       0       0       0       0       0       0
   678 ;;Total ram usage:        0 bytes
   679 ;; Hardware stack levels used: 1
   680 ;; This function calls:
   681 ;;		Nothing
   682 ;; This function is called by:
   683 ;;		_half_Duplex
   684 ;; This function uses a non-reentrant model
   685 ;;
   686                           
   687                           	psect	text8
   688   000128                     __ptext8:
   689                           	callstack 0
   690   000128                     _eusart_read:
   691                           	callstack 28
   692   000128                     i2l34:
   693   000128  AA9E               	btfss	3998,5,c	;volatile
   694   00012A  EF99  F000         	goto	i2u3_41
   695   00012E  EF9B  F000         	goto	i2u3_40
   696   000132                     i2u3_41:
   697   000132  EF94  F000         	goto	i2l34
   698   000136                     i2u3_40:
   699   000136                     
   700                           ;../SERIAL_Char_LED.X/eusart.c: 36:     return RCREG;
   701   000136  50AE               	movf	174,w,c	;volatile
   702   000138  0012               	return		;funcret
   703   00013A                     __end_of_eusart_read:
   704                           	callstack 0
   705   000000                     
   706                           	psect	rparam
   707   000000                     
   708                           	psect	temp
   709   000018                     btemp:
   710                           	callstack 0
   711   000018                     	ds	1
   712   000000                     int$flags	set	btemp
   713   000000                     wtemp8	set	btemp+1
   714   000000                     ttemp5	set	btemp+1
   715   000000                     ttemp6	set	btemp+4
   716   000000                     ttemp7	set	btemp+8
   717                           
   718                           	psect	idloc
   719                           
   720                           ;Config register IDLOC0 @ 0x200000
   721                           ;	unspecified, using default values
   722   200000                     	org	2097152
   723   200000  FF                 	db	255
   724                           
   725                           ;Config register IDLOC1 @ 0x200001
   726                           ;	unspecified, using default values
   727   200001                     	org	2097153
   728   200001  FF                 	db	255
   729                           
   730                           ;Config register IDLOC2 @ 0x200002
   731                           ;	unspecified, using default values
   732   200002                     	org	2097154
   733   200002  FF                 	db	255
   734                           
   735                           ;Config register IDLOC3 @ 0x200003
   736                           ;	unspecified, using default values
   737   200003                     	org	2097155
   738   200003  FF                 	db	255
   739                           
   740                           ;Config register IDLOC4 @ 0x200004
   741                           ;	unspecified, using default values
   742   200004                     	org	2097156
   743   200004  FF                 	db	255
   744                           
   745                           ;Config register IDLOC5 @ 0x200005
   746                           ;	unspecified, using default values
   747   200005                     	org	2097157
   748   200005  FF                 	db	255
   749                           
   750                           ;Config register IDLOC6 @ 0x200006
   751                           ;	unspecified, using default values
   752   200006                     	org	2097158
   753   200006  FF                 	db	255
   754                           
   755                           ;Config register IDLOC7 @ 0x200007
   756                           ;	unspecified, using default values
   757   200007                     	org	2097159
   758   200007  FF                 	db	255
   759                           
   760                           	psect	config
   761                           
   762                           ; Padding undefined space
   763   300000                     	org	3145728
   764   300000  FF                 	db	255
   765                           
   766                           ;Config register CONFIG1H @ 0x300001
   767                           ;	Oscillator Selection bits
   768                           ;	OSC = HS, HS oscillator
   769                           ;	Fail-Safe Clock Monitor Enable bit
   770                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   771                           ;	Internal/External Oscillator Switchover bit
   772                           ;	IESO = OFF, Oscillator Switchover mode disabled
   773   300001                     	org	3145729
   774   300001  02                 	db	2
   775                           
   776                           ;Config register CONFIG2L @ 0x300002
   777                           ;	Power-up Timer Enable bit
   778                           ;	PWRT = OFF, PWRT disabled
   779                           ;	Brown-out Reset Enable bits
   780                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
   781                           ;	Brown Out Reset Voltage bits
   782                           ;	BORV = 3, Minimum setting
   783   300002                     	org	3145730
   784   300002  19                 	db	25
   785                           
   786                           ;Config register CONFIG2H @ 0x300003
   787                           ;	Watchdog Timer Enable bit
   788                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   789                           ;	Watchdog Timer Postscale Select bits
   790                           ;	WDTPS = 32768, 1:32768
   791   300003                     	org	3145731
   792   300003  1E                 	db	30
   793                           
   794                           ; Padding undefined space
   795   300004                     	org	3145732
   796   300004  FF                 	db	255
   797                           
   798                           ;Config register CONFIG3H @ 0x300005
   799                           ;	CCP2 MUX bit
   800                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   801                           ;	PORTB A/D Enable bit
   802                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   803                           ;	Low-Power Timer1 Oscillator Enable bit
   804                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   805                           ;	MCLR Pin Enable bit
   806                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   807   300005                     	org	3145733
   808   300005  81                 	db	129
   809                           
   810                           ;Config register CONFIG4L @ 0x300006
   811                           ;	Stack Full/Underflow Reset Enable bit
   812                           ;	STVREN = ON, Stack full/underflow will cause Reset
   813                           ;	Single-Supply ICSP Enable bit
   814                           ;	LVP = OFF, Single-Supply ICSP disabled
   815                           ;	Extended Instruction Set Enable bit
   816                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   817                           ;	Background Debugger Enable bit
   818                           ;	DEBUG = 0x1, unprogrammed default
   819   300006                     	org	3145734
   820   300006  81                 	db	129
   821                           
   822                           ; Padding undefined space
   823   300007                     	org	3145735
   824   300007  FF                 	db	255
   825                           
   826                           ;Config register CONFIG5L @ 0x300008
   827                           ;	Code Protection bit
   828                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
   829                           ;	Code Protection bit
   830                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
   831                           ;	Code Protection bit
   832                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
   833                           ;	Code Protection bit
   834                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
   835   300008                     	org	3145736
   836   300008  0F                 	db	15
   837                           
   838                           ;Config register CONFIG5H @ 0x300009
   839                           ;	Boot Block Code Protection bit
   840                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   841                           ;	Data EEPROM Code Protection bit
   842                           ;	CPD = OFF, Data EEPROM not code-protected
   843   300009                     	org	3145737
   844   300009  C0                 	db	192
   845                           
   846                           ;Config register CONFIG6L @ 0x30000A
   847                           ;	Write Protection bit
   848                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
   849                           ;	Write Protection bit
   850                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
   851                           ;	Write Protection bit
   852                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
   853                           ;	Write Protection bit
   854                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
   855   30000A                     	org	3145738
   856   30000A  0F                 	db	15
   857                           
   858                           ;Config register CONFIG6H @ 0x30000B
   859                           ;	Configuration Register Write Protection bit
   860                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   861                           ;	Boot Block Write Protection bit
   862                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
   863                           ;	Data EEPROM Write Protection bit
   864                           ;	WRTD = OFF, Data EEPROM not write-protected
   865   30000B                     	org	3145739
   866   30000B  E0                 	db	224
   867                           
   868                           ;Config register CONFIG7L @ 0x30000C
   869                           ;	Table Read Protection bit
   870                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
   871                           ;	Table Read Protection bit
   872                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
   873                           ;	Table Read Protection bit
   874                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
   875                           ;	Table Read Protection bit
   876                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
   877   30000C                     	org	3145740
   878   30000C  0F                 	db	15
   879                           
   880                           ;Config register CONFIG7H @ 0x30000D
   881                           ;	Boot Block Table Read Protection bit
   882                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   883   30000D                     	org	3145741
   884   30000D  40                 	db	64
   885                           tosu	equ	0xFFF
   886                           tosh	equ	0xFFE
   887                           tosl	equ	0xFFD
   888                           stkptr	equ	0xFFC
   889                           pclatu	equ	0xFFB
   890                           pclath	equ	0xFFA
   891                           pcl	equ	0xFF9
   892                           tblptru	equ	0xFF8
   893                           tblptrh	equ	0xFF7
   894                           tblptrl	equ	0xFF6
   895                           tablat	equ	0xFF5
   896                           prodh	equ	0xFF4
   897                           prodl	equ	0xFF3
   898                           indf0	equ	0xFEF
   899                           postinc0	equ	0xFEE
   900                           postdec0	equ	0xFED
   901                           preinc0	equ	0xFEC
   902                           plusw0	equ	0xFEB
   903                           fsr0h	equ	0xFEA
   904                           fsr0l	equ	0xFE9
   905                           wreg	equ	0xFE8
   906                           indf1	equ	0xFE7
   907                           postinc1	equ	0xFE6
   908                           postdec1	equ	0xFE5
   909                           preinc1	equ	0xFE4
   910                           plusw1	equ	0xFE3
   911                           fsr1h	equ	0xFE2
   912                           fsr1l	equ	0xFE1
   913                           bsr	equ	0xFE0
   914                           indf2	equ	0xFDF
   915                           postinc2	equ	0xFDE
   916                           postdec2	equ	0xFDD
   917                           preinc2	equ	0xFDC
   918                           plusw2	equ	0xFDB
   919                           fsr2h	equ	0xFDA
   920                           fsr2l	equ	0xFD9
   921                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126      7      23
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    eusart_string@str	PTR unsigned char  size(2) Largest target is 16
		 -> data(COMRAM[16]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _half_Duplex in COMRAM

    _half_Duplex->_eusart_string
    _eusart_string->_eusart_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _half_Duplex in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _half_Duplex in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _half_Duplex in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _half_Duplex in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _half_Duplex in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _half_Duplex in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              5 COMRAM     2     2      0
                        _config_FOSC
                          _config_IO
                   _config_Interrupt
                        _eusart_init
 ---------------------------------------------------------------------------------
 (1) _eusart_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_Interrupt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_IO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_FOSC                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _half_Duplex                                          2     2      0     136
                                              3 COMRAM     2     2      0
                        _eusart_read
                      _eusart_string
 ---------------------------------------------------------------------------------
 (3) _eusart_string                                        2     0      2     136
                                              1 COMRAM     2     0      2
                       _eusart_write
 ---------------------------------------------------------------------------------
 (4) _eusart_write                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _eusart_read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config_FOSC
   _config_IO
   _config_Interrupt
   _eusart_init

 _half_Duplex (ROOT)
   _eusart_read
   _eusart_string
     _eusart_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      27        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E      7      17       1       18.3%
BITBIGSFRhhhl       1E      0       0      17        0.0%
BITBIGSFRllllh      11      0       0      24        0.0%
BITBIGSFRhhlh       11      0       0      18        0.0%
BITBIGSFRhhhh        D      0       0      16        0.0%
BITBIGSFRlh          C      0       0      21        0.0%
BITBIGSFRhlh         8      0       0      20        0.0%
BITBIGSFRhhll        8      0       0      19        0.0%
BITBIGSFRlllh        5      0       0      23        0.0%
BITBIGSFRlllll       3      0       0      25        0.0%
BITBIGSFRllh         1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      17      26        0.0%
DATA                 0      0      17       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Aug 15 20:24:29 2023

                      l19 0126                        l70 014E                        l64 0158  
                      l67 0144                        l83 0026                       l810 003C  
                     l804 0012                       l806 002C                       l814 0040  
                     l808 0034                       l770 0116                       l772 0122  
                     l844 0054                       l790 013A                       l792 0142  
                     l794 0146                       l788 0150                       wreg 000FE8  
           eusart_write@c 0011                      _PIE1 000F9D                      _RCIF 007CF5  
                    i2l22 0102                      i2l31 00E4                      i2l25 0114  
                    i2l34 0128                      i2l37 0138                      i2l76 00AA  
                    _TRMT 007D61                      _data 0001                      _main 0012  
                    fsr2h 000FDA                      indf2 000FDF                      fsr2l 000FD9  
                    btemp 0018                      start 000E              ___param_bank 000000  
                   ?_main 0011                     i2l830 00CC                     i2l824 00B6  
                   i2l832 0088                     i2l826 00BA                     i2l834 0096  
                   i2l828 00C8                     i2l836 009C                     i2l782 0128  
                   i2l766 0102                     i2l838 00A8                     i2l784 0136  
                   i2l768 0110                     _RCREG 000FAE                     _SPBRG 000FAF  
                   _PORTD 000F83                     _TRISD 000F95                     _TXREG 000FAD  
            ?_eusart_init 0011              ?_eusart_read 0011                     ttemp5 0019  
                   ttemp6 001C                     ttemp7 0020                     status 000FD8  
                   wtemp8 0019           __initialization 00E6              __end_of_main 007E  
                  ??_main 0016             __activetblptr 000002                    _ADCON1 000FC1  
                  _INTCON 000FF2                    _OSCCON 000FD3                    i2u1_40 0110  
                  i2u1_41 010C                    i2u3_40 0136                    i2u3_41 0132  
                  i2u5_40 00E4                    i2u5_41 00E0                    i2u6_40 0096  
                  i2u6_41 0092                    clear_0 00EC                    isa$std 000001  
           ?_eusart_write 0011                    tblptru 000FF8                __accesstop 0080  
 __end_of__initialization 00F2             ___rparam_used 000001          eusart_string@str 0012  
          __pcstackCOMRAM 0011            ??_eusart_write 0011          _config_Interrupt 0146  
                 _OSCTUNE 000F9B             _eusart_string 00B6                   __Hparam 0000  
                 __Lparam 0000         __end_of_config_IO 0146                   __pcinit 00E6  
                 __ramtop 0600                   __ptext0 0012                   __ptext1 0116  
                 __ptext2 0146                   __ptext3 013A                   __ptext4 0150  
                 __ptext6 00B6                   __ptext7 0100                   __ptext8 0128  
          __pintcode_body 007E      end_of_initialization 00F2            ?_eusart_string 0012  
           __Lmediumconst 0000                   int_func 007E      __end_of_eusart_write 0116  
           ??_half_Duplex 0014                 _RCSTAbits 000FAB                   postinc0 000FEE  
           ??_config_FOSC 0016                 _TXSTAbits 000FAC  __end_of_config_Interrupt 0150  
     __end_of_half_Duplex 00B6               _BAUDCTLbits 000FB8       start_initialization 00E6  
         ??_eusart_string 0014       __end_of_config_FOSC 015A               __pbssCOMRAM 0001  
           ??_eusart_init 0016             ??_eusart_read 0011               _half_Duplex 0008  
               __pintcode 0008                 _config_IO 013A              _eusart_write 0100  
             _config_FOSC 0150       __end_of_eusart_init 0128       __end_of_eusart_read 013A  
                _PIR1bits 000F9E                ?_config_IO 0011                  __Hrparam 0000  
       ?_config_Interrupt 0011                  __Lrparam 0000        ??_config_Interrupt 0016  
             _eusart_init 0116               _eusart_read 0128                  isa$xinst 000000  
                int$flags 0018               ??_config_IO 0016     __end_of_eusart_string 00E6  
                intlevel2 0000              ?_half_Duplex 0011              ?_config_FOSC 0011  
