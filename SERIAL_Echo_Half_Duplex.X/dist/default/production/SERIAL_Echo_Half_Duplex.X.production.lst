

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Aug 15 14:44:42 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    20   000000                     
    21                           ; Generated 23/03/2023 GMT
    22                           ; 
    23                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F4520 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55   000000                     _RCREG	set	4014
    56   000000                     _TXREG	set	4013
    57   000000                     _SPBRG	set	4015
    58   000000                     _BAUDCTLbits	set	4024
    59   000000                     _TRMT	set	32097
    60   000000                     _OSCTUNE	set	3995
    61   000000                     _RCSTAbits	set	4011
    62   000000                     _TXSTAbits	set	4012
    63   000000                     _RCIF	set	31989
    64   000000                     _ADCON1	set	4033
    65   000000                     _OSCCON	set	4051
    66   000000                     _INTCON	set	4082
    67   000000                     _PIE1	set	3997
    68                           
    69                           ; #config settings
    70                           
    71                           	psect	cinit
    72   007F7C                     __pcinit:
    73                           	callstack 0
    74   007F7C                     start_initialization:
    75                           	callstack 0
    76   007F7C                     __initialization:
    77                           	callstack 0
    78                           
    79                           ; Clear objects allocated to BANK0 (128 bytes)
    80   007F7C  EE00  F080         	lfsr	0,__pbssBANK0
    81   007F80  0E80               	movlw	128
    82   007F82                     clear_0:
    83   007F82  6AEE               	clrf	postinc0,c
    84   007F84  06E8               	decf	wreg,f,c
    85   007F86  E1FD               	bnz	clear_0
    86   007F88                     end_of_initialization:
    87                           	callstack 0
    88   007F88                     __end_of__initialization:
    89                           	callstack 0
    90   007F88  0100               	movlb	0
    91   007F8A  EFD2  F03F         	goto	_main	;jump to C main() function
    92                           
    93                           	psect	bssBANK0
    94   000080                     __pbssBANK0:
    95                           	callstack 0
    96   000080                     _data:
    97                           	callstack 0
    98   000080                     	ds	128
    99                           
   100                           	psect	cstackCOMRAM
   101   000001                     __pcstackCOMRAM:
   102                           	callstack 0
   103   000001                     eusart_write@c:
   104                           	callstack 0
   105                           
   106                           ; 1 bytes @ 0x0
   107   000001                     	ds	1
   108   000002                     eusart_string@str:
   109                           	callstack 0
   110                           
   111                           ; 2 bytes @ 0x1
   112   000002                     	ds	2
   113   000004                     
   114                           ; 1 bytes @ 0x3
   115 ;;
   116 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   117 ;;
   118 ;; *************** function _main *****************
   119 ;; Defined at:
   120 ;;		line 86 in file "Program_main.c"
   121 ;; Parameters:    Size  Location     Type
   122 ;;		None
   123 ;; Auto vars:     Size  Location     Type
   124 ;;		None
   125 ;; Return value:  Size  Location     Type
   126 ;;                  1    wreg      void 
   127 ;; Registers used:
   128 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   129 ;; Tracked objects:
   130 ;;		On entry : 0/0
   131 ;;		On exit  : 0/0
   132 ;;		Unchanged: 0/0
   133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   134 ;;      Params:         0       0       0       0       0       0       0
   135 ;;      Locals:         0       0       0       0       0       0       0
   136 ;;      Temps:          0       0       0       0       0       0       0
   137 ;;      Totals:         0       0       0       0       0       0       0
   138 ;;Total ram usage:        0 bytes
   139 ;; Hardware stack levels required when called: 2
   140 ;; This function calls:
   141 ;;		_config_FOSC
   142 ;;		_config_IO
   143 ;;		_config_Interrupt
   144 ;;		_eusart_init
   145 ;;		_eusart_read
   146 ;;		_eusart_string
   147 ;; This function is called by:
   148 ;;		Startup code after reset
   149 ;; This function uses a non-reentrant model
   150 ;;
   151                           
   152                           	psect	text0
   153   007FA4                     __ptext0:
   154                           	callstack 0
   155   007FA4                     _main:
   156                           	callstack 29
   157   007FA4                     
   158                           ;Program_main.c: 88:     config_FOSC();
   159   007FA4  ECA2  F03F         	call	_config_FOSC	;wreg free
   160                           
   161                           ;Program_main.c: 89:     config_IO();
   162   007FA8  EC9F  F03F         	call	_config_IO	;wreg free
   163                           
   164                           ;Program_main.c: 90:     config_Interrupt();
   165   007FAC  ECA7  F03F         	call	_config_Interrupt	;wreg free
   166                           
   167                           ;Program_main.c: 91:     eusart_init();
   168   007FB0  ECAC  F03F         	call	_eusart_init	;wreg free
   169   007FB4                     l69:
   170                           
   171                           ;Program_main.c: 93:     {;Program_main.c: 94:        data[0] = eusart_read();
   172   007FB4  ECB5  F03F         	call	_eusart_read	;wreg free
   173   007FB8  0100               	movlb	0	; () banked
   174   007FBA  6F80               	movwf	_data& (0+255),b
   175   007FBC                     
   176                           ; BSR set to: 0
   177                           ;Program_main.c: 95:        eusart_string(data);
   178   007FBC  0E80               	movlw	low _data
   179   007FBE  6E02               	movwf	eusart_string@str^0,c
   180   007FC0  0E00               	movlw	high _data
   181   007FC2  6E03               	movwf	(eusart_string@str+1)^0,c
   182   007FC4  ECE8  F03F         	call	_eusart_string	;wreg free
   183   007FC8  EFDA  F03F         	goto	l69
   184   007FCC  EF00  F000         	goto	start
   185   007FD0                     __end_of_main:
   186                           	callstack 0
   187                           
   188 ;; *************** function _eusart_string *****************
   189 ;; Defined at:
   190 ;;		line 23 in file "eusart.c"
   191 ;; Parameters:    Size  Location     Type
   192 ;;  str             2    1[COMRAM] PTR unsigned char 
   193 ;;		 -> data(128), 
   194 ;; Auto vars:     Size  Location     Type
   195 ;;		None
   196 ;; Return value:  Size  Location     Type
   197 ;;                  1    wreg      void 
   198 ;; Registers used:
   199 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   200 ;; Tracked objects:
   201 ;;		On entry : 0/0
   202 ;;		On exit  : 0/0
   203 ;;		Unchanged: 0/0
   204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   205 ;;      Params:         2       0       0       0       0       0       0
   206 ;;      Locals:         0       0       0       0       0       0       0
   207 ;;      Temps:          0       0       0       0       0       0       0
   208 ;;      Totals:         2       0       0       0       0       0       0
   209 ;;Total ram usage:        2 bytes
   210 ;; Hardware stack levels used: 1
   211 ;; Hardware stack levels required when called: 1
   212 ;; This function calls:
   213 ;;		_eusart_write
   214 ;; This function is called by:
   215 ;;		_main
   216 ;; This function uses a non-reentrant model
   217 ;;
   218                           
   219                           	psect	text1
   220   007FD0                     __ptext1:
   221                           	callstack 0
   222   007FD0                     _eusart_string:
   223                           	callstack 29
   224   007FD0                     
   225                           ;eusart.c: 23: void eusart_string(char *str);eusart.c: 24: {;eusart.c: 25:     while(*st
      +                          r!='\0')
   226   007FD0  EFF3  F03F         	goto	l786
   227   007FD4                     l782:
   228                           
   229                           ;eusart.c: 26:     {;eusart.c: 27:         eusart_write(*str);
   230   007FD4  C002  FFD9         	movff	eusart_string@str,fsr2l
   231   007FD8  C003  FFDA         	movff	eusart_string@str+1,fsr2h
   232   007FDC  50DF               	movf	indf2,w,c
   233   007FDE  ECC7  F03F         	call	_eusart_write
   234   007FE2                     
   235                           ;eusart.c: 28:         str++;
   236   007FE2  4A02               	infsnz	eusart_string@str^0,f,c
   237   007FE4  2A03               	incf	(eusart_string@str+1)^0,f,c
   238   007FE6                     l786:
   239                           
   240                           ;eusart.c: 25:     while(*str!='\0')
   241   007FE6  C002  FFD9         	movff	eusart_string@str,fsr2l
   242   007FEA  C003  FFDA         	movff	eusart_string@str+1,fsr2h
   243   007FEE  50DF               	movf	indf2,w,c
   244   007FF0  A4D8               	btfss	status,2,c
   245   007FF2  EFFD  F03F         	goto	u41
   246   007FF6  EFFF  F03F         	goto	u40
   247   007FFA                     u41:
   248   007FFA  EFEA  F03F         	goto	l782
   249   007FFE                     u40:
   250   007FFE  0012               	return		;funcret
   251   008000                     __end_of_eusart_string:
   252                           	callstack 0
   253                           
   254 ;; *************** function _eusart_write *****************
   255 ;; Defined at:
   256 ;;		line 16 in file "eusart.c"
   257 ;; Parameters:    Size  Location     Type
   258 ;;  c               1    wreg     unsigned char 
   259 ;; Auto vars:     Size  Location     Type
   260 ;;  c               1    0[COMRAM] unsigned char 
   261 ;; Return value:  Size  Location     Type
   262 ;;                  1    wreg      void 
   263 ;; Registers used:
   264 ;;		wreg
   265 ;; Tracked objects:
   266 ;;		On entry : 0/0
   267 ;;		On exit  : 0/0
   268 ;;		Unchanged: 0/0
   269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   270 ;;      Params:         0       0       0       0       0       0       0
   271 ;;      Locals:         1       0       0       0       0       0       0
   272 ;;      Temps:          0       0       0       0       0       0       0
   273 ;;      Totals:         1       0       0       0       0       0       0
   274 ;;Total ram usage:        1 bytes
   275 ;; Hardware stack levels used: 1
   276 ;; This function calls:
   277 ;;		Nothing
   278 ;; This function is called by:
   279 ;;		_eusart_string
   280 ;; This function uses a non-reentrant model
   281 ;;
   282                           
   283                           	psect	text2
   284   007F8E                     __ptext2:
   285                           	callstack 0
   286   007F8E                     _eusart_write:
   287                           	callstack 29
   288                           
   289                           ;incstack = 0
   290                           ;eusart_write@c stored from wreg
   291   007F8E  6E01               	movwf	eusart_write@c^0,c
   292   007F90                     l22:
   293   007F90  A2AC               	btfss	4012,1,c	;volatile
   294   007F92  EFCD  F03F         	goto	u11
   295   007F96  EFCF  F03F         	goto	u10
   296   007F9A                     u11:
   297   007F9A  EFC8  F03F         	goto	l22
   298   007F9E                     u10:
   299   007F9E                     
   300                           ;eusart.c: 19:     TXREG = c;
   301   007F9E  C001  FFAD         	movff	eusart_write@c,4013	;volatile
   302   007FA2  0012               	return		;funcret
   303   007FA4                     __end_of_eusart_write:
   304                           	callstack 0
   305                           
   306 ;; *************** function _eusart_read *****************
   307 ;; Defined at:
   308 ;;		line 33 in file "eusart.c"
   309 ;; Parameters:    Size  Location     Type
   310 ;;		None
   311 ;; Auto vars:     Size  Location     Type
   312 ;;		None
   313 ;; Return value:  Size  Location     Type
   314 ;;                  1    wreg      unsigned char 
   315 ;; Registers used:
   316 ;;		wreg, status,2
   317 ;; Tracked objects:
   318 ;;		On entry : 0/0
   319 ;;		On exit  : 0/0
   320 ;;		Unchanged: 0/0
   321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   322 ;;      Params:         0       0       0       0       0       0       0
   323 ;;      Locals:         0       0       0       0       0       0       0
   324 ;;      Temps:          0       0       0       0       0       0       0
   325 ;;      Totals:         0       0       0       0       0       0       0
   326 ;;Total ram usage:        0 bytes
   327 ;; Hardware stack levels used: 1
   328 ;; This function calls:
   329 ;;		Nothing
   330 ;; This function is called by:
   331 ;;		_main
   332 ;; This function uses a non-reentrant model
   333 ;;
   334                           
   335                           	psect	text3
   336   007F6A                     __ptext3:
   337                           	callstack 0
   338   007F6A                     _eusart_read:
   339                           	callstack 30
   340   007F6A                     l34:
   341   007F6A  AA9E               	btfss	3998,5,c	;volatile
   342   007F6C  EFBA  F03F         	goto	u31
   343   007F70  EFBC  F03F         	goto	u30
   344   007F74                     u31:
   345   007F74  EFB5  F03F         	goto	l34
   346   007F78                     u30:
   347   007F78                     
   348                           ;eusart.c: 36:     return RCREG;
   349   007F78  50AE               	movf	174,w,c	;volatile
   350   007F7A  0012               	return		;funcret
   351   007F7C                     __end_of_eusart_read:
   352                           	callstack 0
   353                           
   354 ;; *************** function _eusart_init *****************
   355 ;; Defined at:
   356 ;;		line 4 in file "eusart.c"
   357 ;; Parameters:    Size  Location     Type
   358 ;;		None
   359 ;; Auto vars:     Size  Location     Type
   360 ;;		None
   361 ;; Return value:  Size  Location     Type
   362 ;;                  1    wreg      void 
   363 ;; Registers used:
   364 ;;		wreg, status,2
   365 ;; Tracked objects:
   366 ;;		On entry : 0/0
   367 ;;		On exit  : 0/0
   368 ;;		Unchanged: 0/0
   369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   370 ;;      Params:         0       0       0       0       0       0       0
   371 ;;      Locals:         0       0       0       0       0       0       0
   372 ;;      Temps:          0       0       0       0       0       0       0
   373 ;;      Totals:         0       0       0       0       0       0       0
   374 ;;Total ram usage:        0 bytes
   375 ;; Hardware stack levels used: 1
   376 ;; This function calls:
   377 ;;		Nothing
   378 ;; This function is called by:
   379 ;;		_main
   380 ;; This function uses a non-reentrant model
   381 ;;
   382                           
   383                           	psect	text4
   384   007F58                     __ptext4:
   385                           	callstack 0
   386   007F58                     _eusart_init:
   387                           	callstack 30
   388   007F58                     
   389                           ;eusart.c: 6:     TXSTAbits.TXEN = 1;
   390   007F58  8AAC               	bsf	172,5,c	;volatile
   391                           
   392                           ;eusart.c: 7:     RCSTAbits.CREN = 1;
   393   007F5A  88AB               	bsf	171,4,c	;volatile
   394                           
   395                           ;eusart.c: 8:     TXSTAbits.SYNC = 0;
   396   007F5C  98AC               	bcf	172,4,c	;volatile
   397                           
   398                           ;eusart.c: 9:     RCSTAbits.SPEN = 1;
   399   007F5E  8EAB               	bsf	171,7,c	;volatile
   400                           
   401                           ;eusart.c: 10:     TXSTAbits.BRGH = 0;
   402   007F60  94AC               	bcf	172,2,c	;volatile
   403                           
   404                           ;eusart.c: 11:     BAUDCTLbits.BRG16 = 0;
   405   007F62  96B8               	bcf	184,3,c	;volatile
   406   007F64                     
   407                           ;eusart.c: 12:     SPBRG = 12;
   408   007F64  0E0C               	movlw	12
   409   007F66  6EAF               	movwf	175,c	;volatile
   410   007F68  0012               	return		;funcret
   411   007F6A                     __end_of_eusart_init:
   412                           	callstack 0
   413                           
   414 ;; *************** function _config_Interrupt *****************
   415 ;; Defined at:
   416 ;;		line 80 in file "Program_main.c"
   417 ;; Parameters:    Size  Location     Type
   418 ;;		None
   419 ;; Auto vars:     Size  Location     Type
   420 ;;		None
   421 ;; Return value:  Size  Location     Type
   422 ;;                  1    wreg      void 
   423 ;; Registers used:
   424 ;;		wreg, status,2
   425 ;; Tracked objects:
   426 ;;		On entry : 0/0
   427 ;;		On exit  : 0/0
   428 ;;		Unchanged: 0/0
   429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   430 ;;      Params:         0       0       0       0       0       0       0
   431 ;;      Locals:         0       0       0       0       0       0       0
   432 ;;      Temps:          0       0       0       0       0       0       0
   433 ;;      Totals:         0       0       0       0       0       0       0
   434 ;;Total ram usage:        0 bytes
   435 ;; Hardware stack levels used: 1
   436 ;; This function calls:
   437 ;;		Nothing
   438 ;; This function is called by:
   439 ;;		_main
   440 ;; This function uses a non-reentrant model
   441 ;;
   442                           
   443                           	psect	text5
   444   007F4E                     __ptext5:
   445                           	callstack 0
   446   007F4E                     _config_Interrupt:
   447                           	callstack 30
   448   007F4E                     
   449                           ;Program_main.c: 82:     INTCON = 0XC0;
   450   007F4E  0EC0               	movlw	192
   451   007F50  6EF2               	movwf	242,c	;volatile
   452                           
   453                           ;Program_main.c: 83:     PIE1 = 0X00;
   454   007F52  0E00               	movlw	0
   455   007F54  6E9D               	movwf	157,c	;volatile
   456   007F56  0012               	return		;funcret
   457   007F58                     __end_of_config_Interrupt:
   458                           	callstack 0
   459                           
   460 ;; *************** function _config_IO *****************
   461 ;; Defined at:
   462 ;;		line 75 in file "Program_main.c"
   463 ;; Parameters:    Size  Location     Type
   464 ;;		None
   465 ;; Auto vars:     Size  Location     Type
   466 ;;		None
   467 ;; Return value:  Size  Location     Type
   468 ;;                  1    wreg      void 
   469 ;; Registers used:
   470 ;;		wreg, status,2
   471 ;; Tracked objects:
   472 ;;		On entry : 0/0
   473 ;;		On exit  : 0/0
   474 ;;		Unchanged: 0/0
   475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   476 ;;      Params:         0       0       0       0       0       0       0
   477 ;;      Locals:         0       0       0       0       0       0       0
   478 ;;      Temps:          0       0       0       0       0       0       0
   479 ;;      Totals:         0       0       0       0       0       0       0
   480 ;;Total ram usage:        0 bytes
   481 ;; Hardware stack levels used: 1
   482 ;; This function calls:
   483 ;;		Nothing
   484 ;; This function is called by:
   485 ;;		_main
   486 ;; This function uses a non-reentrant model
   487 ;;
   488                           
   489                           	psect	text6
   490   007F3E                     __ptext6:
   491                           	callstack 0
   492   007F3E                     _config_IO:
   493                           	callstack 30
   494   007F3E                     
   495                           ;Program_main.c: 77:     ADCON1 = 0X0F;
   496   007F3E  0E0F               	movlw	15
   497   007F40  6EC1               	movwf	193,c	;volatile
   498   007F42  0012               	return		;funcret
   499   007F44                     __end_of_config_IO:
   500                           	callstack 0
   501                           
   502 ;; *************** function _config_FOSC *****************
   503 ;; Defined at:
   504 ;;		line 70 in file "Program_main.c"
   505 ;; Parameters:    Size  Location     Type
   506 ;;		None
   507 ;; Auto vars:     Size  Location     Type
   508 ;;		None
   509 ;; Return value:  Size  Location     Type
   510 ;;                  1    wreg      void 
   511 ;; Registers used:
   512 ;;		wreg, status,2
   513 ;; Tracked objects:
   514 ;;		On entry : 0/0
   515 ;;		On exit  : 0/0
   516 ;;		Unchanged: 0/0
   517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   518 ;;      Params:         0       0       0       0       0       0       0
   519 ;;      Locals:         0       0       0       0       0       0       0
   520 ;;      Temps:          0       0       0       0       0       0       0
   521 ;;      Totals:         0       0       0       0       0       0       0
   522 ;;Total ram usage:        0 bytes
   523 ;; Hardware stack levels used: 1
   524 ;; This function calls:
   525 ;;		Nothing
   526 ;; This function is called by:
   527 ;;		_main
   528 ;; This function uses a non-reentrant model
   529 ;;
   530                           
   531                           	psect	text7
   532   007F44                     __ptext7:
   533                           	callstack 0
   534   007F44                     _config_FOSC:
   535                           	callstack 30
   536   007F44                     
   537                           ;Program_main.c: 72:     OSCCON = 0X00;
   538   007F44  0E00               	movlw	0
   539   007F46  6ED3               	movwf	211,c	;volatile
   540                           
   541                           ;Program_main.c: 73:     OSCTUNE = 0X00;
   542   007F48  0E00               	movlw	0
   543   007F4A  6E9B               	movwf	155,c	;volatile
   544   007F4C  0012               	return		;funcret
   545   007F4E                     __end_of_config_FOSC:
   546                           	callstack 0
   547   000000                     
   548                           	psect	rparam
   549   000000                     
   550                           	psect	idloc
   551                           
   552                           ;Config register IDLOC0 @ 0x200000
   553                           ;	unspecified, using default values
   554   200000                     	org	2097152
   555   200000  FF                 	db	255
   556                           
   557                           ;Config register IDLOC1 @ 0x200001
   558                           ;	unspecified, using default values
   559   200001                     	org	2097153
   560   200001  FF                 	db	255
   561                           
   562                           ;Config register IDLOC2 @ 0x200002
   563                           ;	unspecified, using default values
   564   200002                     	org	2097154
   565   200002  FF                 	db	255
   566                           
   567                           ;Config register IDLOC3 @ 0x200003
   568                           ;	unspecified, using default values
   569   200003                     	org	2097155
   570   200003  FF                 	db	255
   571                           
   572                           ;Config register IDLOC4 @ 0x200004
   573                           ;	unspecified, using default values
   574   200004                     	org	2097156
   575   200004  FF                 	db	255
   576                           
   577                           ;Config register IDLOC5 @ 0x200005
   578                           ;	unspecified, using default values
   579   200005                     	org	2097157
   580   200005  FF                 	db	255
   581                           
   582                           ;Config register IDLOC6 @ 0x200006
   583                           ;	unspecified, using default values
   584   200006                     	org	2097158
   585   200006  FF                 	db	255
   586                           
   587                           ;Config register IDLOC7 @ 0x200007
   588                           ;	unspecified, using default values
   589   200007                     	org	2097159
   590   200007  FF                 	db	255
   591                           
   592                           	psect	config
   593                           
   594                           ; Padding undefined space
   595   300000                     	org	3145728
   596   300000  FF                 	db	255
   597                           
   598                           ;Config register CONFIG1H @ 0x300001
   599                           ;	Oscillator Selection bits
   600                           ;	OSC = HS, HS oscillator
   601                           ;	Fail-Safe Clock Monitor Enable bit
   602                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   603                           ;	Internal/External Oscillator Switchover bit
   604                           ;	IESO = OFF, Oscillator Switchover mode disabled
   605   300001                     	org	3145729
   606   300001  02                 	db	2
   607                           
   608                           ;Config register CONFIG2L @ 0x300002
   609                           ;	Power-up Timer Enable bit
   610                           ;	PWRT = OFF, PWRT disabled
   611                           ;	Brown-out Reset Enable bits
   612                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
   613                           ;	Brown Out Reset Voltage bits
   614                           ;	BORV = 3, Minimum setting
   615   300002                     	org	3145730
   616   300002  19                 	db	25
   617                           
   618                           ;Config register CONFIG2H @ 0x300003
   619                           ;	Watchdog Timer Enable bit
   620                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   621                           ;	Watchdog Timer Postscale Select bits
   622                           ;	WDTPS = 32768, 1:32768
   623   300003                     	org	3145731
   624   300003  1E                 	db	30
   625                           
   626                           ; Padding undefined space
   627   300004                     	org	3145732
   628   300004  FF                 	db	255
   629                           
   630                           ;Config register CONFIG3H @ 0x300005
   631                           ;	CCP2 MUX bit
   632                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   633                           ;	PORTB A/D Enable bit
   634                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   635                           ;	Low-Power Timer1 Oscillator Enable bit
   636                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   637                           ;	MCLR Pin Enable bit
   638                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   639   300005                     	org	3145733
   640   300005  81                 	db	129
   641                           
   642                           ;Config register CONFIG4L @ 0x300006
   643                           ;	Stack Full/Underflow Reset Enable bit
   644                           ;	STVREN = ON, Stack full/underflow will cause Reset
   645                           ;	Single-Supply ICSP Enable bit
   646                           ;	LVP = OFF, Single-Supply ICSP disabled
   647                           ;	Extended Instruction Set Enable bit
   648                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   649                           ;	Background Debugger Enable bit
   650                           ;	DEBUG = 0x1, unprogrammed default
   651   300006                     	org	3145734
   652   300006  81                 	db	129
   653                           
   654                           ; Padding undefined space
   655   300007                     	org	3145735
   656   300007  FF                 	db	255
   657                           
   658                           ;Config register CONFIG5L @ 0x300008
   659                           ;	Code Protection bit
   660                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
   661                           ;	Code Protection bit
   662                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
   663                           ;	Code Protection bit
   664                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
   665                           ;	Code Protection bit
   666                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
   667   300008                     	org	3145736
   668   300008  0F                 	db	15
   669                           
   670                           ;Config register CONFIG5H @ 0x300009
   671                           ;	Boot Block Code Protection bit
   672                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   673                           ;	Data EEPROM Code Protection bit
   674                           ;	CPD = OFF, Data EEPROM not code-protected
   675   300009                     	org	3145737
   676   300009  C0                 	db	192
   677                           
   678                           ;Config register CONFIG6L @ 0x30000A
   679                           ;	Write Protection bit
   680                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
   681                           ;	Write Protection bit
   682                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
   683                           ;	Write Protection bit
   684                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
   685                           ;	Write Protection bit
   686                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
   687   30000A                     	org	3145738
   688   30000A  0F                 	db	15
   689                           
   690                           ;Config register CONFIG6H @ 0x30000B
   691                           ;	Configuration Register Write Protection bit
   692                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   693                           ;	Boot Block Write Protection bit
   694                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
   695                           ;	Data EEPROM Write Protection bit
   696                           ;	WRTD = OFF, Data EEPROM not write-protected
   697   30000B                     	org	3145739
   698   30000B  E0                 	db	224
   699                           
   700                           ;Config register CONFIG7L @ 0x30000C
   701                           ;	Table Read Protection bit
   702                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
   703                           ;	Table Read Protection bit
   704                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
   705                           ;	Table Read Protection bit
   706                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
   707                           ;	Table Read Protection bit
   708                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
   709   30000C                     	org	3145740
   710   30000C  0F                 	db	15
   711                           
   712                           ;Config register CONFIG7H @ 0x30000D
   713                           ;	Boot Block Table Read Protection bit
   714                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   715   30000D                     	org	3145741
   716   30000D  40                 	db	64
   717                           tosu	equ	0xFFF
   718                           tosh	equ	0xFFE
   719                           tosl	equ	0xFFD
   720                           stkptr	equ	0xFFC
   721                           pclatu	equ	0xFFB
   722                           pclath	equ	0xFFA
   723                           pcl	equ	0xFF9
   724                           tblptru	equ	0xFF8
   725                           tblptrh	equ	0xFF7
   726                           tblptrl	equ	0xFF6
   727                           tablat	equ	0xFF5
   728                           prodh	equ	0xFF4
   729                           prodl	equ	0xFF3
   730                           indf0	equ	0xFEF
   731                           postinc0	equ	0xFEE
   732                           postdec0	equ	0xFED
   733                           preinc0	equ	0xFEC
   734                           plusw0	equ	0xFEB
   735                           fsr0h	equ	0xFEA
   736                           fsr0l	equ	0xFE9
   737                           wreg	equ	0xFE8
   738                           indf1	equ	0xFE7
   739                           postinc1	equ	0xFE6
   740                           postdec1	equ	0xFE5
   741                           preinc1	equ	0xFE4
   742                           plusw1	equ	0xFE3
   743                           fsr1h	equ	0xFE2
   744                           fsr1l	equ	0xFE1
   745                           bsr	equ	0xFE0
   746                           indf2	equ	0xFDF
   747                           postinc2	equ	0xFDE
   748                           postdec2	equ	0xFDD
   749                           preinc2	equ	0xFDC
   750                           plusw2	equ	0xFDB
   751                           fsr2h	equ	0xFDA
   752                           fsr2l	equ	0xFD9
   753                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         128
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      3       3
    BANK0           128      0     128
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    eusart_string@str	PTR unsigned char  size(2) Largest target is 128
		 -> data(BANK0[128]), 


Critical Paths under _main in COMRAM

    _main->_eusart_string
    _eusart_string->_eusart_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     136
                        _config_FOSC
                          _config_IO
                   _config_Interrupt
                        _eusart_init
                        _eusart_read
                      _eusart_string
 ---------------------------------------------------------------------------------
 (1) _eusart_string                                        2     0      2     136
                                              1 COMRAM     2     0      2
                       _eusart_write
 ---------------------------------------------------------------------------------
 (2) _eusart_write                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _eusart_read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _eusart_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_Interrupt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_IO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_FOSC                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config_FOSC
   _config_IO
   _config_Interrupt
   _eusart_init
   _eusart_read
   _eusart_string
     _eusart_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      25        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      80       5      100.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      3       3       1        2.4%
BITBIGSFRhhhl       1E      0       0      17        0.0%
BITBIGSFRlll        1B      0       0      23        0.0%
BITBIGSFRhhlh       11      0       0      18        0.0%
BITBIGSFRhhhh        D      0       0      16        0.0%
BITBIGSFRlh          C      0       0      21        0.0%
BITBIGSFRhlh         8      0       0      20        0.0%
BITBIGSFRhhll        8      0       0      19        0.0%
BITBIGSFRllh         1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      83      24        0.0%
DATA                 0      0      83       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Aug 15 14:44:42 2023

                      l22 7F90                        l31 7FFE                        l25 7FA2  
                      l34 7F6A                        l19 7F68                        l61 7F42  
                      l37 7F7A                        l64 7F56                        l58 7F4C  
                      l69 7FB4                        u10 7F9E                        u11 7F9A  
                      u30 7F78                        u31 7F74                        u40 7FFE  
                      u41 7FFA                       l750 7F9E                       l752 7F58  
                     l770 7F44                       l754 7F64                       l772 7F3E  
                     l764 7F6A                       l748 7F90                       l780 7FD0  
                     l774 7F4E                       l766 7F78                       l782 7FD4  
                     l790 7FBC                       l784 7FE2                       l786 7FE6  
                     l788 7FA4                       wreg 000FE8             eusart_write@c 0001  
                    _PIE1 000F9D                      _RCIF 007CF5                      _TRMT 007D61  
                    _data 0080                      _main 7FA4                      fsr2h 000FDA  
                    indf2 000FDF                      fsr2l 000FD9                      start 0000  
            ___param_bank 000000                     ?_main 0001                     _RCREG 000FAE  
                   _SPBRG 000FAF                     _TXREG 000FAD              ?_eusart_init 0001  
            ?_eusart_read 0001                     status 000FD8           __initialization 7F7C  
            __end_of_main 7FD0                    ??_main 0004             __activetblptr 000000  
                  _ADCON1 000FC1                    _INTCON 000FF2                    _OSCCON 000FD3  
                  clear_0 7F82                    isa$std 000001             ?_eusart_write 0001  
              __accesstop 0080   __end_of__initialization 7F88             ___rparam_used 000001  
        eusart_string@str 0002            __pcstackCOMRAM 0001            ??_eusart_write 0001  
        _config_Interrupt 7F4E                __pbssBANK0 0080                   _OSCTUNE 000F9B  
           _eusart_string 7FD0                   __Hparam 0000                   __Lparam 0000  
       __end_of_config_IO 7F44                   __pcinit 7F7C                   __ramtop 0600  
                 __ptext0 7FA4                   __ptext1 7FD0                   __ptext2 7F8E  
                 __ptext3 7F6A                   __ptext4 7F58                   __ptext5 7F4E  
                 __ptext6 7F3E                   __ptext7 7F44      end_of_initialization 7F88  
          ?_eusart_string 0002      __end_of_eusart_write 7FA4                 _RCSTAbits 000FAB  
                 postinc0 000FEE             ??_config_FOSC 0001                 _TXSTAbits 000FAC  
__end_of_config_Interrupt 7F58               _BAUDCTLbits 000FB8       start_initialization 7F7C  
         ??_eusart_string 0004       __end_of_config_FOSC 7F4E             ??_eusart_init 0001  
           ??_eusart_read 0001                 _config_IO 7F3E              _eusart_write 7F8E  
             _config_FOSC 7F44       __end_of_eusart_init 7F6A       __end_of_eusart_read 7F7C  
              ?_config_IO 0001                  __Hrparam 0000         ?_config_Interrupt 0001  
                __Lrparam 0000        ??_config_Interrupt 0001               _eusart_init 7F58  
             _eusart_read 7F6A                  isa$xinst 000000               ??_config_IO 0001  
   __end_of_eusart_string 8000              ?_config_FOSC 0001  
